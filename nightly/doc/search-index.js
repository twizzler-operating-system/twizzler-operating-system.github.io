var searchIndex = JSON.parse('{\
"image_builder":{"doc":"","t":[5,5,5],"n":["create_disk_images","create_uefi_disk_image","main"],"q":["image_builder","",""],"d":["","",""],"i":[0,0,0],"f":[[[["path",3],["path",3]],["pathbuf",3]],[[["path",3],["path",3]],["result",6]],[[]]],"p":[]},\
"init":{"doc":"","t":[7,7,7,3,11,11,11,5,11,5,5,5,5,11,11,11,12],"n":["BAR","BAZ","FOO","Foo","borrow","borrow_mut","from","get_user_input","into","main","test_mutex","test_thread_sync","test_thread_sync_timeout","try_from","try_into","type_id","x"],"q":["init","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,1,1,1,0,1,0,0,0,0,1,1,1,1],"f":[null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null],"p":[[3,"Foo"]]},\
"initrd_gen":{"doc":"","t":[5],"n":["main"],"q":["initrd_gen"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"twizzler_abi":{"doc":"This library provides a common interface for applications â€¦","t":[0,0,0,0,0,5,0,0,0,0,0,0,5,5,5,0,5,13,4,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,3,11,11,11,5,5,11,12,11,11,11,12,18,3,3,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,3,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,4,13,3,3,4,13,3,3,18,13,13,18,13,13,13,13,13,13,13,13,13,4,3,4,3,4,13,3,4,18,3,13,13,18,18,13,13,13,3,13,4,3,13,4,13,13,13,3,13,3,13,4,13,13,13,13,13,3,13,4,4,13,3,4,3,4,13,4,3,4,4,6,3,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,5,5,5,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,3,11,11,5,11,11,5,5,11,11,11,5,5],"n":["alloc","arch","aux","exec","object","ready","rt1","simple_mutex","slot","syscall","thread","time","global_alloc","global_free","global_realloc","syscall","raw_syscall","Arguments","AuxEntry","Environment","ExecId","Null","ProgramHeaders","borrow","borrow_mut","clone","eq","fmt","from","into","ne","try_from","try_into","type_id","0","0","0","0","1","Segment","borrow","borrow_mut","from","get_current_exe_id","get_segment","into","len","try_from","try_into","type_id","vaddr","EXEC","ObjID","Protections","READ","WRITE","all","as_ref","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow_mut","borrow_mut","clone","clone","cmp","cmp","complement","contains","difference","empty","eq","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","insert","intersection","intersects","into","into","is_all","is_empty","ne","ne","new","new_from_parts","not","partial_cmp","partial_cmp","remove","set","split","sub","sub_assign","symmetric_difference","toggle","try_from","try_from","try_into","try_into","type_id","type_id","union","twz_runtime_start","Mutex","borrow","borrow_mut","from","into","is_locked","lock","new","try_from","try_into","try_lock","type_id","unlock","global_allocate","global_release","to_vaddr_range","BackingType","Buffer","ClockFlags","ClockInfo","ClockSource","Console","CreateTieFlags","CreateTieSpec","DISCARD_ON_FULL","Equal","Exit","INVERT","IOError","InvalidArgument","InvalidArgument","InvalidArgument","InvalidArgument","InvalidProtections","InvalidReference","InvalidSlot","KernelConsoleRead","KernelConsoleReadBufferError","KernelConsoleReadBufferFlags","KernelConsoleReadError","KernelConsoleReadFlags","KernelConsoleReadSource","KernelConsoleWrite","KernelConsoleWriteFlags","LifetimeType","MONOTONIC","MapFlags","MaxSyscalls","Monotonic","NONBLOCKING","NONBLOCKING","NoSuchDevice","Normal","Null","ObjectCreate","ObjectCreate","ObjectCreateError","ObjectCreateFlags","ObjectMap","ObjectMapError","ObjectNotFound","ObjectNotFound","ObjectRef","ObjectSource","Persistent","ReadClockFlags","ReadClockInfo","ReadClockInfoError","RealTime","SetTls","Sleep","SourceMisalignment","Spawn","SysInfo","SysInfo","Syscall","ThreadControl","ThreadCtrl","ThreadSpawnArgs","ThreadSpawnError","ThreadSpawnFlags","ThreadSync","ThreadSync","ThreadSyncError","ThreadSyncFlags","ThreadSyncOp","ThreadSyncReference","ThreadSyncResult","ThreadSyncSleep","ThreadSyncWake","Timeout","Unknown","Unknown","Unknown","Unknown","Unknown","Unknown","Unknown","Virtual","Volatile","Wake","WouldBlock","WouldBlock","Yield","all","all","all","all","all","all","all","all","all","all","arg","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","complement","complement","complement","complement","complement","complement","complement","complement","complement","complement","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","count","cpu_count","cpu_count","current_value","default","dest_start","difference","difference","difference","difference","difference","difference","difference","difference","difference","difference","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","entry","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","flags","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","get_result","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","id","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_monotonic","len","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","new","new","new","new","new","new","new_sleep","new_wake","not","not","not","not","not","not","not","not","not","not","num","op","page_size","page_size","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","precision","reference","reference","remove","remove","remove","remove","remove","remove","remove","remove","remove","remove","set","set","set","set","set","set","set","set","set","set","src_start","stack_base","stack_size","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","sys_info","sys_kernel_console_read","sys_kernel_console_read_buffer","sys_kernel_console_write","sys_object_create","sys_object_map","sys_read_clock_info","sys_spawn","sys_thread_exit","sys_thread_settls","sys_thread_sync","sys_thread_yield","tls","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","union","union","union","union","union","union","union","union","value","version","0","0","1","1","0","0","1","ThreadRepr","borrow","borrow_mut","exit","from","into","join","spawn","try_from","try_into","type_id","get_monotonic","get_systemtime"],"q":["twizzler_abi","","","","","","","","","","","","twizzler_abi::alloc","","","twizzler_abi::arch","twizzler_abi::arch::syscall","twizzler_abi::aux","","","","","","","","","","","","","","","","","twizzler_abi::aux::AuxEntry","","","","","twizzler_abi::exec","","","","","","","","","","","","twizzler_abi::object","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","twizzler_abi::rt1","twizzler_abi::simple_mutex","","","","","","","","","","","","","twizzler_abi::slot","","","twizzler_abi::syscalltwizzler_abi::syscall::ThreadSync","","","","twizzler_abi::syscall::ThreadSyncReference","","","twizzler_abi::thread","","","","","","","","","","","twizzler_abi::time",""],"d":["Global allocation. Used by the Rust standard library as â€¦","Architecture-dependent code, will include submodules for â€¦","When running a new program (and thus, initializing a new â€¦","Some runtime-available executable information. Mostly used â€¦","Low-level object APIs, mostly around IDs and basic things â€¦","Simple callback into twizzler_abi made by the standard â€¦","Runtime functions for Twizzler userspace. This part of the â€¦","Very simple and unsafe Mutex for internal locking needs. â€¦","Manage slots in the address space. Currently not finished.","Wrapper functions around for raw_syscall, providing a â€¦","","Raw time handling, provides a way to get a monotonic timer â€¦","Allocate a region of memory as specified by <code>layout</code>. â€¦","Free a region of previously allocated memory. If ptr is â€¦","Reallocate a region of memory. Acts like realloc.","","Call into the kernel to perform a synchronous system call. â€¦","A pointer to the arguments array.","Auxillary information provided to a new program on runtime â€¦","A pointer to the env var array.","The object ID of the executable.","Ends the aux array.","A pointer to this programâ€™s program headers, and the â€¦","","","","","","","","","","","","","","","","","A particular segment of the loaded executable, â€¦","","","","Returns the object ID of the running executable.","Return a given segment for a given loaded executable or â€¦","","","","","","","Exec allowed.","An object ID, represented as a transparent wrapper type. â€¦","Mapping protections for mapping objects into the address â€¦","Read allowed.","Write allowed.","Returns the set containing all flags.","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags â€¦","Toggles the set of flags.","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained â€¦","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","","","","","","","Convert from underlying bit representation, unless that â€¦","Convert from underlying bit representation, dropping any â€¦","Convert from underlying bit representation, preserving all â€¦","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and â€¦","Returns <code>true</code> if there are flags common to both <code>self</code> and â€¦","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","","Create a new ObjID out of a 128 bit value.","Build a new ObjID out of a high part and a low part.","Returns the complement of this set of flags.","","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the â€¦","Split an object ID into upper and lower values, useful for â€¦","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> â€¦","Toggles the specified flags in-place.","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Called from _start to initialize the runtime and pass â€¦","Simple mutex, supporting sleeping and wakeup. Does no â€¦","","","","","","Lock a mutex, which can be unlocked by calling â€¦","Construct a new mutex.","","","Similar to Mutex::lock, but if we canâ€™t immediately grab â€¦","","Unlock a mutex locked with Mutex::lock.","Allocate a slot in the address space where we could map a â€¦","Release a slot for reuse.","Return the vaddr range of a slot (start address, end â€¦","The backing memory type for this object. Currently doesnâ€™â€¦","Read from the kernel write buffer.","Flags about a given clock or clock read.","Information about a given clock source, including â€¦","","Read from the console itself.","Flags controlling how a particular object tie operates.","A specification of ties to create. (see the book for more â€¦","If the buffer is full, discard this write instead of â€¦","Compare for equality","Exit the thread. arg1 and arg2 should be code and location â€¦","Invert the decision test for sleeping the thread.","The input mechanism had an internal error.","An argument was invalid.","One of the arguments was invalid.","One of the arguments was invalid.   ","One of the arguments was invalid.   ","The specified protections were invalid.","The reference was invalid.","The specified slot was invalid.","Read data from the kernel console, either buffer or input.","Possible errors returned by reading from the kernel consoleâ€¦","Flags to pass to sys_kernel_console_read_buffer.","Possible errors returned by reading from the kernel consoleâ€¦","Flags to pass to sys_kernel_console_read.","Possible sources for a kernel console read syscall.","Write data to the kernel console.","Flags to pass to sys_kernel_console_write.","The base lifetime type of the object. Note that this does â€¦","","Flags to pass to sys_object_map.","","","If the read would block, return instead.","If the operation would block, return instead.","Failed to read because there was no input mechanism made â€¦","The default, let the kernel decide based on the â€¦","","Full object creation specification, minus ties.","Create new object.","Possible error returns for sys_object_create.","Flags to pass to the object create system call.","Map an object into address space.","Possible error values for sys_object_map.","A source or tie object was not found.","The specified object was not found.","","Specifications for an object-copy from a source object. â€¦","This object is persistent, and should be deleted only â€¦","Flags to pass to sys_read_clock_info.","Read clock information","Possible error values for sys_read_clock_info.","","Set threadâ€™s TLS pointer","","The kernel could not handle one of the source ranges.","Spawn a new thread.","Information about the system.","Returns system info","All possible Synchronous syscalls into the Twizzler kernel.","Possible Thread Control operations","General thread control functions.","Arguments to pass to sys_spawn.","Possible error values for sys_spawn.","Flags to pass to sys_spawn.","Either a sleep or wake request. The syscall comprises of a â€¦","Sync a thread with other threads using some number of â€¦","Possible error returns for sys_thread_sync.","Flags to pass to sys_thread_sync.","Possible operations the kernel can perform when looking at â€¦","A reference to a piece of data. May either be a â€¦","","Specification for a thread sleep request.","Specification for a thread wake request.","The operation timed out.","Unknown error.","Unknown error.","An unknown error.","An unknown error occurred.","An unknown error occurred.","An unknown error occurred.","An unknown error occurred.","","This object is volatile, and is expected to be deleted â€¦","","Operation would block, but non-blocking was requested.","Operation would block, but non-blocking was requested.","Yield the threadâ€™s CPU time now. The actual effect of â€¦","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags â€¦","Returns the left flags, but with all the right flags â€¦","Returns the left flags, but with all the right flags â€¦","Returns the left flags, but with all the right flags â€¦","Returns the left flags, but with all the right flags â€¦","Returns the left flags, but with all the right flags â€¦","Returns the left flags, but with all the right flags â€¦","Returns the left flags, but with all the right flags â€¦","Returns the left flags, but with all the right flags â€¦","Returns the left flags, but with all the right flags â€¦","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Apply the operation to two values, returning the result.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained â€¦","Returns <code>true</code> if all of the flags in <code>other</code> are contained â€¦","Returns <code>true</code> if all of the flags in <code>other</code> are contained â€¦","Returns <code>true</code> if all of the flags in <code>other</code> are contained â€¦","Returns <code>true</code> if all of the flags in <code>other</code> are contained â€¦","Returns <code>true</code> if all of the flags in <code>other</code> are contained â€¦","Returns <code>true</code> if all of the flags in <code>other</code> are contained â€¦","Returns <code>true</code> if all of the flags in <code>other</code> are contained â€¦","Returns <code>true</code> if all of the flags in <code>other</code> are contained â€¦","Returns <code>true</code> if all of the flags in <code>other</code> are contained â€¦","Number of threads to wake up.","Get the number of CPUs on the system.","The number of CPUs on this system. Hyperthreads are â€¦","Get the current value of a clock source.","","The offset into the dest object to start the copy to.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Flags to apply to this sleep request.","Flags. Currently unused.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert from underlying bit representation, unless that â€¦","Convert from underlying bit representation, unless that â€¦","Convert from underlying bit representation, unless that â€¦","Convert from underlying bit representation, unless that â€¦","Convert from underlying bit representation, unless that â€¦","Convert from underlying bit representation, unless that â€¦","Convert from underlying bit representation, unless that â€¦","Convert from underlying bit representation, unless that â€¦","Convert from underlying bit representation, unless that â€¦","Convert from underlying bit representation, unless that â€¦","Convert from underlying bit representation, dropping any â€¦","Convert from underlying bit representation, dropping any â€¦","Convert from underlying bit representation, dropping any â€¦","Convert from underlying bit representation, dropping any â€¦","Convert from underlying bit representation, dropping any â€¦","Convert from underlying bit representation, dropping any â€¦","Convert from underlying bit representation, dropping any â€¦","Convert from underlying bit representation, dropping any â€¦","Convert from underlying bit representation, dropping any â€¦","Convert from underlying bit representation, dropping any â€¦","Convert from underlying bit representation, preserving all â€¦","Convert from underlying bit representation, preserving all â€¦","Convert from underlying bit representation, preserving all â€¦","Convert from underlying bit representation, preserving all â€¦","Convert from underlying bit representation, preserving all â€¦","Convert from underlying bit representation, preserving all â€¦","Convert from underlying bit representation, preserving all â€¦","Convert from underlying bit representation, preserving all â€¦","Convert from underlying bit representation, preserving all â€¦","Convert from underlying bit representation, preserving all â€¦","","","","","","","","","","","Get the result of the thread sync operation.","","","","","","","","","","","The ID of the source object.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and â€¦","Returns the intersection between the flags in <code>self</code> and â€¦","Returns the intersection between the flags in <code>self</code> and â€¦","Returns the intersection between the flags in <code>self</code> and â€¦","Returns the intersection between the flags in <code>self</code> and â€¦","Returns the intersection between the flags in <code>self</code> and â€¦","Returns the intersection between the flags in <code>self</code> and â€¦","Returns the intersection between the flags in <code>self</code> and â€¦","Returns the intersection between the flags in <code>self</code> and â€¦","Returns the intersection between the flags in <code>self</code> and â€¦","Returns <code>true</code> if there are flags common to both <code>self</code> and â€¦","Returns <code>true</code> if there are flags common to both <code>self</code> and â€¦","Returns <code>true</code> if there are flags common to both <code>self</code> and â€¦","Returns <code>true</code> if there are flags common to both <code>self</code> and â€¦","Returns <code>true</code> if there are flags common to both <code>self</code> and â€¦","Returns <code>true</code> if there are flags common to both <code>self</code> and â€¦","Returns <code>true</code> if there are flags common to both <code>self</code> and â€¦","Returns <code>true</code> if there are flags common to both <code>self</code> and â€¦","Returns <code>true</code> if there are flags common to both <code>self</code> and â€¦","Returns <code>true</code> if there are flags common to both <code>self</code> and â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Is the clock source monotonic?","The length of the copy.","","","","","","","","","","","","","","","","","","","","Construct a new thread sync sleep request. The kernel will â€¦","Construct a new thread wake request. The reference works â€¦","Construct a new ObjectSource.","Build a new object create specification.","Create a new CreateTieSpec.","Construct a new ThreadSpawnArgs.","Construct a new ClockInfo. You probably want to be getting â€¦","Build a sleep request.","Build a wake request.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Return the number associated with this syscall.","The operation to compare *reference and value to.","Get the page size of the system.","The size of a virtual address page on this system.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the precision of a clock source.","Reference to an atomic u64 that we will compare to.","Reference to the word for which we will wake up threads â€¦","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the â€¦","Inserts or removes the specified flags depending on the â€¦","Inserts or removes the specified flags depending on the â€¦","Inserts or removes the specified flags depending on the â€¦","Inserts or removes the specified flags depending on the â€¦","Inserts or removes the specified flags depending on the â€¦","Inserts or removes the specified flags depending on the â€¦","Inserts or removes the specified flags depending on the â€¦","Inserts or removes the specified flags depending on the â€¦","Inserts or removes the specified flags depending on the â€¦","The offset into the source object to start the copy.","","","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> â€¦","Returns the symmetric difference between the flags in <code>self</code> â€¦","Returns the symmetric difference between the flags in <code>self</code> â€¦","Returns the symmetric difference between the flags in <code>self</code> â€¦","Returns the symmetric difference between the flags in <code>self</code> â€¦","Returns the symmetric difference between the flags in <code>self</code> â€¦","Returns the symmetric difference between the flags in <code>self</code> â€¦","Returns the symmetric difference between the flags in <code>self</code> â€¦","Returns the symmetric difference between the flags in <code>self</code> â€¦","Returns the symmetric difference between the flags in <code>self</code> â€¦","Get a SysInfo struct from the kernel.","Read from the kernel console input, placing data into â€¦","Read from the kernel console buffer, placing data into â€¦","Write to the kernel console.","Create an object, returning either its ID or an error.","Map an object into the address space with the specified â€¦","Read information about a give clock, as specified by clock â€¦","Spawn a new thread, returning the ObjID of the threadâ€™s â€¦","Exit the thread. arg1 and arg2 should be code and location â€¦","Set the current kernel threadâ€™s TLS pointer. On x86_64, â€¦","Perform a number of ThreadSync operations, either waking â€¦","Yield the threadâ€™s CPU time now. The actual effect of â€¦","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","The value used for the comparison.","The version of this data structure, to allow expansion.","","","","","","","","","","","","","","Wait until the specified thread terminates.","Spawn a new thread, allocating a new stack for it, â€¦","","","","Return a Duration representing an instant in monotonic â€¦","Return a Duration representing the time since the unix â€¦"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,4,5,2,0,6,6,6,0,0,6,6,6,6,6,6,7,0,0,7,7,7,8,7,7,7,7,7,7,7,8,7,8,7,8,7,8,7,7,7,7,7,8,7,7,8,8,8,8,7,7,7,7,7,8,8,7,7,7,7,7,7,7,7,7,8,7,7,7,8,7,8,8,7,8,7,7,7,8,7,7,7,7,8,7,8,7,8,7,7,0,0,9,9,9,9,9,9,9,9,9,9,9,9,0,0,0,0,10,0,0,0,10,0,0,11,12,13,14,15,16,17,18,19,20,16,20,21,0,0,0,0,0,21,0,0,22,0,21,23,24,25,15,26,21,0,21,0,0,21,0,17,20,27,0,28,0,21,0,23,13,29,17,21,0,21,0,0,21,0,0,0,0,21,0,0,0,0,0,0,0,16,15,30,16,17,20,18,19,27,28,29,15,30,13,24,25,11,14,31,32,33,34,22,35,36,24,25,11,14,31,32,33,34,22,35,24,25,11,14,31,32,33,34,22,35,24,25,11,14,31,32,33,34,22,35,24,25,11,14,31,32,33,34,22,35,24,25,11,14,31,32,33,34,22,35,24,25,11,14,31,32,33,34,22,35,24,25,11,14,31,32,33,34,22,35,10,21,15,24,30,25,11,13,12,14,27,37,38,16,29,39,26,28,31,32,40,41,17,20,33,42,34,36,18,19,22,35,43,23,10,21,15,24,30,25,11,13,12,14,27,37,38,16,29,39,26,28,31,32,40,41,17,20,33,42,34,36,18,19,22,35,43,23,12,21,15,24,30,25,11,12,14,27,37,38,16,29,39,26,28,31,32,40,41,17,20,33,42,34,36,18,19,22,35,43,23,24,25,11,13,12,14,27,37,38,16,29,39,26,28,31,32,40,41,17,20,33,42,34,36,18,19,22,35,24,25,11,14,31,32,33,34,22,35,24,25,11,14,31,32,33,34,22,35,38,42,42,43,26,39,24,25,11,14,31,32,33,34,22,35,24,25,11,14,31,32,33,34,22,35,36,24,25,11,13,12,14,27,37,38,16,29,39,26,28,31,32,40,41,17,20,33,42,34,36,18,19,22,35,24,25,11,14,31,32,33,34,22,35,37,42,36,21,15,15,24,24,24,24,24,30,30,25,25,25,25,25,11,11,11,11,11,13,12,14,14,14,14,14,27,37,38,16,16,29,39,26,28,31,31,31,31,31,32,32,32,32,32,40,41,17,17,20,20,33,33,33,33,33,42,34,34,34,34,34,36,18,18,19,19,22,22,22,22,22,35,35,35,35,35,43,23,10,10,21,21,15,15,24,30,30,25,11,13,13,12,14,27,37,38,16,16,29,39,26,28,31,32,40,41,17,17,20,20,33,42,34,36,18,18,19,19,22,35,43,23,24,25,11,14,31,32,33,34,22,35,24,25,11,14,31,32,33,34,22,35,24,25,11,14,31,32,33,34,22,35,24,25,11,14,31,32,33,34,22,35,29,24,25,11,14,31,32,33,34,22,35,39,24,25,11,14,31,32,33,34,22,35,24,25,11,14,31,32,33,34,22,35,24,25,11,14,31,32,33,34,22,35,10,21,15,24,30,25,11,13,12,14,27,37,38,16,29,39,26,28,31,32,40,41,17,20,33,42,34,36,18,19,22,35,43,23,24,25,11,14,31,32,33,34,22,35,24,25,11,14,31,32,33,34,22,35,43,39,24,25,11,14,27,37,38,29,39,31,32,40,41,33,42,34,36,22,35,37,38,39,40,41,36,43,29,29,24,25,11,14,31,32,33,34,22,35,21,37,42,42,24,25,11,13,12,14,27,37,38,16,29,39,26,28,31,32,40,41,17,20,33,42,34,36,18,19,22,35,43,37,38,24,25,11,14,31,32,33,34,22,35,24,25,11,14,31,32,33,34,22,35,39,36,36,24,25,11,14,31,32,33,34,22,35,24,25,11,14,31,32,33,34,22,35,24,25,11,14,31,32,33,34,22,35,0,0,0,0,0,0,0,0,0,0,0,0,36,24,25,11,14,31,32,33,34,22,35,10,21,15,24,30,25,11,13,12,14,27,37,38,16,29,39,26,28,31,32,40,41,17,20,33,42,34,36,18,19,22,35,43,23,10,21,15,24,30,25,11,13,12,14,27,37,38,16,29,39,26,28,31,32,40,41,17,20,33,42,34,36,18,19,22,35,43,23,10,21,15,24,30,25,11,13,12,14,27,37,38,16,29,39,26,28,31,32,40,41,17,20,33,42,34,36,18,19,22,35,43,23,24,25,11,14,31,32,33,34,22,35,37,42,44,45,44,45,46,47,46,0,48,48,0,48,48,0,0,48,48,48,0,0],"f":[null,null,null,null,null,[[]],null,null,null,null,null,null,[[["layout",3]]],[[["layout",3]]],[[["layout",3],["usize",15]]],null,[[["syscall",4]]],null,null,null,null,null,null,[[]],[[]],[[],["auxentry",4]],[[["auxentry",4]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[["auxentry",4]],["bool",15]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,[[]],[[]],[[]],[[],["option",4,[["objid",3]]]],[[["objid",3],["usize",15]],["option",4,[["segment",3]]]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,[[]],[[],["objid",3]],[[]],[[]],[[["protections",3]]],[[]],[[],["u32",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["objid",3]],[[],["protections",3]],[[["objid",3]],["ordering",4]],[[["protections",3]],["ordering",4]],[[]],[[],["bool",15]],[[]],[[]],[[["objid",3]],["bool",15]],[[["protections",3]],["bool",15]],[[["intoiterator",8]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["u128",15]]],[[]],[[]],[[["u32",15]],["option",4]],[[["u32",15]]],[[["u32",15]]],[[["intoiterator",8]]],[[]],[[]],[[]],[[],["bool",15]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[["objid",3]],["bool",15]],[[["protections",3]],["bool",15]],[[["u128",15]]],[[["u64",15],["u64",15]]],[[]],[[["objid",3]],["option",4,[["ordering",4]]]],[[["protections",3]],["option",4,[["ordering",4]]]],[[]],[[["bool",15]]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[],["never",15]],null,[[]],[[]],[[]],[[]],[[],["bool",15]],[[]],[[],["mutex",3]],[[],["result",4]],[[],["result",4]],[[],["bool",15]],[[],["typeid",3]],[[]],[[],["option",4,[["usize",15]]]],[[["usize",15]]],[[["usize",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["kernelconsolereadflags",3]]],[[["kernelconsolereadbufferflags",3]]],[[["kernelconsolewriteflags",3]]],[[["threadsyncflags",3]]],[[["objectcreateflags",3]]],[[["createtieflags",3]]],[[["mapflags",3]]],[[["threadspawnflags",3]]],[[["clockflags",3]]],[[["readclockflags",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",26,[["eq",8],["partialeq",8],["ord",8],["partialord",8]]],["",26,[["eq",8],["partialeq",8],["ord",8],["partialord",8]]]],["bool",15]],[[],["syscall",4]],[[],["kernelconsolereaderror",4]],[[],["kernelconsolereadflags",3]],[[],["kernelconsolereadbuffererror",4]],[[],["kernelconsolereadbufferflags",3]],[[],["kernelconsolewriteflags",3]],[[],["threadsyncop",4]],[[],["threadsyncflags",3]],[[],["threadsyncreference",4]],[[],["threadsyncsleep",3]],[[],["threadsyncwake",3]],[[],["threadsyncerror",4]],[[],["threadsync",4]],[[],["objectsource",3]],[[],["backingtype",4]],[[],["lifetimetype",4]],[[],["objectcreateflags",3]],[[],["createtieflags",3]],[[],["objectcreate",3]],[[],["createtiespec",3]],[[],["objectcreateerror",4]],[[],["objectmaperror",4]],[[],["mapflags",3]],[[],["sysinfo",3]],[[],["threadspawnflags",3]],[[],["threadspawnargs",3]],[[],["threadspawnerror",4]],[[],["readclockinfoerror",4]],[[],["clockflags",3]],[[],["readclockflags",3]],[[],["clockinfo",3]],[[],["clocksource",4]],[[["kernelconsolereadflags",3]],["ordering",4]],[[["kernelconsolereadbufferflags",3]],["ordering",4]],[[["kernelconsolewriteflags",3]],["ordering",4]],[[["threadcontrol",4]],["ordering",4]],[[["threadsyncop",4]],["ordering",4]],[[["threadsyncflags",3]],["ordering",4]],[[["threadsyncreference",4]],["ordering",4]],[[["threadsyncsleep",3]],["ordering",4]],[[["threadsyncwake",3]],["ordering",4]],[[["threadsyncerror",4]],["ordering",4]],[[["threadsync",4]],["ordering",4]],[[["objectsource",3]],["ordering",4]],[[["backingtype",4]],["ordering",4]],[[["lifetimetype",4]],["ordering",4]],[[["objectcreateflags",3]],["ordering",4]],[[["createtieflags",3]],["ordering",4]],[[["objectcreate",3]],["ordering",4]],[[["createtiespec",3]],["ordering",4]],[[["objectcreateerror",4]],["ordering",4]],[[["objectmaperror",4]],["ordering",4]],[[["mapflags",3]],["ordering",4]],[[["sysinfo",3]],["ordering",4]],[[["threadspawnflags",3]],["ordering",4]],[[["threadspawnargs",3]],["ordering",4]],[[["threadspawnerror",4]],["ordering",4]],[[["readclockinfoerror",4]],["ordering",4]],[[["clockflags",3]],["ordering",4]],[[["readclockflags",3]],["ordering",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,[[],["nonzerousize",3]],null,[[],["duration",3]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["kernelconsolereadflags",3]],["bool",15]],[[["kernelconsolereadbufferflags",3]],["bool",15]],[[["kernelconsolewriteflags",3]],["bool",15]],[[["threadcontrol",4]],["bool",15]],[[["threadsyncop",4]],["bool",15]],[[["threadsyncflags",3]],["bool",15]],[[["threadsyncreference",4]],["bool",15]],[[["threadsyncsleep",3]],["bool",15]],[[["threadsyncwake",3]],["bool",15]],[[["threadsyncerror",4]],["bool",15]],[[["threadsync",4]],["bool",15]],[[["objectsource",3]],["bool",15]],[[["backingtype",4]],["bool",15]],[[["lifetimetype",4]],["bool",15]],[[["objectcreateflags",3]],["bool",15]],[[["createtieflags",3]],["bool",15]],[[["objectcreate",3]],["bool",15]],[[["createtiespec",3]],["bool",15]],[[["objectcreateerror",4]],["bool",15]],[[["objectmaperror",4]],["bool",15]],[[["mapflags",3]],["bool",15]],[[["sysinfo",3]],["bool",15]],[[["threadspawnflags",3]],["bool",15]],[[["threadspawnargs",3]],["bool",15]],[[["threadspawnerror",4]],["bool",15]],[[["readclockinfoerror",4]],["bool",15]],[[["clockflags",3]],["bool",15]],[[["readclockflags",3]],["bool",15]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["u64",15]]],[[]],[[["usize",15]]],[[]],[[["u64",15]]],[[]],[[]],[[["u64",15]]],[[]],[[]],[[]],[[["u64",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u64",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u64",15]]],[[]],[[["u64",15]]],[[]],[[]],[[]],[[]],[[]],[[["u64",15]]],[[]],[[["u64",15]]],[[]],[[]],[[]],[[]],[[]],[[["u64",15]],["option",4]],[[["u64",15]],["option",4]],[[["u64",15]],["option",4]],[[["u32",15]],["option",4]],[[["u32",15]],["option",4]],[[["u32",15]],["option",4]],[[["u32",15]],["option",4]],[[["u32",15]],["option",4]],[[["u32",15]],["option",4]],[[["u32",15]],["option",4]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[],["threadsyncresult",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,[[["kernelconsolereadflags",3]],["bool",15]],[[["kernelconsolereadbufferflags",3]],["bool",15]],[[["kernelconsolewriteflags",3]],["bool",15]],[[["threadsyncflags",3]],["bool",15]],[[["threadsyncreference",4]],["bool",15]],[[["threadsyncsleep",3]],["bool",15]],[[["threadsyncwake",3]],["bool",15]],[[["threadsync",4]],["bool",15]],[[["objectsource",3]],["bool",15]],[[["objectcreateflags",3]],["bool",15]],[[["createtieflags",3]],["bool",15]],[[["objectcreate",3]],["bool",15]],[[["createtiespec",3]],["bool",15]],[[["mapflags",3]],["bool",15]],[[["sysinfo",3]],["bool",15]],[[["threadspawnflags",3]],["bool",15]],[[["threadspawnargs",3]],["bool",15]],[[["clockflags",3]],["bool",15]],[[["readclockflags",3]],["bool",15]],[[["threadsyncreference",4],["u64",15],["threadsyncop",4],["threadsyncflags",3]]],[[["threadsyncreference",4],["usize",15]]],[[["objid",3],["u64",15],["u64",15],["usize",15]]],[[["backingtype",4],["lifetimetype",4],["option",4,[["objid",3]]],["objectcreateflags",3]]],[[["objid",3],["createtieflags",3]]],[[["usize",15],["usize",15],["usize",15],["threadspawnflags",3]]],[[["duration",3],["duration",3],["clockflags",3],["clocksource",4]]],[[["threadsyncsleep",3]]],[[["threadsyncwake",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u64",15]],null,[[],["usize",15]],null,[[["kernelconsolereadflags",3]],["option",4,[["ordering",4]]]],[[["kernelconsolereadbufferflags",3]],["option",4,[["ordering",4]]]],[[["kernelconsolewriteflags",3]],["option",4,[["ordering",4]]]],[[["threadcontrol",4]],["option",4,[["ordering",4]]]],[[["threadsyncop",4]],["option",4,[["ordering",4]]]],[[["threadsyncflags",3]],["option",4,[["ordering",4]]]],[[["threadsyncreference",4]],["option",4,[["ordering",4]]]],[[["threadsyncsleep",3]],["option",4,[["ordering",4]]]],[[["threadsyncwake",3]],["option",4,[["ordering",4]]]],[[["threadsyncerror",4]],["option",4,[["ordering",4]]]],[[["threadsync",4]],["option",4,[["ordering",4]]]],[[["objectsource",3]],["option",4,[["ordering",4]]]],[[["backingtype",4]],["option",4,[["ordering",4]]]],[[["lifetimetype",4]],["option",4,[["ordering",4]]]],[[["objectcreateflags",3]],["option",4,[["ordering",4]]]],[[["createtieflags",3]],["option",4,[["ordering",4]]]],[[["objectcreate",3]],["option",4,[["ordering",4]]]],[[["createtiespec",3]],["option",4,[["ordering",4]]]],[[["objectcreateerror",4]],["option",4,[["ordering",4]]]],[[["objectmaperror",4]],["option",4,[["ordering",4]]]],[[["mapflags",3]],["option",4,[["ordering",4]]]],[[["sysinfo",3]],["option",4,[["ordering",4]]]],[[["threadspawnflags",3]],["option",4,[["ordering",4]]]],[[["threadspawnargs",3]],["option",4,[["ordering",4]]]],[[["threadspawnerror",4]],["option",4,[["ordering",4]]]],[[["readclockinfoerror",4]],["option",4,[["ordering",4]]]],[[["clockflags",3]],["option",4,[["ordering",4]]]],[[["readclockflags",3]],["option",4,[["ordering",4]]]],[[],["duration",3]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["sysinfo",3]],[[["kernelconsolereadflags",3]],["result",4,[["usize",15],["kernelconsolereaderror",4]]]],[[["kernelconsolereadbufferflags",3]],["result",4,[["usize",15],["kernelconsolereadbuffererror",4]]]],[[["kernelconsolewriteflags",3]]],[[["objectcreate",3]],["result",4,[["objid",3],["objectcreateerror",4]]]],[[["objid",3],["usize",15],["protections",3],["mapflags",3]],["result",4,[["usize",15],["objectmaperror",4]]]],[[["clocksource",4],["readclockflags",3]],["result",4,[["clockinfo",3],["readclockinfoerror",4]]]],[[["threadspawnargs",3]],["result",4,[["objid",3],["threadspawnerror",4]]]],[[["u64",15]],["never",15]],[[["u64",15]]],[[["option",4,[["duration",3]]]],["result",4,[["usize",15],["threadsyncerror",4]]]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["never",15]],[[]],[[]],[[["u32",15]]],[[["usize",15],["usize",15],["usize",15]],["option",4,[["u32",15]]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["duration",3]],[[],["duration",3]]],"p":[[4,"AuxEntry"],[13,"ProgramHeaders"],[13,"Environment"],[13,"Arguments"],[13,"ExecId"],[3,"Segment"],[3,"Protections"],[3,"ObjID"],[3,"Mutex"],[4,"KernelConsoleReadSource"],[3,"KernelConsoleWriteFlags"],[4,"ThreadSyncOp"],[4,"ThreadControl"],[3,"ThreadSyncFlags"],[4,"KernelConsoleReadError"],[4,"ThreadSyncError"],[4,"ObjectCreateError"],[4,"ThreadSpawnError"],[4,"ReadClockInfoError"],[4,"ObjectMapError"],[4,"Syscall"],[3,"ClockFlags"],[4,"ClockSource"],[3,"KernelConsoleReadFlags"],[3,"KernelConsoleReadBufferFlags"],[4,"BackingType"],[4,"ThreadSyncReference"],[4,"LifetimeType"],[4,"ThreadSync"],[4,"KernelConsoleReadBufferError"],[3,"ObjectCreateFlags"],[3,"CreateTieFlags"],[3,"MapFlags"],[3,"ThreadSpawnFlags"],[3,"ReadClockFlags"],[3,"ThreadSpawnArgs"],[3,"ThreadSyncSleep"],[3,"ThreadSyncWake"],[3,"ObjectSource"],[3,"ObjectCreate"],[3,"CreateTieSpec"],[3,"SysInfo"],[3,"ClockInfo"],[13,"Sleep"],[13,"Wake"],[13,"ObjectRef"],[13,"Virtual"],[3,"ThreadRepr"]]},\
"twizzler_kernel":{"doc":"","t":[8,7,0,0,0,14,14,10,10,0,5,0,5,0,0,10,5,0,14,14,0,0,10,0,0,0,0,0,0,0,0,0,0,5,5,0,4,13,13,0,0,5,5,5,0,0,5,0,0,0,5,5,0,3,5,5,0,0,5,5,5,0,0,5,0,0,0,0,0,5,0,0,7,3,7,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,7,17,3,7,17,7,3,3,12,12,11,11,11,11,11,11,12,11,11,11,11,11,5,5,11,11,11,5,11,11,11,11,11,11,12,11,11,11,13,13,13,13,13,13,13,13,13,4,13,13,7,3,4,3,3,13,13,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,5,11,12,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,5,5,5,12,5,11,5,5,5,5,12,12,11,11,11,11,11,11,11,11,5,5,5,12,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,14,14,11,11,11,11,11,11,5,5,5,12,11,5,11,11,11,5,5,12,12,12,5,5,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,5,12,12,12,12,5,12,5,5,11,5,5,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,17,17,17,7,3,17,17,17,17,17,17,12,11,11,5,5,11,12,11,12,5,11,11,11,5,11,11,11,11,11,7,7,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,3,3,17,17,17,17,3,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,5,11,11,11,12,12,11,5,5,11,11,11,11,11,11,11,11,11,11,17,17,17,17,7,17,17,17,17,17,17,17,17,7,5,5,5,5,5,3,3,7,11,11,11,11,11,5,11,11,11,5,5,5,5,5,11,11,12,12,11,12,5,11,11,11,11,11,11,12,12,4,13,7,3,13,7,17,7,3,7,5,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,5,12,12,11,5,5,11,11,11,12,3,3,17,5,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,12,12,4,13,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,3,3,3,12,5,5,12,12,5,3,5,5,5,5,5,5,12,3,12,12,12,12,7,7,17,6,7,7,7,8,3,3,3,11,11,11,11,11,11,10,11,11,12,5,11,12,12,12,11,11,11,11,11,11,11,5,11,11,11,11,11,5,11,11,12,5,5,12,5,5,11,12,5,5,5,12,5,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,12,11,11,11,12,11,11,11,11,11,11,11,11,3,3,8,11,11,11,11,11,12,12,11,11,11,11,11,11,10,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,7,3,11,11,11,11,12,11,5,5,11,12,12,11,11,11,11,7,3,3,11,11,11,11,11,11,11,11,5,5,12,11,11,12,12,11,11,11,11,11,11,13,13,13,13,13,4,13,13,13,4,13,4,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,5,12,3,18,7,3,17,7,3,8,3,3,17,8,7,3,12,5,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,5,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,12,11,5,11,11,10,5,11,5,11,5,11,5,5,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,5,5,5,11,11,3,11,11,11,11,11,11,0,11,12,11,11,11,11,0,3,12,11,11,11,11,11,11,11,11,13,13,7,3,3,4,3,3,3,4,13,13,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,12,11,0,5,12,11,11,11,0,12,11,11,11,11,11,11,11,11,5,5,12,11,11,11,11,11,11,11,11,12,5,12,12,12,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,18,7,7,17,17,17,17,17,3,18,7,7,7,3,11,5,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,12,5,11,11,11,11,12,11,12,12,11,11,11,11,11,11,11,11,18,18,18,7,3,3,3,6,3,3,6,18,18,18,18,18,18,11,5,11,11,12,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,11,11,11,12,12,11,11,11,11,11,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,18,13,18,4,3,13,18,13,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,18,11,5,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,12,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,12,3,3,3,3,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,18,13,3,4,13,17,3,7,3,3,6,18,3,13,13,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,12,12,11,11,11,11,11,11,11,11,11,11,0,0,11,11,11,11,11,0,12,11,5,11,11,11,11,11,12,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,11,11,5,5,12,11,11,12,11,5,12,12,11,11,11,3,6,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,3,6,11,11,11,11,11,11,11,11,11,12,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,12,11,11,11,11,11,12,11,12,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,17,17,3,17,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,5,5,7,7,5,5,5,5,7,13,7,7,7,7,17,4,17,17,17,13,3,3,3,13,12,5,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,5,11,11,12,11,11,11,11,11,11,5,12,11,11,12,12,12,5,5,11,11,11,11,11,12,12,11,12,12,11,12,5,11,12,12,5,11,11,11,11,5,12,12,12,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,7,3,4,7,7,13,13,7,17,7,17,7,17,3,13,13,11,5,11,11,11,11,11,11,11,11,12,11,11,12,12,12,5,5,12,11,11,11,11,11,5,11,11,11,12,12,12,5,11,11,12,5,5,5,5,5,5,5,5,5,5,5,5,5,11,5,5,5,11,11,11,11,11,11,11,5,11,11,11,12,3,3,3,8,3,6,6,3,6,12,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,12,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,10,10,10,10,10,10,5,10,5,5,5,10,0,5,10,10,0,5,5,0,5,5,5,5,5,5,5,7,3,3,5,11,11,11,11,12,5,11,11,5,5,5,11,11,12,12,12,5,5,5,5,11,11,11,11,11,11,5,5,5,5,13,13,7,13,3,13,7,13,3,4,18,13,13,13,17,17,17,17,17,3,6,4,3,13,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,5,12,5,12,5,11,11,11,11,11,12,11,11,11,11,11,5,11,11,11,11,5,11,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,12,11,11,11,11,11,11,11,12,11,11,11,12,11,11,5,11,11,11,11,12,5,5,5,11,12,12,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,5,5,5],"n":["BootInfo","TEST","arch","clock","condvar","emerglog","emerglogln","get_modules","get_system_table","idcounter","idle_main","image","init_threading","initrd","interrupt","kernel_image_info","kernel_main","log","log","logln","machine","memory","memory_regions","mutex","obj","once","operations","panic","processor","sched","spinlock","syscall","thread","thread_main","thread_user_main","utils","BootInfoSystemTable","Efi","Rsdp","acpi","amd64","init","init_interrupts","init_secondary","interrupt","ioapic","jump_to_user","lapic","memory","processor","schedule_oneshot_tick","start_clock","thread","AcpiHandlerImpl","get_acpi_root","init","acpi","desctables","init","init_interrupts","init_secondary","interrupt","ioapic","jump_to_user","lapic","memory","pit","processor","start","start_clock","syscall","thread","ACPI","AcpiHandlerImpl","HANDLER","borrow","borrow_mut","clone","clone_into","fmt","from","get_acpi_root","init","into","map_physical_region","to_owned","try_from","try_into","type_id","unmap_physical_region","DF_STACK","DOUBLE_FAULT_IST_INDEX","GDT","SGDT","STACK_SIZE","STSS","Selectors","TSS","__private_field","__private_field","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","code_sel","deref","deref","from","from","from","init","init_secondary","into","into","into","set_kernel_stack","try_from","try_from","try_from","try_into","try_into","try_into","tss_sel","type_id","type_id","type_id","AligmentCheck","BoundsRangeExceeded","Breakpoint","CoProcessorOverrun","ControlProtection","Debug","DeviceNotAvailable","DivideError","DoubleFault","Exception","GeneralProtectionFault","HypervisorInjection","IDT","IDTEntry","InterProcessorInterrupt","InterruptDescriptorTable","InterruptDescriptorTablePointer","InvalidOpcode","InvalidTSS","IsrContext","MachineCheck","NonMaskableInterrupt","OverflowError","PageFault","Reschedule","Reserved1","Reserved2_0","Reserved2_1","Reserved2_2","Reserved2_3","Reserved2_4","Reserved2_5","Reserved3","SIMDFloatingPoint","Security","SegmentNotPresent","StackSegmentFault","VMMCommunication","Virtualization","X87FloatingPoint","alignment_check_handler","as_idx","base","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boundsrange_handler","breakpoint_handler","clone","clone","clone_into","clone_into","common_handler_entry","control_protection_handler","coprocessor_overrun_handler","cs","debug_handler","default","device_not_available_handler","disable","divide_handler","double_fault_handler","err","flags","fmt","fmt","from","from","from","from","from","from","generic_isr_handler","gpf_handler","hypervisor_injection_handler","idt","init_idt","int100_handler","int101_handler","int102_handler","int103_handler","int104_handler","int105_handler","int106_handler","int107_handler","int108_handler","int109_handler","int110_handler","int111_handler","int112_handler","int113_handler","int114_handler","int115_handler","int116_handler","int117_handler","int118_handler","int119_handler","int120_handler","int121_handler","int122_handler","int123_handler","int124_handler","int125_handler","int126_handler","int127_handler","int128_handler","int129_handler","int130_handler","int131_handler","int132_handler","int133_handler","int134_handler","int135_handler","int136_handler","int137_handler","int138_handler","int139_handler","int140_handler","int141_handler","int142_handler","int143_handler","int144_handler","int145_handler","int146_handler","int147_handler","int148_handler","int149_handler","int150_handler","int151_handler","int152_handler","int153_handler","int154_handler","int155_handler","int156_handler","int157_handler","int158_handler","int159_handler","int160_handler","int161_handler","int162_handler","int163_handler","int164_handler","int165_handler","int166_handler","int167_handler","int168_handler","int169_handler","int170_handler","int171_handler","int172_handler","int173_handler","int174_handler","int175_handler","int176_handler","int177_handler","int178_handler","int179_handler","int180_handler","int181_handler","int182_handler","int183_handler","int184_handler","int185_handler","int186_handler","int187_handler","int188_handler","int189_handler","int190_handler","int191_handler","int192_handler","int193_handler","int194_handler","int195_handler","int196_handler","int197_handler","int198_handler","int199_handler","int200_handler","int201_handler","int202_handler","int203_handler","int204_handler","int205_handler","int206_handler","int207_handler","int208_handler","int209_handler","int210_handler","int211_handler","int212_handler","int213_handler","int214_handler","int215_handler","int216_handler","int217_handler","int218_handler","int219_handler","int220_handler","int221_handler","int222_handler","int223_handler","int224_handler","int225_handler","int226_handler","int227_handler","int228_handler","int229_handler","int230_handler","int231_handler","int232_handler","int233_handler","int234_handler","int235_handler","int236_handler","int237_handler","int238_handler","int239_handler","int240_handler","int241_handler","int242_handler","int243_handler","int244_handler","int245_handler","int246_handler","int247_handler","int248_handler","int249_handler","int250_handler","int251_handler","int252_handler","int253_handler","int254_handler","int255_handler","int32_handler","int33_handler","int34_handler","int35_handler","int36_handler","int37_handler","int38_handler","int39_handler","int40_handler","int41_handler","int42_handler","int43_handler","int44_handler","int45_handler","int46_handler","int47_handler","int48_handler","int49_handler","int50_handler","int51_handler","int52_handler","int53_handler","int54_handler","int55_handler","int56_handler","int57_handler","int58_handler","int59_handler","int60_handler","int61_handler","int62_handler","int63_handler","int64_handler","int65_handler","int66_handler","int67_handler","int68_handler","int69_handler","int70_handler","int71_handler","int72_handler","int73_handler","int74_handler","int75_handler","int76_handler","int77_handler","int78_handler","int79_handler","int80_handler","int81_handler","int82_handler","int83_handler","int84_handler","int85_handler","int86_handler","int87_handler","int88_handler","int89_handler","int90_handler","int91_handler","int92_handler","int93_handler","int94_handler","int95_handler","int96_handler","int97_handler","int98_handler","int99_handler","interrupt","interrupt_err","into","into","into","into","into","into","invalid_opcode_handler","invalid_tss_handler","kernel_interrupt","limit","load","machine_check_handler","missing","new","new","nmi_handler","num_as_exception","offset_high","offset_low","offset_med","overflow_handler","pagefault_handler","r10","r11","r12","r13","r14","r15","r8","r9","rax","rbp","rbx","rcx","rdi","rdx","resv","return_from_interrupt","rflags","rip","rsi","rsp","security_handler","seg","segment_not_present_handler","set","set_handler","set_handlers","simd_floating_point_handler","ss","stack_segment_handler","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","user_interrupt","virtualization_handler","vmm_communication_handler","x87_floatingpoint_handler","ICW1_ICW4","ICW1_INIT","ICW4_8086","IOAPICS","IOApic","PIC1","PIC1_CMD","PIC1_DATA","PIC2","PIC2_CMD","PIC2_DATA","address","borrow","borrow_mut","construct_interrupt_data","disable_pic","from","gsi_base","gsi_to_reg","id","init","into","new","read","set_interrupt","try_from","try_into","type_id","write","write_vector_data","FREQ_MHZ","LAPIC_ADDR","LAPIC_DFR","LAPIC_EOI","LAPIC_ERROR","LAPIC_ESR","LAPIC_ICRHI","LAPIC_ICRLO","LAPIC_ICRLO_ASSERT","LAPIC_ICRLO_INIT","LAPIC_ICRLO_LEVEL","LAPIC_ICRLO_STARTUP","LAPIC_ICRLO_STATUS_PEND","LAPIC_ID","LAPIC_LDR","LAPIC_LINT0","LAPIC_LINT1","LAPIC_PCINT","LAPIC_SVR","LAPIC_TDCR","LAPIC_TICR","LAPIC_TIMER","LAPIC_TIMER_DEADLINE","LAPIC_TPR","LAPIC_VER","TRAMPOLINE_ENTRY16","TRAMPOLINE_ENTRY32","TRAMPOLINE_ENTRY64","eoi","get_speeds","init","lapic_interrupt","poke_cpu","read_lapic","read_monotonic_nanoseconds","rust_entry_secondary","schedule_oneshot_tick","send_ipi","trampoline_entry_code16","trampoline_entry_code32","trampoline_entry_code64","trampoline_main_entry","write_lapic","ArchMemoryContext","ArchMemoryContextSwitchInfo","PAGE_SIZE","PAGE_SIZE_HUGE","PAGE_SIZE_LARGE","PHYS_MEM_OFFSET","Table","active_level_4_table","as_slice","as_slice_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear_entry","clone","clone_empty_user","clone_into","current_tables","fmt","frame","from","from","from","from","from_existing_tables","get_child","get_child_noalloc","get_entry","get_map","get_switch_info","init","into","into","into","is_entry","map","map","new_blank","phys_to_virt","premap","root","switch","table_root","target","to_owned","translate_addr","translate_addr_inner","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unmap","ACCESS_BOTH","ACCESS_HI","ACCESS_LATCH","ACCESS_LO","CB","CHANNEL_READBACK","CRYSTAL_HZ","FORMAT_BINARY","MODE_ONESHOT","MODE_RATEGEN","MODE_SQUAREGEN","PIT_BASE","PIT_CMD","REAL_FREQ","channel","pit_data","setup_freq","timer_interrupt","wait_ns","ArchProcessor","GsScratch","HAS_MWAIT","borrow","borrow","borrow_mut","borrow_mut","default","enumerate_cpus","fmt","from","from","get_bsp_id","get_topology","halt_and_wait","has_mwait","init","into","into","kernel_fs","kernel_stack","new","scratch","tls_ready","try_from","try_from","try_into","try_into","type_id","type_id","wait_word","0","BootInfoSystemTable","Efi","FRAMEBUFFER_TAG","P2Align12","Rsdp","STACK","STACK_SIZE","STIVALE_HDR","StivaleBootInfo","UNMAP_NULL","____start","__stivale_start","arch","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","from","from","from","get_modules","get_system_table","into","into","into","kernel_image_info","maps","memory_regions","modules","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","X86SyscallContext","arg0","arg1","arg2","arg3","arg4","arg5","borrow","borrow_mut","create_jmp_context","default","from","into","num","pc","r10","r11","r12","r13","r14","r15","r8","r9","rax","rbp","rbx","rcx","rdi","rdx","return_to_user","rsi","rsp","set_return_values","syscall_entry","syscall_entry_c","try_from","try_into","type_id","0","AlignedXsaveRegion","ArchThread","XSAVE_LEN","__do_switch","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","new","rsp","try_from","try_from","try_into","try_into","type_id","type_id","user_fs","xsave_inited","xsave_region","InterProcessorInterrupt","Reschedule","disable","init_idt","kernel_interrupt","return_from_interrupt","set","user_interrupt","init","eoi","get_speeds","init","lapic_interrupt","poke_cpu","read_monotonic_nanoseconds","schedule_oneshot_tick","send_ipi","ArchMemoryContext","ArchMemoryContextSwitchInfo","Table","frame","init","phys_to_virt","table_root","target","translate_addr","ArchProcessor","enumerate_cpus","get_bsp_id","get_topology","halt_and_wait","init","tls_ready","wait_word","ArchThread","rsp","user_fs","xsave_inited","xsave_region","NEXT_TICK","NR_CPU_TICKS","NR_WINDOWS","Nanoseconds","TIMEOUT_QUEUE","TIMEOUT_THREAD","TIMEOUT_THREAD_CONDVAR","Timeout","TimeoutEntry","TimeoutOnce","TimeoutQueue","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","call","call","call","cb","check_reschedule_oneshot","check_window","current","data","expire_ticks","fmt","fmt","from","from","from","get_next_ticks","hard_advance","init","insert","into","into","into","is_ready","nano_to_ticks","new","new","next_wake","oneshot_clock_hardtick","print_info","queues","register_timeout_callback","schedule_oneshot_tick","soft_advance","soft_current","soft_timeout_clock","statclock","ticks_to_nano","timeout","timeout_thread_set_has_work","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","CondVar","InnerCondVar","borrow","borrow","borrow_mut","borrow_mut","from","from","has_waiters","inner","into","into","new","queue","signal","try_from","try_from","try_into","try_into","type_id","type_id","wait","Id","IdCounter","StableId","borrow","borrow","borrow_mut","borrow_mut","cmp","counter","counter","drop","eq","fmt","fmt","from","from","id","id","into","into","new","next","partial_cmp","release","reuse","to_string","try_from","try_from","try_into","try_into","type_id","type_id","value","KERNEL_IMAGE","TlsInfo","borrow","borrow_mut","clone","clone_into","file_size","from","get_tls","init","into","mem_size","start_addr","to_owned","try_from","try_into","type_id","BOOT_OBJECTS","BootModule","BootObjects","as_slice","borrow","borrow","borrow_mut","borrow_mut","default","from","from","get_boot_objects","init","init","into","into","length","start","try_from","try_from","try_into","try_into","type_id","type_id","ActiveHigh","ActiveLow","All","AllButSelf","Bsp","Destination","Edge","Level","LowestPriority","PinPolarity","Single","TriggerMode","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","disable","fmt","fmt","fmt","from","from","from","into","into","into","post_interrupt","send_ipi","set","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","with_disabled","0","ConsoleWriteError","DISCARD_ON_FULL","EMERGENCY_CONSOLE","EmergencyMessage","KEC_BUFFER_LEN","KERNEL_CONSOLE_MAIN","KernelConsole","KernelConsoleHardware","KernelConsoleInner","KernelConsoleWriteFlags","MAX_SINGLE_WRITE","MessageLevel","NORMAL_CONSOLE","NormalMessage","_pd","_print_emergency","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","clone","clone_into","cmp","commit_write","complement","contains","did_pass","difference","empty","eq","extend","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hardware","hash","inner","insert","intersection","intersects","into","into","into","into","into","into","is_all","is_empty","lock","ne","new_state","not","partial_cmp","read","read_buffer_bytes","read_buffer_bytes","read_bytes","read_bytes","read_head","remove","reserve_space","reserve_write","set","state","sub","sub_assign","symmetric_difference","to_owned","toggle","try_commit","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","union","write","write","write","write_buffer","write_bytes","write_head","write_resv","write_str","write_str","MachineConsoleHardware","borrow","borrow_mut","from","init","into","new","pc","read","serial","try_from","try_into","type_id","write","serial","SERIAL1","__private_field","borrow","borrow_mut","deref","from","into","try_from","try_into","type_id","BootloaderReserved","FrameAllocation","KERNEL_MEMORY_MANAGER","KernelMemoryManager","KernelMemoryManagerInner","MapFailed","MappingInfo","MappingIter","MemoryRegion","MemoryRegionKind","Reserved","UsableRam","addr","allocator","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","context","ctx","done","eq","fault","finish_setup","flags","fmt","fmt","fmt","frame","frame","from","from","from","from","from","from","from","from","init","init_kernel_context","inner","into","into","into","into","into","into","into","into_iter","kernel_context","kernel_memory_manager","kind","length","length","map_zero_pages","new","new","next","next","premap","start","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","0","BASE_PAGE_SIZE","EARLY_ALLOCATION_AREA","EARLY_ALLOCATION_PTR","EARLY_ALLOCATION_SIZE","HEAP_HUGE_START","HEAP_LARGE_START","HEAP_MAX_LEN","HEAP_START","HeapPager","LARGE_PAGE_SIZE","LL_BACKUP_ALLOCATOR","PAGER","SLAB_ALLOCATOR","SafeZoneAllocator","alloc","alloc_error_handler","alloc_page","allocate_large_page","allocate_page","borrow","borrow","borrow_mut","borrow_mut","dealloc","dealloc_page","extend_huge_heap","from","from","heap_large_start","heap_start","hookup_kernel_memory_manager","huge_heap_start","huge_heap_top","init","into","into","is_ready","map_offset","memory_manager","new","next_large_page","next_page","release_large_page","release_page","try_from","try_from","try_into","try_into","type_id","type_id","EXECUTE","EXECUTE","GLOBAL","ID_COUNTER","MapFlags","Mapping","MappingPerms","MappingRef","MemoryContext","MemoryContextInner","MemoryContextRef","READ","READ","USER","WIRED","WRITE","WRITE","add_thread","addr_to_slot","all","all","arch","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear_mappings","clone","clone","clone_into","clone_into","clone_region","cmp","cmp","cmp","cmp","cmp","complement","complement","contains","contains","current","current","difference","difference","empty","empty","entry_bits","eq","eq","eq","eq","eq","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_entry","from_iter","from_iter","hash","hash","id","inner","inner","insert","insert","insert_mapping","intersection","intersection","intersects","intersects","into","into","into","into","into","is_all","is_all","is_empty","is_empty","lookup_object","map_object_page","mappings_iter","ne","ne","ne","new","new","new","new_blank","new_blank","not","not","obj","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","perms","remove","remove","remove_thread","set","set","slot","slots","sub","sub","sub_assign","sub_assign","switch","switch","switch_cache","symmetric_difference","symmetric_difference","table_bits","thread_count","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","union","vmc","INVALID","InstructionFetch","PRESENT","PageFaultCause","PageFaultFlags","Read","USER","Write","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","complement","contains","difference","empty","eq","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","insert","intersection","intersects","into","into","is_all","is_empty","ne","not","page_fault","partial_cmp","remove","set","sub","sub_assign","symmetric_difference","to_owned","to_owned","toggle","try_from","try_from","try_into","try_into","type_id","type_id","union","BootFrameAllocator","Frame","PhysicalFrameFlags","ZEROED","all","alloc_frame","allocate_frame","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cmp","complement","contains","copy_contents_from","difference","empty","eq","extend","flags","fmt","fmt","fmt","fmt","fmt","fmt","free_frame","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","init","init","insert","intersection","intersects","into","into","into","is_all","is_empty","is_zeroed","ne","new","next","not","pa","partial_cmp","regions","remove","set","set_not_zero","size","start_address","sub","sub_assign","symmetric_difference","to_owned","toggle","try_alloc_frame","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","union","usable_frames","zero","0","AlignedAtomicU64","LockGuard","Mutex","SleepQueue","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cell","cmp","deref","deref_mut","drop","eq","from","from","from","from","into","into","into","into","lock","lock","new","owned","owner","partial_cmp","prev_donated_priority","pri","queue","queue","release","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","0","ALLOW_DELETED","Found","LookupFlags","LookupResult","NotFound","OBJ_DELETED","OBJ_MANAGER","OID","Object","ObjectManager","ObjectRef","PAGE_SIZE","PageNumber","Pending","WasDeleted","__private_field","add","add_page","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","cmp","complement","contains","copy","deref","difference","empty","eq","eq","eq","extend","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_address","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","id","id","insert","insert_mapping","intersection","intersects","into","into","into","into","into","into","invalidate","is_all","is_empty","is_pending_delete","lock_page_tree","lookup_object","lookup_object","map","maplist","mark_for_delete","ne","ne","new","new","next","not","num","offset","ok_or","pages","pagevec","partial_cmp","partial_cmp","partial_cmp","prev","print_page_tree","range","range_tree","read_atomic_u64","register_object","register_object","remove","remove_from_sleep_word","set","setup_sleep_word","sleep_info","sub","sub","sub_assign","symmetric_difference","thread_sync","to_owned","to_owned","to_owned","to_string","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","union","unwrap","wakeup_word","write_val_and_signal","0","CopySpec","borrow","borrow_mut","copy_range_to_object_tree","copy_ranges","dest_start","from","into","length","new","split_range","src","src_start","try_from","try_into","type_id","Page","PageRef","as_mut_slice","as_slice","as_virtaddr","borrow","borrow_mut","copy_page","fmt","frame","from","get_mut_to_val","into","new","physical_address","try_from","try_into","type_id","PageVec","PageVecRef","add_page","borrow","borrow_mut","clone_pages","clone_pages_limited","from","get_page","into","new","pages","show_part","try_from","try_into","type_id","PageRange","PageRangeTree","add_page","add_page","borrow","borrow","borrow_mut","borrow_mut","copy_pv","fmt","from","from","gc_pagevec","get","get_mut","get_page","get_page","insert_replace","into","into","is_shared","length","new","new","new_from","offset","print_tree","pv","pv_ref_count","range","range","range_mut","split_at","start","to_string","tree","try_from","try_from","try_into","try_into","type_id","type_id","SleepEntry","SleepInfo","borrow","borrow","borrow_mut","borrow_mut","from","from","insert","into","into","new","new","remove","threads","try_from","try_from","try_into","try_into","type_id","type_id","wake_n","words","COMPLETE","INCOMPLETE","Once","RUNNING","borrow","borrow_mut","call_once","data","drop","force_get","from","into","new","poll","status","try_from","try_into","type_id","wait","map_object_into_context","read_object","DEBUG_CTX","DID_PANIC","backtrace","init","load_debug_context","panic","ALL_PROCESSORS","All","BOOT_KERNEL_STACK","CPU_ID","CPU_MAIN_BARRIER","CURRENT_PROCESSOR","INIT","IPIDest","KERNEL_STACK_SIZE","MAX_CPU_ID","NR_QUEUES","Others","Processor","ProcessorStats","SchedulingQueues","Single","arch","boot_all_secondaries","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bsp_id","bsp_id","check_priority_change","choose_next","cleanup_exited","current_load","current_priority","current_processor","default","default","exited","fmt","from","from","from","from","get_min_non_empty","get_processor","hardticks","has_higher_priority","has_work","id","idle","idle_thread","init_cpu","init_tls","into","into","into","into","is_bsp","last_chosen_priority","load","new","non_idle","preempts","push_exited","queues","register","reinsert_thread","running","sched","secondary_entry","set_idle_thread","set_running","set_topology","should_preempt","start_secondary_cpu","stats","steals","switches","tls_ready","topology_path","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","wakeup","wakeups","0","ALL_THREADS","CPUTopoNode","CPUTopoType","CPU_TOPOLOGY_ROOT","CUR_REBALANCE_TIME","Cache","Other","PREEMPT","PRINT_STATS","RAND_STATE","REBALANCE_TIME","STAT_COUNTER","STEAL_LOAD_THRESH","SearchCPUResult","System","Thread","add_child","balance","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","child","child_mut","children","clone","clone_into","count","cpuid","cpuset","create_idle_thread","find_cpu_from_topo","first","fmt","fmt","from","from","from","get_cpu_topology","into","into","into","last","level_type","load","needs_reschedule","new","parent","parent","quick_random","remove_thread","schedule","schedule_hardtick","schedule_mark_preempt","schedule_maybe_preempt","schedule_maybe_rebalance","schedule_new_thread","schedule_resched","schedule_stattick","schedule_thread","schedule_thread_on_cpu","select_cpu","set_cpu","set_cpu_topology","switch_to","take_a_thread_from_cpu","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","try_steal","type_id","type_id","type_id","0","AlignedAtomicU64","GenericSpinlock","LockGuard","RelaxStrategy","Reschedule","ReschedulingSpinlock","SpinLockGuard","SpinLoop","Spinlock","_pd","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cell","current","deref","deref_mut","dont_unlock_on_drop","drop","force_relock","force_unlock","from","from","from","from","from","get_lock","interrupt_state","into","into","into","into","into","lock","lock","new","next_ticket","relax","relax","relax","release","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","SyscallContext","arg0","arg1","arg2","arg3","arg4","arg5","convert_result_to_codes","create_jmp_context","create_user_nullable_ptr","create_user_ptr","create_user_slice","num","object","one_err","pc","set_return_values","sync","sys_kernel_console_write","syscall_entry","thread","type_sys_object_create","type_sys_thread_sync","write_sysinfo","zero_err","zero_ok","sys_object_create","sys_object_map","REQUEUE","Requeue","SleepEvent","add_to_requeue","borrow","borrow","borrow_mut","borrow_mut","did_sleep","finish_blocking","from","from","get_obj","get_obj_and_offset","get_requeue_list","into","into","list","obj","offset","prep_sleep","requeue_all","sys_thread_sync","thread_sync_cb_timeout","try_from","try_from","try_into","try_into","type_id","type_id","undo_sleep","wakeup","sys_spawn","thread_ctrl","Background","Blocked","CURRENT_THREAD","ClassCount","CriticalGuard","Exiting","ID_COUNTER","Idle","Priority","PriorityClass","REALTIME","RealTime","Running","Starting","THREAD_HAS_DONATED_PRIORITY","THREAD_IN_KERNEL","THREAD_IS_SYNC_SLEEP","THREAD_IS_SYNC_SLEEP_DONE","THREAD_PROC_IDLE","Thread","ThreadRef","ThreadState","ThreadStats","User","adjust","affinity","arch","arch_switch_to","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","class","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","create_blank_object","critical_counter","current_memory_context","current_processor_queue","current_thread_ref","default","default","default","do_critical","donate_priority","donated_priority","drop","drop","effective_priority","enter_critical","enter_critical_unguarded","enter_kernel","eq","eq","eq","eq","exit","exit_critical","exit_kernel","flags","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_queue_number","get_donated_priority","id","id","idle","init","init_va","into","into","into","into","into","into","is_critical","is_idle_thread","is_in_user","kernel_stack","last","last_cpu","maybe_reschedule_thread","memory_context","new","new_idle","new_with_current_context","new_with_new_vm","partial_cmp","partial_cmp","partial_cmp","priority","queue_number","queue_number","remove_donated_priority","repr","reset_sync_sleep","reset_sync_sleep_done","set_current_thread","set_state","set_sync_sleep","set_sync_sleep_done","set_tls","spawn_args","start_new_init","start_new_kernel","start_new_user","state","state","stats","switch_lock","switch_thread","sys","thread","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","user","user_init","user_new_start","align","lock_two"],"q":["twizzler_kernel","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","twizzler_kernel::arch","","","","","","","","","","","","","","","","","twizzler_kernel::arch::acpi","","","twizzler_kernel::arch::amd64","","","","","","","","","","","","","","","","twizzler_kernel::arch::amd64::acpi","","","","","","","","","","","","","","","","","","twizzler_kernel::arch::amd64::desctables","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","twizzler_kernel::arch::amd64::interrupttwizzler_kernel::arch::amd64::ioapic","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","twizzler_kernel::arch::amd64::lapic","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","twizzler_kernel::arch::amd64::memory","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","twizzler_kernel::arch::amd64::pit","","","","","","","","","","","","","","","","","","","twizzler_kernel::arch::amd64::processor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","twizzler_kernel::arch::amd64::start","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","twizzler_kernel::arch::amd64::syscall","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","twizzler_kernel::arch::amd64::thread","","","","","","","","","","","","","","","","","","","","","","","","twizzler_kernel::arch::interrupt","","","","","","","","twizzler_kernel::arch::ioapic","twizzler_kernel::arch::lapic","","","","","","","","twizzler_kernel::arch::memory","","","","","","","","","twizzler_kernel::arch::processor","","","","","","","","twizzler_kernel::arch::thread","","","","","twizzler_kernel::clock","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","twizzler_kernel::condvar","","","","","","","","","","","","","","","","","","","","","","twizzler_kernel::idcounter","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","twizzler_kernel::image","","","","","","","","","","","","","","","","","twizzler_kernel::initrd","","","","","","","","","","","","","","","","","","","","","","","","twizzler_kernel::interrupt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","twizzler_kernel::interrupt::Destination","twizzler_kernel::log","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","twizzler_kernel::machine","","","","","","","","","","","","","","twizzler_kernel::machine::pc","twizzler_kernel::machine::pc::serial","","","","","","","","","","twizzler_kernel::memory","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","twizzler_kernel::memory::allocator","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","twizzler_kernel::memory::context","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","twizzler_kernel::memory::fault","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","twizzler_kernel::memory::frame","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","twizzler_kernel::mutex","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","twizzler_kernel::obj","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","twizzler_kernel::obj::LookupResult","twizzler_kernel::obj::copy","","","","","","","","","","","","","","","","twizzler_kernel::obj::pages","","","","","","","","","","","","","","","","","","twizzler_kernel::obj::pagevec","","","","","","","","","","","","","","","","twizzler_kernel::obj::range","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","twizzler_kernel::obj::thread_sync","","","","","","","","","","","","","","","","","","","","","","","twizzler_kernel::once","","","","","","","","","","","","","","","","","","","twizzler_kernel::operations","","twizzler_kernel::panic","","","","","","twizzler_kernel::processor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","twizzler_kernel::processor::IPIDest","twizzler_kernel::sched","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","twizzler_kernel::spinlock","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","twizzler_kernel::syscall","","","","","","","","","","","","","","","","","","","","","","","","","","twizzler_kernel::syscall::object","","twizzler_kernel::syscall::sync","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","twizzler_kernel::syscall::thread","","twizzler_kernel::thread","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","twizzler_kernel::utils",""],"d":["A collection of information made available to the kernel â€¦","","","","","","","Get a static array of the modules loaded by the bootloader","Get a system table, the kinds available depend on the â€¦","","","","","","","Return the address and length of the whole kernel image.","","","","","","","Return a static array of memory regions for the system.","Implementation of a mutex that sleeps threads when there â€¦eturns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","","Returns the left flags, but with all the right flags â€¦","Toggles the set of flags.","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained â€¦","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","","","","","","Convert from underlying bit representation, unless that â€¦","Convert from underlying bit representation, dropping any â€¦","Convert from underlying bit representation, preserving all â€¦","","","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and â€¦","Returns <code>true</code> if there are flags common to both <code>self</code> and â€¦","","","","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","","","Returns the complement of this set of flags.","","","","","","","","Removes the specified flags in-place.","","","Inserts or removes the specified flags depending on the â€¦","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> â€¦","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Manage physical frames.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the set containing all flags.","Returns the set containing all flags.","","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","","","Returns the left flags, but with all the right flags â€¦","Returns the left flags, but with all the right flags â€¦","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained â€¦","Returns <code>true</code> if all of the flags in <code>other</code> are contained â€¦","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","Convert from underlying bit representation, unless that â€¦","Convert from underlying bit representation, unless that â€¦","Convert from underlying bit representation, dropping any â€¦","Convert from underlying bit representation, dropping any â€¦","Convert from underlying bit representation, preserving all â€¦","Convert from underlying bit representation, preserving all â€¦","","","","","","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","","Returns the intersection between the flags in <code>self</code> and â€¦","Returns the intersection between the flags in <code>self</code> and â€¦","Returns <code>true</code> if there are flags common to both <code>self</code> and â€¦","Returns <code>true</code> if there are flags common to both <code>self</code> and â€¦","","","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","","","","","Removes the specified flags in-place.","Removes the specified flags in-place.","","Inserts or removes the specified flags depending on the â€¦","Inserts or removes the specified flags depending on the â€¦","","","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","","","","Returns the symmetric difference between the flags in <code>self</code> â€¦","Returns the symmetric difference between the flags in <code>self</code> â€¦","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","","Returns the left flags, but with all the right flags â€¦","Toggles the set of flags.","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained â€¦","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","","","Convert from underlying bit representation, unless that â€¦","Convert from underlying bit representation, dropping any â€¦","Convert from underlying bit representation, preserving all â€¦","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and â€¦","Returns <code>true</code> if there are flags common to both <code>self</code> and â€¦","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","Returns the complement of this set of flags.","","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the â€¦","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> â€¦","","","Toggles the specified flags in-place.","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","A physical frame.","Flags to control the state of a physical frame. Also used â€¦","The frame is zeroed (or, allocate a zeroed frame)","Returns the set containing all flags.","Allocate a physical frame.","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","","Returns the left flags, but with all the right flags â€¦","Toggles the set of flags.","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained â€¦","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","Free a physical frame.","","","","Convert from underlying bit representation, unless that â€¦","Convert from underlying bit representation, dropping any â€¦","Convert from underlying bit representation, preserving all â€¦","","","Initialize the global physical frame allocator.","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and â€¦","Returns <code>true</code> if there are flags common to both <code>self</code> and â€¦","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Check if this frame is marked as zeroed. Does not look at â€¦","","","","Returns the complement of this set of flags.","","","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the â€¦","Mark this frame as not being zeroed. Does not modify the â€¦","","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> â€¦","","Toggles the specified flags in-place.","Try to allocate a physical frame. The flags argument is â€¦","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","Zero a frame.","","","Manages a reference to the data controlled by a mutex.","A container data structure to manage mutual exclusion.","","","","","","","","","","","","","","","","","","","","","","","","Lock the mutex and return a lock guard to manage a â€¦","","Create a new mutex, moving data <code>T</code> into it.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","","Returns the left flags, but with all the right flags â€¦","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained â€¦","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","Convert from underlying bit representation, unless that â€¦","Convert from underlying bit representation, dropping any â€¦","Convert from underlying bit representation, preserving all â€¦","","","","","Inserts the specified flags in-place.","","Returns the intersection between the flags in <code>self</code> and â€¦","Returns <code>true</code> if there are flags common to both <code>self</code> and â€¦","","","","","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","","","","","","","","","","","","Returns the complement of this set of flags.","","","","","","","","","","","","","","","","Removes the specified flags in-place.","","Inserts or removes the specified flags depending on the â€¦","","","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> â€¦","","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Initialize the data once and only once, returning the data â€¦","","","","","","Constructs a new Once with uninitialized data, must be â€¦","If the data is not ready, then return None, or return Some â€¦","","","","","Wait until the data is ready (someone calls call_once).","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,0,0,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,4,5,6,4,5,6,4,5,6,4,5,6,4,5,0,0,6,4,5,0,6,4,5,6,4,5,6,6,4,5,7,7,7,7,7,7,7,7,7,0,7,7,0,0,0,0,0,7,7,0,7,7,7,7,8,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,7,9,10,11,9,8,12,7,10,11,9,8,12,7,0,0,12,7,12,7,0,0,0,10,0,12,0,0,0,0,10,12,10,7,10,11,9,8,12,7,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,11,9,8,12,7,0,0,0,9,11,0,12,11,12,0,0,12,12,12,0,0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,12,0,10,10,10,10,0,12,0,0,11,0,0,10,0,12,7,10,11,9,8,12,7,10,11,9,8,12,7,10,11,9,8,12,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,13,0,0,13,13,13,13,0,13,13,13,0,13,13,13,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,15,16,14,15,16,14,14,14,15,14,15,14,14,15,16,14,14,15,14,14,14,15,15,0,15,16,14,14,15,14,15,0,15,15,16,15,16,14,0,0,15,16,14,15,16,14,15,16,14,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,18,17,18,18,0,18,17,18,0,0,0,0,0,17,18,17,17,17,17,0,17,18,17,18,17,18,18,19,0,2,0,0,2,0,0,0,0,0,0,0,20,20,2,19,20,2,19,20,2,19,20,20,20,2,19,20,20,20,20,20,2,19,20,2,19,20,2,19,0,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,0,21,21,21,0,0,21,21,21,22,0,0,0,0,22,23,22,23,22,23,22,23,23,23,22,23,22,23,22,23,23,23,23,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,15,16,0,0,0,0,0,0,0,0,18,0,23,23,23,23,0,0,0,0,0,0,0,0,0,0,0,24,25,26,24,25,26,27,24,25,24,0,26,26,24,25,25,26,24,25,26,26,26,0,26,24,25,26,25,0,24,26,26,0,0,26,0,0,26,26,0,0,0,25,0,24,25,26,24,25,26,24,25,26,0,0,28,29,28,29,28,29,29,29,28,29,29,28,29,28,29,28,29,28,29,29,0,0,0,30,31,30,31,31,30,31,31,31,31,31,30,31,32,31,30,31,30,30,31,30,30,31,30,31,30,31,30,31,31,0,0,33,33,33,33,33,33,0,0,33,33,33,33,33,33,33,0,0,0,34,34,35,34,35,35,34,35,0,0,35,34,35,34,34,34,35,34,35,34,35,36,36,37,37,37,0,38,38,37,0,37,0,36,38,37,36,38,37,36,38,37,36,38,37,0,36,38,37,36,38,37,36,38,37,0,0,0,36,38,37,36,38,37,36,38,37,36,38,37,0,39,0,40,0,0,0,0,0,0,0,0,0,0,0,0,41,0,40,40,40,40,40,40,40,40,40,42,43,44,45,41,40,42,43,44,45,41,40,42,40,40,40,0,40,40,0,40,40,40,40,40,40,40,40,40,42,43,44,45,41,40,40,40,40,40,40,41,40,41,40,40,40,42,43,44,45,41,40,40,40,41,40,0,40,40,46,0,41,0,41,0,40,0,0,40,42,40,40,40,40,40,42,42,43,44,45,41,40,42,43,44,45,41,40,42,43,44,45,41,40,40,46,41,41,42,0,0,0,41,41,0,47,47,47,47,47,47,0,47,47,47,47,47,47,0,0,48,48,48,48,48,48,48,48,48,49,50,0,0,0,0,0,0,0,0,49,49,51,0,52,53,54,55,49,50,51,52,53,54,55,49,50,51,49,51,49,51,0,53,53,49,0,0,51,49,50,51,0,51,52,53,54,55,49,49,50,51,0,0,55,52,53,54,55,49,50,51,53,54,0,52,52,51,55,53,51,53,53,55,52,49,51,52,53,54,55,49,50,51,52,53,54,55,49,50,51,52,53,54,55,49,50,51,56,57,0,0,0,0,0,0,0,0,57,0,0,0,0,56,0,57,57,57,57,56,57,56,56,57,57,57,56,57,57,57,57,57,0,57,56,57,57,57,57,57,57,57,57,57,56,57,56,57,56,58,59,59,0,0,0,0,0,0,0,0,58,59,59,59,58,59,60,0,58,59,60,58,59,58,59,58,59,58,59,58,59,58,59,58,59,58,59,60,61,62,58,59,60,61,62,58,59,60,58,59,58,59,60,60,61,62,58,59,58,59,58,59,60,61,58,59,58,59,59,60,61,62,58,59,58,59,58,58,58,58,58,59,59,59,59,59,60,61,62,58,58,59,59,58,59,58,59,58,59,59,58,59,58,59,60,61,61,58,59,60,58,59,58,59,60,61,62,58,59,58,59,58,59,60,60,60,62,58,59,60,61,62,60,61,58,59,62,60,61,62,58,59,62,58,59,60,58,59,62,60,58,59,58,59,60,61,61,58,59,59,60,58,59,58,59,60,61,62,58,59,60,61,62,58,59,60,61,62,58,59,58,59,62,63,64,63,0,0,64,63,64,63,63,63,63,63,63,63,63,63,63,64,63,64,63,64,63,64,63,63,63,63,63,63,64,63,63,63,63,63,63,64,63,64,63,63,63,63,63,63,63,63,63,64,63,63,63,63,0,63,63,63,63,63,63,63,64,63,63,64,63,64,63,64,63,0,0,0,65,65,0,66,65,65,65,65,65,65,65,65,66,67,65,66,67,65,65,65,65,65,65,67,65,65,65,65,67,67,65,65,65,65,65,0,66,67,65,65,65,65,65,65,0,66,65,65,65,66,67,65,65,65,67,65,67,66,65,67,65,66,65,65,67,67,67,65,65,65,65,65,0,66,67,65,66,67,65,66,67,65,65,66,67,68,0,0,0,0,68,69,70,71,68,69,70,71,70,70,71,71,71,70,68,69,70,71,68,69,70,71,70,71,70,69,69,70,71,69,69,70,70,68,69,70,71,68,69,70,71,68,69,70,71,72,73,74,0,0,74,0,0,0,0,0,0,72,0,74,74,75,72,76,73,73,73,73,73,73,73,73,73,76,77,72,73,74,75,76,77,72,73,74,75,72,73,74,72,73,74,76,72,73,73,73,0,75,73,73,76,72,73,73,76,76,72,72,73,73,73,73,73,74,76,77,72,72,73,74,75,72,73,73,73,73,73,76,76,73,76,73,73,76,77,72,73,74,75,76,73,73,76,76,0,77,77,76,76,72,73,76,77,72,73,72,72,74,0,0,76,72,73,72,76,0,76,76,0,77,73,76,73,76,76,72,73,73,73,0,72,73,74,72,73,76,77,72,73,74,75,76,77,72,73,74,75,76,77,72,73,74,75,73,74,76,76,78,0,79,79,0,0,79,79,79,79,79,0,79,79,79,79,79,0,0,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,0,0,81,81,81,81,81,81,81,81,81,81,81,81,81,81,0,0,82,83,82,83,82,83,82,82,82,83,82,83,83,82,83,83,82,83,82,82,82,83,82,82,83,82,82,82,83,83,82,82,82,83,82,83,82,83,82,83,0,0,84,85,84,85,84,85,85,84,85,84,85,85,84,84,85,84,85,84,85,85,85,0,0,0,0,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,0,0,0,0,0,0,0,0,0,87,0,0,0,0,0,0,0,0,0,87,0,0,0,87,88,0,87,88,89,90,87,88,89,90,88,88,90,90,90,88,88,0,89,90,90,89,87,88,89,90,90,0,89,90,90,88,89,88,0,0,87,88,89,90,88,90,88,88,89,89,90,90,0,90,88,88,0,88,88,88,90,0,88,89,89,0,88,87,88,89,90,87,88,89,90,87,88,89,90,88,89,91,0,0,0,0,0,92,92,0,0,0,0,0,0,0,92,92,93,0,94,92,93,94,92,93,93,93,93,92,92,93,94,93,0,0,93,92,93,94,92,93,0,94,92,93,93,93,94,0,93,93,93,0,0,0,0,0,0,0,0,0,0,0,0,0,93,0,0,0,92,94,92,93,94,92,93,0,94,92,93,95,0,0,0,0,0,0,0,0,0,96,97,98,95,96,99,97,98,95,96,99,96,96,99,99,99,99,99,99,97,98,95,96,99,99,99,97,98,95,96,99,96,99,96,96,100,97,98,96,97,98,95,96,99,97,98,95,96,99,97,98,95,96,99,0,101,101,101,101,101,101,0,101,0,0,0,101,0,0,101,101,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,102,103,102,103,103,0,102,103,0,0,0,102,103,102,103,103,0,0,0,0,102,103,102,103,102,103,0,0,0,0,104,105,0,104,0,105,0,104,0,0,106,104,105,105,0,0,0,0,0,0,0,0,0,104,106,107,107,107,107,108,104,106,105,109,107,108,104,106,105,109,106,104,106,105,104,106,105,107,106,0,107,0,107,0,104,106,109,107,107,107,107,108,107,107,107,0,107,104,106,105,0,107,0,107,104,106,105,109,107,108,104,106,105,109,106,107,107,107,109,107,107,107,108,104,106,105,109,107,107,107,107,109,107,107,107,107,107,107,107,107,104,106,107,107,106,107,107,107,107,0,107,107,107,107,107,0,0,0,107,107,107,107,107,109,108,104,106,105,107,108,104,106,105,109,107,108,104,106,105,109,107,108,104,106,105,109,109,0,0,0,0],"f":[null,null,null,null,null,null,null,[[]],[[["bootinfosystemtable",4]],["virtaddr",3]],null,[[],["never",15]],null,[[],["never",15]],null,null,[[]],[[],["never",15]],null,null,null,null,null,[[]],null,null,null,null,null,null,null,null,null,null,[[]],[[]],null,null,null,null,null,null,[[]],[[]],[[]],null,null,[[["virtaddr",3],["virtaddr",3],["u64",15]]],null,null,null,[[["u64",15]]],[[["u64",15]]],null,null,[[],["acpitables",3]],[[["u64",15]]],null,null,[[]],[[]],[[]],null,null,[[["virtaddr",3],["virtaddr",3],["u64",15]]],null,null,null,null,null,[[["u64",15]]],null,null,null,null,null,[[]],[[]],[[],["acpihandlerimpl",3]],[[]],[[["formatter",3]],["result",6]],[[]],[[],["acpitables",3]],[[["u64",15]]],[[]],[[["usize",15],["usize",15]],["physicalmapping",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["physicalmapping",3]]],null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["taskstatesegment",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["virtaddr",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[],["usize",15]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["idtentry",3]],[[],["exception",4]],[[]],[[]],[[["u64",15],["u64",15],["u64",15]]],[[]],[[]],null,[[]],[[],["idtentry",3]],[[]],[[],["bool",15]],[[]],[[]],null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u64",15],["bool",15]]],[[]],[[]],nullnull,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[["bool",15],["u16",15],["u64",15]]],[[]],[[["u64",15]],["exception",4]],null,null,null,[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],null,null,null,null,[[]],null,[[]],[[["bool",15]]],[[["usize",15],["bool",15],["option",4,[["usize",15]]]]],[[["interruptdescriptortable",3]]],[[]],null,[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[["u32",15],["bool",15],["triggermode",4],["pinpolarity",4],["destination",4]],["u64",15]],[[]],[[]],null,[[["u32",15]],["option",4,[["u32",15]]]],null,[[]],[[]],[[["u8",15],["physaddr",3],["u32",15]]],[[["u32",15]],["u32",15]],[[["u32",15],["u32",15],["bool",15],["triggermode",4],["pinpolarity",4],["destination",4]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["u32",15],["u32",15]]],[[["u32",15],["u64",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[["bool",15]]],[[["u16",15]]],[[["u32",15],["virtaddr",3]]],[[["u32",15]],["u32",15]],[[],["u64",15]],[[["u32",15],["u64",15],["u64",15]],["never",15]],[[["u64",15]]],[[["destination",4],["u32",15]]],[[]],[[]],[[]],[[["u32",15],["u64",15],["u64",15]],["never",15]],[[["u32",15],["u32",15]]],null,null,null,null,null,null,null,[[["virtaddr",3]],["pagetable",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[],["table",3]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],null,[[]],[[]],[[["physaddr",3]]],[[]],[[["physaddr",3]]],[[["usize",15],["u64",15]],["option",4,[["table",3]]]],[[["usize",15]],["option",4,[["table",3]]]],[[["usize",15],["bool",15]],["option",4]],[[["virtaddr",3]],["option",4,[["mappinginfo",3]]]],[[],["archmemorycontextswitchinfo",3]],[[["virtaddr",3]],["offsetpagetable",3]],[[]],[[]],[[]],[[["usize",15],["bool",15]],["bool",15]],[[["virtaddr",3],["physaddr",3],["usize",15],["mapflags",3]],["result",4,[["mapfailed",4]]]],[[["usize",15],["u64",15]]],[[]],[[["physaddr",3]],["virtaddr",3]],[[["virtaddr",3],["usize",15],["usize",15],["mapflags",3]],["result",4,[["mapfailed",4]]]],[[],["physaddr",3]],[[]],null,null,[[]],[[["virtaddr",3],["virtaddr",3]],["option",4,[["physaddr",3]]]],[[["virtaddr",3],["virtaddr",3]],["option",4,[["physaddr",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["virtaddr",3],["usize",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["u8",15]],["u8",15]],[[["u16",15]],["u16",15]],[[["u64",15]]],[[]],[[["u64",15]]],null,null,null,[[]],[[]],[[]],[[]],[[],["archprocessor",3]],[[],["u32",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[["option",4,[["processorinfo",3]]]],["u32",15]],[[],["vec",3]],[[]],[[],["bool",15]],[[["virtaddr",3]]],[[]],[[]],null,null,[[]],null,[[],["bool",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,[[],["never",15]],[[["stivalestruct",3]],["never",15]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["bootinfosystemtable",4]],["virtaddr",3]],[[]],[[]],[[]],[[]],null,[[]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[],["from",8,[["u64",15]]]],[[],["from",8,[["u64",15]]]],[[],["from",8,[["u64",15]]]],[[],["from",8,[["u64",15]]]],[[],["from",8,[["u64",15]]]],[[],["from",8,[["u64",15]]]],[[]],[[]],[[["virtaddr",3],["virtaddr",3],["u64",15]]],[[],["x86syscallcontext",3]],[[]],[[]],[[],["usize",15]],[[],["virtaddr",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["never",15]],null,null,[[]],[[],["never",15]],[[["u64",15]],["never",15]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,[[],["bool",15]],[[]],[[]],[[]],[[["bool",15]]],[[]],[[]],[[]],[[]],[[["bool",15]]],[[["u16",15]]],[[["u32",15],["virtaddr",3]]],[[],["u64",15]],[[["u64",15]]],[[["destination",4],["u32",15]]],null,null,null,null,[[["virtaddr",3]],["offsetpagetable",3]],[[["physaddr",3]],["virtaddr",3]],null,null,[[["virtaddr",3],["virtaddr",3]],["option",4,[["physaddr",3]]]],null,[[],["u32",15]],[[["option",4,[["processorinfo",3]]]],["u32",15]],[[],["vec",3]],[[]],[[["virtaddr",3]]],[[],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3]]],[[["box",3]]],[[]],null,[[]],[[["usize",15]],["option",4,[["timeoutentry",3]]]],null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["u64",15]],[[["usize",15]]],[[]],[[["u64",15],["box",3,[["timeout",8]]]]],[[]],[[]],[[]],[[["u64",15]],["bool",15]],[[["u64",15]],["u64",15]],[[]],[[]],null,[[]],[[]],null,[[["u64",15],["",26,[["fnonce",8],["send",8]]],["send",8]]],[[["u64",15]]],[[],["option",4,[["timeoutentry",3]]]],null,[[]],[[["u64",15]]],[[["u64",15]],["option",4,[["u64",15]]]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],null,[[]],[[]],[[]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["lockguard",3,[["spinloop",3]]]],["lockguard",3,[["spinloop",3]]]],null,null,null,[[]],[[]],[[]],[[]],[[],["ordering",4]],null,null,[[]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["id",3]],null,[[]],[[]],[[]],[[],["id",3]],[[],["option",4,[["ordering",4]]]],[[["u64",15]]],null,[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["u64",15]],null,null,[[]],[[]],[[],["tlsinfo",3]],[[]],null,[[]],[[],["tlsinfo",3]],[[]],[[]],null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[],["bootobjects",3]],[[]],[[]],[[],["bootobjects",3]],[[]],null,[[]],[[]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["pinpolarity",4]],[[],["triggermode",4]],[[],["destination",4]],[[]],[[]],[[]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["destination",4],["interprocessorinterrupt",4]]],[[["bool",15]]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["fnonce",8]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["arguments",3]]],[[]],[[]],[[]],[[["kernelconsolewriteflags",3]]],[[]],[[],["u32",15]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["kernelconsolewriteflags",3]],[[]],[[["kernelconsolewriteflags",3]],["ordering",4]],[[["u64",15],["usize",15]],["u64",15]],[[]],[[],["bool",15]],[[["u64",15],["u64",15],["u64",15],["u64",15]],["bool",15]],[[]],[[]],[[["kernelconsolewriteflags",3]],["bool",15]],[[["intoiterator",8]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["kernelconsolewriteflags",3]]],[[["u32",15]],["option",4]],[[["u32",15]]],[[["u32",15]]],[[["intoiterator",8]]],null,[[]],null,[[]],[[]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],null,[[["kernelconsolewriteflags",3]],["bool",15]],[[["u64",15],["u64",15],["u64",15]],["u64",15]],[[]],[[["kernelconsolewriteflags",3]],["option",4,[["ordering",4]]]],[[["kernelconsolereadflags",3]],["result",4,[["usize",15],["kernelconsolereaderror",4]]]],[[],["result",4,[["usize",15],["kernelconsolereadbuffererror",4]]]],[[],["result",4,[["usize",15],["kernelconsolereadbuffererror",4]]]],[[["kernelconsolereadflags",3]],["result",4,[["usize",15],["kernelconsolereaderror",4]]]],[[["kernelconsolereadflags",3]],["result",4,[["usize",15],["kernelconsolereaderror",4]]]],[[["u64",15]],["u64",15]],[[]],[[["u64",15],["usize",15],["bool",15]]],[[["u64",15],["usize",15]],["u64",15]],[[["bool",15]]],null,[[]],[[]],[[]],[[]],[[]],[[["u64",15],["u64",15]],["bool",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[["kernelconsolewriteflags",3]]],[[["kernelconsolewriteflags",3]],["result",4,[["consolewriteerror",3]]]],[[["kernelconsolewriteflags",3]],["result",4,[["consolewriteerror",3]]]],[[["kernelconsolewriteflags",3]],["result",4,[["consolewriteerror",3]]]],[[["kernelconsolewriteflags",3]],["result",4,[["consolewriteerror",3]]]],[[["u64",15]],["u64",15]],[[["u64",15]],["u64",15]],[[["str",15]],["result",6]],[[["str",15]],["result",6]],null,[[]],[[]],[[]],[[]],[[]],[[]],null,[[["kernelconsolereadflags",3]],["result",4,[["usize",15],["kernelconsolereaderror",4]]]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["kernelconsolewriteflags",3]]],null,null,null,[[]],[[]],[[],["genericspinlock",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["memoryregionkind",4]],[[],["mappinginfo",3]],[[]],[[]],null,null,null,[[["memoryregionkind",4]],["bool",15]],null,[[]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],null,null,[[]],[[]],[[]],[[]],[[["stivalememorymapentrytype",4]]],[[]],[[]],[[]],[[]],[[],["memorycontextinner",3]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["kernelmemorymanager",3]],null,null,null,[[["virtaddr",3],["usize",15]],["result",4]],[[["memorycontextinner",3],["virtaddr",3]]],[[["virtaddr",3],["physaddr",3],["usize",15],["mapflags",3]]],[[],["option",4]],null,[[["virtaddr",3],["usize",15],["usize",15]]],null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["layout",3]]],[[["layout",3]],["never",15]],[[["bool",15]],["option",4]],[[],["option",4,[["largeobjectpage",3]]]],[[],["option",4,[["objectpage",3]]]],[[]],[[]],[[]],[[]],[[["layout",3]]],[[["bool",15]]],[[["usize",15]],["usize",15]],[[]],[[]],null,null,[[["kernelmemorymanager",3]]],null,null,[[["kernelmemorymanager",3]]],[[]],[[]],[[],["bool",15]],[[["u64",15],["bool",15]]],null,[[]],null,null,[[["largeobjectpage",3]]],[[["objectpage",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[["virtaddr",3]],["usize",15]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[["mappingperms",3]]],[[["mapflags",3]]],[[]],[[]],[[],["u32",15]],[[],["u64",15]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["mappingperms",3]],[[],["mapflags",3]],[[]],[[]],[[["memorycontextinner",3],["virtaddr",3]]],[[],["ordering",4]],[[],["ordering",4]],[[["mapping",3]],["ordering",4]],[[["mappingperms",3]],["ordering",4]],[[["mapflags",3]],["ordering",4]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u64",15]],[[],["bool",15]],[[],["bool",15]],[[["mapping",3]],["bool",15]],[[["mappingperms",3]],["bool",15]],[[["mapflags",3]],["bool",15]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["protections",3]]],[[]],[[["mappingperms",3]]],[[]],[[["u32",15]],["option",4]],[[["u64",15]],["option",4]],[[["u32",15]]],[[["u64",15]]],[[["u32",15]]],[[["u64",15]]],[[["u64",15]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[]],[[]],null,[[],["lockguard",3,[["memorycontextinner",3]]]],null,[[]],[[]],[[["mappingref",6]]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["virtaddr",3]],["option",4,[["mappingref",6]]]],[[["virtaddr",3],["arc",3,[["page",3]]],["mappingperms",3]]],[[["virtaddr",3]],["mappingiter",3]],[[["mapping",3]],["bool",15]],[[["mappingperms",3]],["bool",15]],[[["mapflags",3]],["bool",15]],[[]],[[]],[[["arc",3,[["object",3]]],["memorycontextref",6],["usize",15],["mappingperms",3]]],[[]],[[]],[[]],[[]],null,[[],["option",4,[["ordering",4]]]],[[],["option",4,[["ordering",4]]]],[[["mapping",3]],["option",4,[["ordering",4]]]],[[["mappingperms",3]],["option",4,[["ordering",4]]]],[[["mapflags",3]],["option",4,[["ordering",4]]]],null,[[]],[[]],[[]],[[["bool",15]]],[[["bool",15]]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[],["u64",15]],null,[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[["pagefaultflags",3]]],[[]],[[],["u32",15]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["pagefaultflags",3]],[[],["pagefaultcause",4]],[[]],[[]],[[["pagefaultflags",3]],["ordering",4]],[[]],[[],["bool",15]],[[]],[[]],[[["pagefaultflags",3]],["bool",15]],[[["pagefaultcause",4]],["bool",15]],[[["intoiterator",8]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["u32",15]],["option",4]],[[["u32",15]]],[[["u32",15]]],[[["intoiterator",8]]],[[]],[[]],[[]],[[],["bool",15]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[["pagefaultflags",3]],["bool",15]],[[]],[[["virtaddr",3],["pagefaultcause",4],["pagefaultflags",3],["virtaddr",3]]],[[["pagefaultflags",3]],["option",4,[["ordering",4]]]],[[]],[[["bool",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],null,null,null,null,[[]],[[["physicalframeflags",3]],["frame",3]],[[],["option",4,[["physframe",3,[["size4kib",4]]]]]],[[]],[[]],[[["physicalframeflags",3]]],[[]],[[],["u32",15]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["physicalframeflags",3]],[[]],[[["physicalframeflags",3]],["ordering",4]],[[]],[[],["bool",15]],[[["frame",3]]],[[]],[[]],[[["physicalframeflags",3]],["bool",15]],[[["intoiterator",8]]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["frame",3]]],[[]],[[]],[[]],[[["u32",15]],["option",4]],[[["u32",15]]],[[["u32",15]]],[[["intoiterator",8]]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["physicalframeflags",3]],["bool",15]],[[["physaddr",3],["physicalframeflags",3]]],null,[[]],null,[[["physicalframeflags",3]],["option",4,[["ordering",4]]]],null,[[]],[[["bool",15]]],[[]],[[],["usize",15]],[[],["physaddr",3]],[[]],[[]],[[]],[[]],[[]],[[["physicalframeflags",3]],["option",4,[["frame",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["ordering",4]],[[]],[[]],[[]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["lockguard",3]],null,[[]],null,null,[[],["option",4,[["ordering",4]]]],null,null,null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[["pagenumber",3],["page",3]]],[[]],[[]],[[]],[[["lookupflags",3]]],[[]],[[],["u32",15]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["pagenumber",3]],[[],["lookupflags",3]],[[],["lookupresult",4]],[[]],[[]],[[]],[[],["ordering",4]],[[["pagenumber",3]],["ordering",4]],[[["lookupflags",3]],["ordering",4]],[[]],[[],["bool",15]],null,[[],["objectmanager",3]],[[]],[[]],[[],["bool",15]],[[["pagenumber",3]],["bool",15]],[[["lookupflags",3]],["bool",15]],[[["intoiterator",8]]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[["virtaddr",3]]],[[["u32",15]],["option",4]],[[["u32",15]]],[[["u32",15]]],[[["intoiterator",8]]],[[]],[[],["objid",3]],null,[[]],[[["mappingref",6]]],[[]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[["range",3,[["pagenumber",3]]]]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["lockguard",3,[["pagerangetree",3]]]],[[["objid",3],["lookupflags",3]],["lookupresult",4]],[[["objid",3],["lookupflags",3]],["lookupresult",4]],null,null,[[]],[[["pagenumber",3]],["bool",15]],[[["lookupflags",3]],["bool",15]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[["usize",15]]],[[],["result",4,[["arc",3,[["object",3]]]]]],null,null,[[],["option",4,[["ordering",4]]]],[[["pagenumber",3]],["option",4,[["ordering",4]]]],[[["lookupflags",3]],["option",4,[["ordering",4]]]],[[],["option",4]],[[]],null,null,[[["usize",15]],["u64",15]],[[["arc",3,[["object",3]]]]],[[["arc",3,[["object",3]]]]],[[]],[[["usize",15]]],[[["bool",15]]],[[["usize",15],["threadsyncop",4],["u64",15],["bool",15]],["bool",15]],null,[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[],["string",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[],["arc",3,[["object",3]]]],[[["usize",15],["usize",15]],["usize",15]],[[["usize",15],["usize",15]]],null,null,[[]],[[]],[[["lockguard",3],["pagenumber",3],["pagerange",3],["usize",15],["usize",15]]],[[["arc",3],["pagenumber",3],["arc",3],["pagenumber",3],["usize",15]]],null,[[]],[[]],null,[[["arc",3,[["object",3]]],["pagenumber",3],["pagenumber",3],["usize",15]]],[[["pagerange",3],["range",3,[["pagenumber",3]]]]],null,null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,[[]],[[]],[[],["virtaddr",3]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],null,[[]],[[["usize",15]]],[[]],[[]],[[],["physaddr",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,[[["usize",15],["page",3]]],[[]],[[]],[[]],[[["usize",15],["usize",15]]],[[]],[[["usize",15]],["arc",3,[["page",3]]]],[[]],[[]],null,[[["pagerange",3]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,[[["pagenumber",3],["page",3]]],[[["pagenumber",3],["page",3]]],[[]],[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["pagenumber",3]],["option",4,[["pagerange",3]]]],[[["pagenumber",3]],["option",4,[["pagerange",3]]]],[[["pagenumber",3]],["arc",3,[["page",3]]]],[[["pagenumber",3],["bool",15]],["option",4]],[[["range",3,[["pagenumber",3]]],["pagerange",3]],["vec",3]],[[]],[[]],[[],["bool",15]],null,[[["pagenumber",3]]],[[]],[[["pagenumber",3],["usize",15],["usize",15]]],null,[[]],null,[[],["usize",15]],[[],["range",3,[["pagenumber",3]]]],[[["range",3,[["pagenumber",3]]]],["valuerange",3,[["pagenumber",3],["intervalvalue",3,[["pagenumber",3],["pagerange",3]]]]]],[[["range",3,[["pagenumber",3]]]],["valuerangemut",3,[["pagenumber",3],["intervalvalue",3,[["pagenumber",3],["pagerange",3]]]]]],[[["pagenumber",3]]],null,[[],["string",3]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15],["arc",3,[["thread",3]]]]],[[]],[[]],[[["arc",3,[["thread",3]]]]],[[]],[[["usize",15],["u64",15]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["usize",15],["usize",15]],["usize",15]],null,null,null,null,null,[[]],[[]],[[["fnonce",8]]],null,[[]],[[]],[[]],[[]],[[]],[[],["option",4]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["usize",15],["arc",3,[["object",3]]],["memorycontextref",6],["mappingperms",3]],["result",4]],[[["arc",3]],["vec",3,[["u8",15]]]],null,null,[[["bool",15],["option",4,[["entrypoint",3]]]]],[[]],[[["elffile64",6]],["option",4,[["context",3,[["endianrcslice",6,[["runtimeendian",4]]]]]]]],[[["panicinfo",3]],["never",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["tlsinfo",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u32",15]],null,[[["thread",3]],["bool",15]],[[["bool",15]],["option",4,[["arc",3,[["thread",3]]]]]],[[]],[[],["u64",15]],[[],["priority",3]],[[],["processor",3]],[[],["processorstats",3]],[[],["schedulingqueues",3]],null,[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[["u32",15]],["processor",3]],null,[[["option",4,[["priority",3]]]],["bool",15]],[[],["bool",15]],null,null,null,[[["tlsinfo",3],["u32",15]]],[[["tlsinfo",3]],["virtaddr",3]],[[]],[[]],[[]],[[]],[[],["bool",15]],null,null,[[["u32",15],["u32",15]]],null,null,[[["arc",3,[["thread",3]]]]],null,[[["u32",15],["u32",15]]],[[["arc",3,[["thread",3]]]],["bool",15]],null,null,[[["u32",15],["virtaddr",3]],["never",15]],[[["arc",3,[["thread",3]]]]],[[]],[[["vec",3]]],[[["priority",3],["bool",15]],["bool",15]],[[["u32",15],["tlsinfo",3]]],null,null,null,[[],["bool",15]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["bool",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["usize",15],["cputoponode",3]]],[[["cputoponode",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]],["option",4,[["cputoponode",3]]]],[[["usize",15]],["option",4,[["cputoponode",3]]]],null,[[],["cputopotype",4]],[[]],null,null,null,[[]],[[["cputoponode",3],["bool",15],["option",4,[["priority",3]]],["option",4,[["fixedbitset",3]]]],["option",4,[["searchcpuresult",3]]]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["cputoponode",3]],[[]],[[]],[[]],null,null,null,[[["bool",15]],["bool",15]],[[["cputopotype",4]],["cputoponode",3]],[[],["option",4,[["cputoponode",3]]]],null,[[],["u32",15]],[[["u64",15]]],[[["bool",15]]],[[],["option",4,[["u64",15]]]],[[]],[[]],[[["u64",15]]],[[["thread",3]],["arc",3,[["thread",3]]]],[[]],[[["u64",15]]],[[["arc",3,[["thread",3]]]]],[[["arc",3,[["thread",3]]],["processor",3]]],[[["arc",3]],["u32",15]],[[["u32",15]]],[[["cputoponode",3]]],[[["arc",3,[["thread",3]]],["arc",3,[["thread",3]]]]],[[["processor",3]],["option",4,[["arc",3,[["thread",3]]]]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["option",4,[["arc",3,[["thread",3]]]]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["genericspinlock",3]],null,[[]],[[]],[[]],[[]],[[]],[[],["lockguard",3]],null,[[]],null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[],["from",8,[["u64",15]]]],[[],["from",8,[["u64",15]]]],[[],["from",8,[["u64",15]]]],[[],["from",8,[["u64",15]]]],[[],["from",8,[["u64",15]]]],[[],["from",8,[["u64",15]]]],[[["result",4]]],[[["virtaddr",3],["virtaddr",3],["u64",15]]],[[["u64",15]],["option",4,[["option",4]]]],[[["u64",15]],["option",4]],[[["u64",15],["u64",15]],["option",4]],[[],["usize",15]],null,[[["into",8,[["u64",15]]]]],[[],["virtaddr",3]],[[]],null,[[["kernelconsolewriteflags",3]]],[[]],null,[[["u64",15],["u64",15],["u64",15],["u64",15],["u64",15]],["result",4,[["objid",3],["objectcreateerror",4]]]],[[["u64",15],["u64",15],["u64",15]],["result",4,[["usize",15],["threadsyncerror",4]]]],[[["sysinfo",3]]],[[["into",8,[["u64",15]]]]],[[["into",8,[["u64",15]]]]],[[["objectcreate",3]],["result",4,[["objid",3],["objectcreateerror",4]]]],[[["objid",3],["usize",15],["protections",3]],["result",4,[["usize",15],["objectmaperror",4]]]],null,null,null,[[["arc",3,[["thread",3]]]]],[[]],[[]],[[]],[[]],null,[[["criticalguard",3]]],[[]],[[]],[[["threadsyncreference",4]],["result",4,[["threadsyncerror",4]]]],[[["virtaddr",3]],["result",4,[["threadsyncerror",4]]]],[[],["requeue",3]],[[]],[[]],null,null,null,[[["threadsyncsleep",3],["bool",15]],["result",4,[["sleepevent",3],["threadsyncerror",4]]]],[[]],[[["option",4,[["duration",3]]]],["result",4,[["usize",15],["threadsyncerror",4]]]],[[["arc",3,[["thread",3]]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["sleepevent",3]]],[[["threadsyncwake",3]],["result",4,[["usize",15],["threadsyncerror",4]]]],[[["threadspawnargs",3]],["result",4,[["objid",3],["threadspawnerror",4]]]],[[["threadcontrol",4],["u64",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["thread",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["priorityclass",4]],[[]],[[],["threadstate",4]],[[]],[[]],[[]],[[],["ordering",4]],[[],["ordering",4]],[[],["arc",3,[["object",3]]]],null,[[],["option",4,[["memorycontextref",6]]]],null,[[],["option",4,[["arc",3,[["thread",3]]]]]],[[],["priorityclass",4]],[[],["priority",3]],[[],["threadstats",3]],[[]],[[["priority",3]],["bool",15]],null,[[]],[[]],[[],["priority",3]],[[],["criticalguard",3]],[[]],[[]],[[],["bool",15]],[[["priorityclass",4]],["bool",15]],[[],["bool",15]],[[["threadstate",4]],["bool",15]],[[]],[[]],[[]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[],["option",4,[["priority",3]]]],[[],["u64",15]],null,null,[[]],[[["u64",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,null,null,[[]],null,[[]],[[]],[[["threadspawnargs",3]]],[[]],[[],["option",4,[["ordering",4]]]],[[],["option",4,[["ordering",4]]]],[[],["option",4,[["ordering",4]]]],null,[[],["usize",15]],[[],["usize",15]],[[]],null,[[],["bool",15]],[[],["bool",15]],[[["arc",3,[["thread",3]]]]],[[["threadstate",4]]],[[]],[[]],[[["u64",15]]],null,[[]],[[["priority",3]],["arc",3,[["thread",3]]]],[[["threadspawnargs",3]],["objid",3]],[[],["threadstate",4]],null,null,null,[[["thread",3]]],null,null,[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[["",26,[["from",8,[["usize",15]]],["into",8,[["usize",15]]]]],["usize",15]],["",26,[["from",8,[["usize",15]]],["into",8,[["usize",15]]]]]],[[["mutex",3],["mutex",3]]]],"p":[[8,"BootInfo"],[4,"BootInfoSystemTable"],[3,"AcpiHandlerImpl"],[3,"TSS"],[3,"GDT"],[3,"Selectors"],[4,"Exception"],[4,"InterProcessorInterrupt"],[3,"InterruptDescriptorTablePointer"],[3,"IsrContext"],[3,"InterruptDescriptorTable"],[3,"IDTEntry"],[3,"IOApic"],[3,"Table"],[3,"ArchMemoryContext"],[3,"ArchMemoryContextSwitchInfo"],[3,"GsScratch"],[3,"ArchProcessor"],[3,"P2Align12"],[3,"StivaleBootInfo"],[3,"X86SyscallContext"],[3,"AlignedXsaveRegion"],[3,"ArchThread"],[3,"TimeoutOnce"],[3,"TimeoutEntry"],[3,"TimeoutQueue"],[8,"Timeout"],[3,"InnerCondVar"],[3,"CondVar"],[3,"IdCounter"],[3,"Id"],[8,"StableId"],[3,"TlsInfo"],[3,"BootModule"],[3,"BootObjects"],[4,"PinPolarity"],[4,"Destination"],[4,"TriggerMode"],[13,"Single"],[3,"KernelConsoleWriteFlags"],[3,"KernelConsole"],[3,"KernelConsoleInner"],[3,"EmergencyMessage"],[3,"NormalMessage"],[3,"ConsoleWriteError"],[8,"KernelConsoleHardware"],[3,"MachineConsoleHardware"],[3,"SERIAL1"],[4,"MemoryRegionKind"],[4,"MapFailed"],[3,"MappingInfo"],[3,"MemoryRegion"],[3,"MappingIter"],[3,"KernelMemoryManagerInner"],[3,"KernelMemoryManager"],[3,"SafeZoneAllocator"],[3,"HeapPager"],[3,"MappingPerms"],[3,"MapFlags"],[3,"MemoryContextInner"],[3,"MemoryContext"],[3,"Mapping"],[3,"PageFaultFlags"],[4,"PageFaultCause"],[3,"PhysicalFrameFlags"],[3,"BootFrameAllocator"],[3,"Frame"],[3,"AlignedAtomicU64"],[3,"SleepQueue"],[3,"Mutex"],[3,"LockGuard"],[3,"PageNumber"],[3,"LookupFlags"],[4,"LookupResult"],[3,"OBJ_MANAGER"],[3,"Object"],[3,"ObjectManager"],[13,"Found"],[3,"CopySpec"],[3,"Page"],[3,"PageVec"],[3,"PageRange"],[3,"PageRangeTree"],[3,"SleepEntry"],[3,"SleepInfo"],[3,"Once"],[4,"IPIDest"],[3,"Processor"],[3,"ProcessorStats"],[3,"SchedulingQueues"],[13,"Single"],[4,"CPUTopoType"],[3,"CPUTopoNode"],[3,"SearchCPUResult"],[3,"AlignedAtomicU64"],[3,"GenericSpinlock"],[3,"Reschedule"],[3,"SpinLoop"],[3,"LockGuard"],[8,"RelaxStrategy"],[8,"SyscallContext"],[3,"Requeue"],[3,"SleepEvent"],[4,"PriorityClass"],[4,"ThreadState"],[3,"Priority"],[3,"Thread"],[3,"CriticalGuard"],[3,"ThreadStats"]]},\
"twizzler_queue_raw":{"doc":"A raw queue interface for Twizzler, making no assumptions â€¦","t":[18,18,3,3,3,4,3,4,3,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["NON_BLOCK","NON_BLOCK","QueueEntry","RawQueue","RawQueueHdr","ReceiveError","ReceiveFlags","SubmissionError","SubmissionFlags","Unknown","Unknown","WouldBlock","WouldBlock","all","all","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","complement","complement","contains","contains","default","difference","difference","empty","empty","eq","eq","eq","eq","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","hash","hash","info","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","is_all","is_all","is_empty","is_empty","item","multi_receive","ne","ne","new","new","new","not","not","partial_cmp","partial_cmp","partial_cmp","partial_cmp","receive","remove","remove","set","set","setup_sleep","sub","sub","sub_assign","sub_assign","submit","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union"],"q":["twizzler_queue_rawd":["If the request would block, return Err(â€¦","If the request would block, return Err(â€¦","A queue entry. All queues must be formed of these, as the â€¦","A raw queue, comprising of a header to track the algorithm â€¦","A raw queue header. This contains all the necessary â€¦","Possible errors for receiving from a queue.","Flags to control how queue receive works.","Possible errors for submitting to a queue.","Flags to control how queue submission works.","An unknown error.","An unknown error.","The operation would have blocked, and non-blocking â€¦","The operation would have blocked, and non-blocking â€¦","Returns the set containing all flags.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags â€¦","Returns the left flags, but with all the right flags â€¦","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained â€¦","Returns <code>true</code> if all of the flags in <code>other</code> are contained â€¦","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert from underlying bit representation, unless that â€¦","Convert from underlying bit representation, unless that â€¦","Convert from underlying bit representation, dropping any â€¦","Convert from underlying bit representation, dropping any â€¦","Convert from underlying bit representation, preserving all â€¦","Convert from underlying bit representation, preserving all â€¦","","","","","Get the info tag of a QueueEntry.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and â€¦","Returns the intersection between the flags in <code>self</code> and â€¦","Returns <code>true</code> if there are flags common to both <code>self</code> and â€¦","Returns <code>true</code> if there are flags common to both <code>self</code> and â€¦","","","","","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Get the data item of a QueueEntry.","Wait for receiving on multiple raw queues. If any of the â€¦","","","Construct a new raw queue header.","Construct a new raw queue out of a header reference and a â€¦","Construct a new QueueEntry. The <code>info</code> tag should be used to â€¦","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","","Receive data from the queue, returning either that data or â€¦","Removes the specified flags in-place.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the â€¦","Inserts or removes the specified flags depending on the â€¦","","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Submit a data item of type T, wrapped in a QueueEntry, to â€¦","Returns the symmetric difference between the flags in <code>self</code> â€¦","Returns the symmetric difference between the flags in <code>self</code> â€¦","","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>."],"i":[1,2,0,0,0,0,0,0,0,3,4,3,4,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,5,6,7,1,2,3,4,5,6,7,1,2,3,4,7,1,2,3,4,7,1,2,3,4,1,2,3,4,1,2,1,2,7,1,2,1,2,1,2,3,4,1,2,7,1,1,1,1,1,2,2,2,2,2,3,4,5,6,7,1,2,3,4,1,2,1,2,1,2,1,2,1,2,7,1,2,1,2,1,2,5,6,7,1,2,3,4,1,2,1,2,7,0,1,2,5,6,7,1,2,1,2,3,4,6,1,2,1,2,6,1,2,1,2,6,1,2,7,1,2,3,4,1,2,5,6,7,1,2,3,4,5,6,7,1,2,3,4,5,6,7,1,2,3,4,1,2],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[["submissionflags",3]]],[[["receiveflags",3]]],[[]],[[]],[[],["u32",15]],[[],["u32",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["queueentry",3]],[[],["submissionflags",3]],[[],["receiveflags",3]],[[],["submissionerror",4]],[[],["receiveerror",4]],[[]],[[]],[[]],[[]],[[]],[[["submissionflags",3]],["ordering",4]],[[["receiveflags",3]],["ordering",4]],[[["submissionerror",4]],["ordering",4]],[[["receiveerror",4]],["ordering",4]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["queueentry",3]],[[]],[[]],[[]],[[]],[[["submissionflags",3]],["bool",15]],[[["receiveflags",3]],["bool",15]],[[["submissionerror",4]],["bool",15]],[[["receiveerror",4]],["bool",15]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u32",15]],["option",4]],[[["u32",15]],["option",4]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[]],[[]],[[],["u32",15]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[["fn",8],["fn",8],["receiveflags",3]],["result",4,[["usize",15],["receiveerror",4]]]],[[["submissionflags",3]],["bool",15]],[[["receiveflags",3]],["bool",15]],[[["usize",15],["usize",15]]],[[["rawqueuehdr",3]]],[[["u32",15]]],[[]],[[]],[[["submissionflags",3]],["option",4,[["ordering",4]]]],[[["receiveflags",3]],["option",4,[["ordering",4]]]],[[["submissionerror",4]],["option",4,[["ordering",4]]]],[[["receiveerror",4]],["option",4,[["ordering",4]]]],[[["fn",8],["fn",8],["receiveflags",3]],["result",4,[["queueentry",3],["receiveerror",4]]]],[[]],[[]],[[["bool",15]]],[[["bool",15]]],[[["bool",15],["option",4],["option",4]],["result",4,[["receiveerror",4]]]],[[]],[[]],[[]],[[]],[[["queueentry",3],["fn",8],["fn",8],["submissionflags",3]],["result",4,[["submissionerror",4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]]],"p":[[3,"SubmissionFlags"],[3,"ReceiveFlags"],[4,"SubmissionError"],[4,"ReceiveError"],[3,"RawQueueHdr"],[3,"RawQueue"],[3,"QueueEntry"]]},\
"xtask":{"doc":"","t":[13,13,4,3,13,6,13,4,4,4,13,13,13,13,5,12,11,11,11,5,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,11,12,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11],"n":["Aarch64","Accel","Arch","BuildInfo","Debug","DynError","Emu","Platform","Profile","QemuProfile","Release","Rpi3","Unknown","X86","all_supported_build_infos","arch","as_str","as_str","as_str","bootstrap","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_all","build_crtx","build_std","cargo_cmd_collection","check_all","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmd_all","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","get_args","get_kernel_triple","get_twizzler_triple","into","into","into","into","into","main","make_disk","make_path","make_tool_path","ne","platform","profile","start_qemu","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_main","type_id","type_id","type_id","type_id","type_id"],"q":["xtask","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,2,0,0,3,0,2,0,0,0,3,4,4,1,0,5,3,1,4,0,3,1,4,2,5,3,1,4,2,5,0,0,0,0,0,3,1,4,2,5,3,1,4,2,5,0,3,1,4,2,5,3,1,4,2,5,5,3,1,4,2,5,2,5,5,3,1,4,2,5,0,0,0,0,5,5,5,0,3,1,4,2,5,5,3,1,4,2,5,3,1,4,2,5,0,3,1,4,2,5],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["vec",3,[["buildinfo",3]]]],null,[[],["str",15]],[[],["str",15]],[[],["str",15]],[[["bool",15]],["result",4,[["box",3,[["error",8]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["metadata",3],["buildinfo",3]],["result",4,[["box",3,[["error",8]]]]]],[[["str",15],["buildinfo",3]],["result",4,[["box",3,[["error",8]]]]]],[[],["result",4,[["box",3,[["error",8]]]]]],[[["metadata",3],["str",15],["str",15],["str",15],["option",4,[["string",3]]],["buildinfo",3],["option",4,[["string",3]]],["bool",15]],["result",4,[["box",3,[["error",8]]]]]],[[["metadata",3],["buildinfo",3]],["result",4,[["box",3,[["error",8]]]]]],[[],["profile",4]],[[],["arch",4]],[[],["platform",4]],[[],["qemuprofile",4]],[[],["buildinfo",3]],[[]],[[]],[[]],[[]],[[]],[[["metadata",3],["str",15],["buildinfo",3]],["result",4,[["box",3,[["error",8]]]]]],[[["profile",4]],["bool",15]],[[["arch",4]],["bool",15]],[[["platform",4]],["bool",15]],[[["qemuprofile",4]],["bool",15]],[[["buildinfo",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[],["vec",3,[["str",15]]]],[[],["string",3]],[[],["string",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[["metadata",3],["buildinfo",3]],["result",4,[["box",3,[["error",8]]]]]],[[["buildinfo",3],["bool",15],["str",15]],["string",3]],[[["buildinfo",3],["str",15]],["string",3]],[[["buildinfo",3]],["bool",15]],null,null,[[["metadata",3],["buildinfo",3],["qemuprofile",4]],["result",4,[["box",3,[["error",8]]]]]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4,[["box",3,[["error",8]]]]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[4,"Arch"],[4,"QemuProfile"],[4,"Profile"],[4,"Platform"],[3,"BuildInfo"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};