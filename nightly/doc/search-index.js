var searchIndex = JSON.parse('{\
"devmgr":{"doc":"","t":[5,5,0,5,5,5,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,12,5,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12],"n":["get_pcie_offset","main","nvme_test","print_info","start_pcie","start_pcie_device","NvmeController","NvmeQueue","NvmeRequest","NvmeResponse","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","ctrl","flush","fmt","fmt","from","from","from","from","idx","into","into","into","into","requester","start","submit","test","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","x","x"],"q":["devmgr","","","","","","devmgr::nvme_test","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,1,2,3,4,1,2,3,4,3,4,3,4,2,2,3,4,1,2,3,4,2,1,2,3,4,1,0,2,0,3,4,1,2,3,4,1,2,3,4,1,2,3,4,3,4],"f":[[[["u8",15]],["usize",15]],[[]],null,[[["u8",15],["pciefunctionheader",3]],["option",4]],[[["device",3]]],[[["u8",15],["device",3]]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["nvmerequest",3]],[[],["nvmeresponse",3]],[[]],[[]],null,[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],null,[[]],[[],[["box",3,["future"]],["pin",3,["box"]]]],[[["arc",3,["nvmecontroller"]],["nvmecontroller",3]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null],"p":[[3,"NvmeController"],[3,"NvmeQueue"],[3,"NvmeRequest"],[3,"NvmeResponse"]]},\
"init":{"doc":"","t":[7,7,7,3,11,11,5,5,5,5,11,5,11,5,5,5,5,5,5,11,11,11,12],"n":["BAR","BAZ","FOO","Foo","borrow","borrow_mut","enumerate_children","exec","exec2","find_init_name","from","get_user_input","into","list_subobjs","main","test_kaction","test_mutex","test_thread_sync","test_thread_sync_timeout","try_from","try_into","type_id","x"],"q":["init","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,0,0,1,1,1,1],"f":[null,null,null,null,[[]],[[]],[[["usize",15],["objid",3]]],[[["str",15],["objid",3]]],[[["str",15],["objid",3]],[["objid",3],["option",4,["objid"]]]],[[["str",15]],[["objid",3],["option",4,["objid"]]]],[[]],[[]],[[]],[[["usize",15],["objid",3]]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null],"p":[[3,"Foo"]]},\
"netmgr":{"doc":"","t":[6,3,6,11,0,11,11,0,12,11,0,12,11,11,0,11,0,0,5,0,11,0,0,0,0,11,11,11,3,17,3,3,3,3,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,3,3,3,12,5,11,11,11,11,11,11,11,11,11,12,11,12,11,12,11,11,12,11,5,11,11,11,12,12,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,8,11,10,10,3,11,11,12,0,11,11,11,11,12,12,11,0,11,12,11,11,11,11,11,11,4,3,4,3,13,13,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,8,3,13,4,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,10,11,11,11,12,11,10,10,11,11,11,11,11,11,11,11,12,12,5,0,5,3,13,3,4,4,3,3,13,12,12,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,12,11,12,11,12,11,11,11,11,11,11,11,12,5,12,12,12,11,11,11,11,11,11,11,12,12,11,12,5,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,3,3,3,12,11,11,11,11,11,11,11,11,11,11,5,12,11,11,11,5,0,11,12,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,12,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,5,13,13,3,13,4,8,12,11,11,11,11,11,11,11,5,10,0,11,11,10,5,10,0,11,11,11,11,11,11,0,3,3,5,5,11,11,11,11,12,12,12,11,11,11,5,11,11,11,11,11,11,11,11,11,12,11,11,11],"n":["Handle","HandleData","HandleRef","add_endpoint_info","arp","borrow","borrow_mut","client_request","conn_id","default","endpoint","endpoints","from","get_endpoint_info","header","into","link","listen","main","network","new_conn_id","nics","route","send","transport","try_from","try_into","type_id","ARP_TABLE","ARP_TIMEOUT","ArpInfo","ArpKey","ArpTable","ArpTableInner","__private_field","add_entry","addr","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","deref","entries","eq","eq","eth_addr","fire_arp_request","flag","fmt","fmt","from","from","from","from","from","inner","into","into","into","into","into","lookup","lookup_arp_info","ne","ne","new","partial_cmp","partial_cmp","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","handle_client_request","ENDPOINTS","EndPoint","EndPointKey","__private_field","add_endpoint","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cmp","conn_id","deref","dest","dest_address","dest_service","eq","flags","flags","fmt","foreach_endpoint","from","from","from","handle","info","into","into","into","ne","new","partial_cmp","source","source_address","source_service","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Header","as_bytes","len","update_csum","IncomingPacketInfo","borrow","borrow_mut","buffer","ethernet","from","get_network_hdr","get_transport_hdr","into","link_info","network_info","new","nic","packet_len","transport_info","try_from","try_into","type_id","update_for_link","update_for_network","update_for_transport","EtherType","EthernetAddr","EthernetError","EthernetHeader","Ipv4","Unknown","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcast","build_localhost","bytes","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","default","default","dest_mac","eq","ethertype","ethertype","fmt","fmt","fmt","fmt","from","from","from","from","from","handle_incoming_ethernet_packets","into","into","into","into","len","local","ne","partial_cmp","src_mac","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update_csum","ManagedBuffer","NetworkInterface","NicBuffer","NicBuffer","SendableBuffer","allocate","as_bytes","as_bytes","as_bytes_mut","as_bytes_mut","borrow","borrow","borrow_mut","borrow_mut","data","data_len","drop","fmt","from","from","get_ethernet_addr","get_minimal_header","into","into","len","packet_len","recv_ethernet","send_ethernet","set_len","try_from","try_from","try_into","try_into","type_id","type_id","write_layer_headers","0","0","setup_listen","ipv4","send_raw_packet","GlobalListener","Icmp","Ipv4Header","Ipv4Prot","Ipv4SendError","LISTEN","Listener","Unknown","__private_field","addr","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_ipv4_header","clone","clone_into","csum","deref","dest","dest_addr","flags_and_frag","fmt","from","from","from","from","from","from","handle","handle_incoming_ipv4_packet","ident","info1","info2","into","into","into","into","into","into","len","len","listeners","packet_len","prot","send_to","setup_ipv4_listen","source","source_addr","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","ttl","type_id","type_id","type_id","type_id","type_id","type_id","update_csum","NIC_MANAGER","NicManager","NicManagerInner","__private_field","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","from","from","from","init","inner","into","into","into","lookup_nic","loopback","new","nics","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Loopback","LoopbackInner","borrow","borrow","borrow_mut","borrow_mut","buffer","flag","from","from","get_ethernet_addr","inner","into","into","new","recv_ethernet","send_ethernet","try_from","try_from","try_into","try_into","type_id","type_id","send_packet","NoRaw","OnlyRaw","PROTOS","RawAllowed","RawSupport","TransportProto","__private_field","borrow","borrow","borrow_mut","borrow_mut","deref","from","from","handle_packet","handle_packet","icmp","into","into","raw_support","send_packet","send_packet","tcp","try_from","try_from","try_into","try_into","type_id","type_id","udp","Icmp","IcmpHeader","_handle_icmp_packet","_send_packet","borrow","borrow","borrow_mut","borrow_mut","code","csum","extra","from","from","handle_packet","init","into","into","len","raw_support","send_packet","try_from","try_from","try_into","try_into","ty","type_id","type_id","update_csum"],"q":["netmgr","","","","","","","","","","","","","","","","","","","","","","","","","","","","netmgr::arp","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","netmgr::client_request","netmgr::endpoint","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","netmgr::header","","","","netmgr::link","","","","","","","","","","","","","","","","","","","","","netmgr::link::ethernet","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","netmgr::link::nic","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","netmgr::link::nic::SendableBuffer","","netmgr::listen","netmgr::network","","netmgr::network::ipv4","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","netmgr::nics","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","netmgr::nics::loopback","","","","","","","","","","","","","","","","","","","","","","","netmgr::send","netmgr::transport","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","netmgr::transport::icmp","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"di":[0,0,0,1,0,1,1,0,1,1,0,1,1,1,0,1,0,0,0,0,1,0,0,0,0,1,1,1,0,0,0,0,0,0,2,3,4,5,3,6,4,2,5,3,6,4,2,6,4,6,4,6,4,2,5,6,4,6,3,5,6,4,5,3,6,4,2,3,5,3,6,4,2,3,0,6,4,3,6,4,6,4,5,3,6,4,2,5,3,6,4,2,5,3,6,4,2,0,0,0,0,7,0,8,9,7,8,9,7,9,9,9,8,7,9,9,9,9,9,9,9,0,8,9,7,8,8,8,9,7,9,9,9,9,9,9,9,8,9,7,8,9,7,8,9,7,0,10,10,10,0,11,11,11,0,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,0,0,0,0,12,13,14,13,15,12,14,13,15,12,14,15,14,14,13,15,12,14,13,15,12,14,14,15,15,14,15,15,14,13,15,12,14,14,13,15,12,0,14,13,15,12,15,14,14,14,15,14,13,15,12,14,13,15,12,12,14,13,15,12,14,13,15,12,15,16,0,0,16,0,17,16,17,16,17,16,17,16,17,17,17,17,17,16,17,18,17,16,17,17,17,18,18,17,16,17,16,17,16,17,17,19,20,0,0,0,0,21,0,0,0,0,0,22,23,24,21,22,24,25,26,23,21,22,24,25,26,23,0,26,26,26,23,26,26,26,26,21,22,24,25,26,23,24,0,26,26,26,21,22,24,25,26,23,26,26,25,26,26,0,0,26,26,26,21,21,22,24,25,26,23,21,22,24,25,26,23,26,21,22,24,25,26,23,26,0,0,0,27,28,29,27,28,29,27,27,28,29,27,0,29,28,29,27,0,0,29,28,28,29,27,28,29,27,28,29,27,0,0,30,31,30,31,30,31,30,31,31,31,30,31,31,31,31,30,31,30,31,30,31,0,32,32,0,32,0,0,33,32,33,32,33,33,32,33,0,34,0,32,33,34,0,34,0,32,33,32,33,32,33,0,0,0,0,0,35,36,35,36,36,36,36,35,36,35,0,35,36,36,35,35,35,36,35,36,36,35,36,36],"f":[null,null,null,[[["connectionid",3],["endpointkey",3]]],null,[[]],[[]],null,null,[[]],null,null,[[]],[[["connectionid",3]],[["endpointkey",3],["option",4,["endpointkey"]]]],null,[[]],null,null,[[]],null,[[],["connectionid",3]],null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,[[["arpkey",3],["arpinfo",3]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["arpinfo",3]],[[],["arpkey",3]],[[]],[[]],[[["arpinfo",3]],["ordering",4]],[[["arpkey",3]],["ordering",4]],[[],["arptable",3]],null,[[["arpinfo",3]],["bool",15]],[[["arpkey",3]],["bool",15]],null,[[["arpkey",3]]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[["arpkey",3]]],[[["arpkey",3]]],[[["arpinfo",3]],["bool",15]],[[["arpkey",3]],["bool",15]],[[]],[[["arpinfo",3]],[["option",4,["ordering"]],["ordering",4]]],[[["arpkey",3]],[["option",4,["ordering"]],["ordering",4]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["handleref",6],["u32",15],["txrequest",4]]],null,null,null,null,[[["connectionid",3],["endpointkey",3],["handleref",6]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["endpointkey",3]],[[]],[[["endpointkey",3]],["ordering",4]],null,[[],["mutex",3]],null,[[]],null,[[["endpointkey",3]],["bool",15]],[[],["listenflags",3]],null,[[["formatter",3]],["result",6]],[[["endpointkey",3]]],[[]],[[]],[[]],null,null,[[]],[[]],[[]],[[["endpointkey",3]],["bool",15]],[[["nodeaddr",4],["listenflags",3],["serviceaddr",4]]],[[["endpointkey",3]],[["option",4,["ordering"]],["ordering",4]]],null,[[]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[],["usize",15]],[[["nicbuffer",3]]],null,[[]],[[]],null,null,[[]],[[],[["option",4],["header",8]]],[[],[["option",4],["header",8]]],[[]],null,null,[[["nicbuffer",3],["arc",3,["nicbuffer"]]]],null,[[],["usize",15]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["usize",15]],["option",4]],[[["usize",15]],["option",4]],[[["usize",15]],["option",4]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["ethertype",4]]],null,[[],["ethernetaddr",3]],[[],["etherneterror",4]],[[],["ethernetheader",3]],[[],["ethertype",4]],[[]],[[]],[[]],[[]],[[["ethernetaddr",3]],["ordering",4]],[[],["ethernetaddr",3]],[[],["ethernetheader",3]],null,[[["ethernetaddr",3]],["bool",15]],[[],[["ethertype",4],["result",4,["ethertype"]]]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[]],[[["ethernetaddr",3]],["bool",15]],[[["ethernetaddr",3]],[["option",4,["ordering"]],["ordering",4]]],null,[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["u16",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["nicbuffer",3]]],null,null,null,null,null,[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["ethernetaddr",3]],[[["usize",15]],["header",8]],[[]],[[]],null,[[],["usize",15]],[[],[["box",3,["future"]],["pin",3,["box"]]]],[[["nicbuffer",3]],[["box",3,["future"]],["pin",3,["box"]]]],[[["usize",15]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["usize",15]],["usize",15]],null,null,[[["handleref",6],["listeninfo",3]],["txcompletion",4]],null,[[["handleref",6],["packetdata",3],["endpointkey",3]]],null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["ipv4prot",4],["ipv4addr",3]],["ipv4header",3]],[[],["ipv4header",3]],[[]],null,[[],["globallistener",3]],null,[[],["ipv4addr",3]],null,[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["incomingpacketinfo",3]]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],null,null,[[],["usize",15]],null,[[["handleref",6],["ipv4prot",4],["ipv4addr",3],["header",8],["nicbuffer",3],["option",4,["header"]]]],[[["handleref",6],["ipv4addr",3]]],null,[[],["ipv4addr",3]],[[]],[[],["result",4]],[[["u8",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["nicbuffer",3]]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["nicmanager",3]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[["ethernetaddr",3]],[["arc",3,["networkinterface"]],["option",4,["arc"]]]],null,[[]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,[[]],[[]],[[]],[[]],null,null,[[]],[[]],[[],["ethernetaddr",3]],null,[[]],[[]],[[]],[[],[["box",3,["future"]],["pin",3,["box"]]]],[[["nicbuffer",3]],[["box",3,["future"]],["pin",3,["box"]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["handleref",6],["packetdata",3],["connectionid",3]]],null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["btreemap",3]],[[]],[[]],[[["serviceaddr",4],["incomingpacketinfo",3]]],[[["incomingpacketinfo",3]],[["box",3,["future"]],["pin",3,["box"]]]],null,[[]],[[]],[[],["rawsupport",4]],[[["handleref",6],["packetdata",3],["endpointkey",3]]],[[["handleref",6],["packetdata",3],["endpointkey",3]],[["pin",3,["box"]],["box",3,["future"]]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,[[["usize",15],["arc",3],["ipv4addr",3]]],[[["handleref",6],["packetdata",3],["endpointkey",3]]],[[]],[[]],[[]],[[]],null,null,null,[[]],[[]],[[["incomingpacketinfo",3]],[["box",3,["future"]],["pin",3,["box"]]]],[[]],[[]],[[]],[[],["usize",15]],[[],["rawsupport",4]],[[["handleref",6],["packetdata",3],["endpointkey",3]],[["pin",3,["box"]],["box",3,["future"]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[],["typeid",3]],[[],["typeid",3]],[[["nicbuffer",3]]]],"p":[[3,"HandleData"],[3,"ARP_TABLE"],[3,"ArpTable"],[3,"ArpKey"],[3,"ArpTableInner"],[3,"ArpInfo"],[3,"ENDPOINTS"],[3,"EndPoint"],[3,"EndPointKey"],[8,"Header"],[3,"IncomingPacketInfo"],[4,"EtherType"],[4,"EthernetError"],[3,"EthernetAddr"],[3,"EthernetHeader"],[4,"SendableBuffer"],[3,"NicBuffer"],[8,"NetworkInterface"],[13,"NicBuffer"],[13,"ManagedBuffer"],[4,"Ipv4Prot"],[4,"Ipv4SendError"],[3,"LISTEN"],[3,"Listener"],[3,"GlobalListener"],[3,"Ipv4Header"],[3,"NIC_MANAGER"],[3,"NicManagerInner"],[3,"NicManager"],[3,"LoopbackInner"],[3,"Loopback"],[4,"RawSupport"],[3,"PROTOS"],[8,"TransportProto"],[3,"Icmp"],[3,"IcmpHeader"]]},\
"nettest":{"doc":"","t":[17,3,11,11,12,12,12,5,11,5,5,11,5,5,11,11,12,11],"n":["ICMP_ECHO_REQUEST","IcmpHeader","borrow","borrow_mut","code","csum","extra","fill_ping_buffer","from","handle_ping_recv","handler","into","main","ping","try_from","try_into","ty","type_id"],"q":["nettest","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","",""],"i":[0,0,1,1,1,1,1,0,1,0,0,1,0,0,1,1,1,1],"f":[null,null,[[]],[[]],null,null,null,[[["usize",15],["managedbuffer",3]]],[[]],[[["managedbuffer",3]]],[[["arc",3],["rxrequest",4],["u32",15]]],[[]],[[]],[[["ipv4addr",3]]],[[],["result",4]],[[],["result",4]],null,[[],["typeid",3]]],"p":[[3,"IcmpHeader"]]},\
"twizzler_abi":{"doc":"This library provides a common interface for applications …","t":[0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,5,5,5,0,5,13,4,13,13,3,3,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,13,4,4,13,3,3,3,3,4,13,13,13,3,13,17,4,13,3,17,13,13,4,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,0,13,3,3,3,3,3,3,4,13,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,12,12,11,11,11,11,11,11,11,12,12,12,12,12,12,12,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,11,11,11,5,5,11,12,11,11,11,12,13,13,13,13,13,17,4,4,3,4,4,3,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,12,12,12,12,12,12,12,12,3,13,13,13,4,13,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,3,8,3,8,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,11,11,11,11,11,11,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,18,17,17,3,3,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,3,11,11,11,11,11,11,11,11,11,11,11,11,17,17,17,17,5,5,5,5,13,4,13,3,3,4,13,13,3,3,18,13,3,13,13,18,4,18,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,3,4,3,4,13,3,4,18,3,3,13,18,18,13,4,3,13,13,13,13,13,13,4,4,3,13,4,3,13,3,13,4,13,13,13,4,13,3,13,4,13,4,13,3,3,13,4,13,13,13,13,13,13,3,13,4,4,13,3,4,3,4,13,4,3,4,4,6,3,3,13,13,13,13,13,13,13,13,13,13,13,13,13,3,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,3,11,11,5,11,11,5,5,11,11,11,11,5,5,13,3,3,4,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,12,3,11,11,11,11,11,11,11,11,11,11,11],"n":["alloc","arch","aux","device","exec","kso","load_elf","marker","meta","object","ready","rt1","simple_mutex","slot","syscall","thread","time","upcall","vcell","global_alloc","global_free","global_realloc","syscall","raw_syscall","Arguments","AuxEntry","Environment","ExecId","KernelInitInfo","KernelInitName","Null","ProgramHeaders","add_name","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","fmt","from","from","from","get_kernel_init_info","id","into","into","into","name","names","ne","new","new","null","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","0","0","0","0","1","1","Bus","BusType","CacheType","Device","DeviceId","DeviceInterrupt","DeviceInterruptFlags","DeviceRepr","DeviceType","High","Idle","Info","InterruptVector","Low","MMIO_OFFSET","MailboxPriority","Mmio","MmioInfo","NUM_DEVICE_INTERRUPTS","Num","Pcie","SubObjectType","System","Uncachable","Unknown","Unknown","WriteBack","WriteCombining","WriteThrough","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bus","bus_type","cache_type","check_for_interrupt","check_for_mailbox","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","complement","contains","device_id","device_type","difference","empty","eq","eq","eq","eq","eq","eq","extend","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","info","init","init","insert","interrupts","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into","is_all","is_empty","length","mailboxes","ne","ne","ne","new","new","not","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","register_interrupt","remove","set","setup_interrupt_sleep","sub","sub_assign","symmetric_difference","sync","tags","tags","taken","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","vec","wait_for_interrupt","pcie","AllocateInterrupt","PcieBridgeHeader","PcieCapabilityHeader","PcieDeviceHeader","PcieDeviceInfo","PcieFunctionHeader","PcieInfo","PcieKactionSpecific","RegisterDevice","bar","bars","bist","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bridge_control","bus_end","bus_nr","bus_start","cache_line_size","cap_ptr","cap_ptr","cardbus_cis_ptr","class","class","command","dev_nr","device_id","device_id","exprom_base","exprom_base","fmt","fmt","fnheader","fnheader","from","from","from","from","from","from","from","func_nr","header_type","id","int_line","int_line","int_pin","int_pin","into","into","into","into","into","into","into","io_base","io_base_upper","io_limit","io_limit_upper","latency_timer","max_latency","memory_base","memory_limit","min_grant","next","pref_base_upper","pref_limit_upper","pref_memory_base","pref_memory_limit","primary_bus_nr","progif","progif","revision","revision","secondary_bus_nr","secondary_latency_timer","secondary_status","seg_nr","seg_nr","status","subclass","subclass","subordinate_bus_nr","subsystem_id","subsystem_vendor_id","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vendor_id","vendor_id","Segment","borrow","borrow_mut","from","get_current_exe_id","get_segment","into","len","try_from","try_into","type_id","vaddr","Generic","GetChild","GetKsoRoot","GetSubObject","InvalidArgument","KSO_NAME_MAX_LEN","KactionCmd","KactionError","KactionFlags","KactionGenericCmd","KactionValue","KsoHdr","NotFound","ObjID","PinPages","ReleasePin","Specific","U64","Unknown","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","complement","contains","difference","empty","eq","eq","eq","eq","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","insert","intersection","intersects","into","into","into","into","into","into","is_all","is_empty","ne","ne","ne","ne","new","not","objid","pack_kaction_pin_start_and_len","pack_kaction_pin_token_and_len","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","remove","set","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","u64","union","unpack_kaction_pin_start_and_len","unpack_kaction_pin_token_and_len","unwrap_objid","unwrap_u64","0","0","0","0","0","1","0","0","ElfObject","InvalidExecutable","MapFailed","ObjectCreateFailed","SpawnExecutableError","ThreadSpawnFailed","borrow","borrow","borrow_mut","borrow_mut","fmt","from","from","into","into","spawn_new_executable","try_from","try_from","try_into","try_into","type_id","type_id","BaseTag","BaseType","BaseVersion","ObjSafe","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","fmt","fmt","from","from","init","into","into","tags","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","MetaExt","MetaExtTag","MetaFlags","MetaInfo","Nonce","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","extcount","flags","fmt","fmt","fmt","fotcount","from","from","from","from","from","into","into","into","into","into","kuid","nonce","tag","tag","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","value","version","EXEC","MAX_SIZE","NULLPAGE_SIZE","ObjID","Protections","READ","WRITE","all","as_ref","as_u128","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","complement","contains","difference","empty","eq","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","hash","insert","intersection","intersects","into","into","is_all","is_empty","ne","ne","new","new_from_parts","not","partial_cmp","partial_cmp","remove","set","split","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_string","toggle","try_from","try_from","try_into","try_into","type_id","type_id","union","twz_runtime_start","Mutex","borrow","borrow_mut","from","into","is_locked","lock","new","try_from","try_into","try_lock","type_id","unlock","RESERVED_DATA","RESERVED_KERNEL_INIT","RESERVED_STACK","RESERVED_TEXT","global_allocate","global_release","runtime_init","to_vaddr_range","AlreadyHandle","BackingType","Buffer","ClockFlags","ClockInfo","ClockSource","Console","CreateCommit","CreateTieFlags","CreateTieSpec","DISCARD_ON_FULL","Delete","DeleteFlags","Equal","Exit","FORCE","HandleType","INVERT","IOError","InvalidArgument","InvalidArgument","InvalidArgument","InvalidArgument","InvalidArgument","InvalidArgument","InvalidArgument","InvalidArgument","InvalidArgument","InvalidArgument","InvalidID","InvalidID","InvalidProtections","InvalidReference","InvalidSlot","InvalidSlot","InvalidSlot","Kaction","KernelConsoleRead","KernelConsoleReadBufferError","KernelConsoleReadBufferFlags","KernelConsoleReadError","KernelConsoleReadFlags","KernelConsoleReadSource","KernelConsoleWrite","KernelConsoleWriteFlags","LifetimeType","MONOTONIC","MapFlags","MapInfo","Monotonic","NONBLOCKING","NONBLOCKING","NewHandle","NewHandleError","NewHandleFlags","NoSuchDevice","Normal","NotFound","NotFound","Null","NumSyscalls","ObjectControlCmd","ObjectControlError","ObjectCreate","ObjectCreate","ObjectCreateError","ObjectCreateFlags","ObjectCtrl","ObjectInfo","ObjectMap","ObjectMapError","ObjectNotFound","ObjectNotFound","ObjectReadMap","ObjectReadMapError","ObjectRef","ObjectSource","ObjectStat","ObjectStatError","ObjectUnmap","ObjectUnmapError","Persistent","PinnedPage","ReadClockFlags","ReadClockInfo","ReadClockInfoError","RealTime","SetTls","SetUpcall","Sleep","SourceMisalignment","Spawn","SysInfo","SysInfo","Syscall","ThreadControl","ThreadCtrl","ThreadSpawnArgs","ThreadSpawnError","ThreadSpawnFlags","ThreadSync","ThreadSync","ThreadSyncError","ThreadSyncFlags","ThreadSyncOp","ThreadSyncReference","ThreadSyncResult","ThreadSyncSleep","ThreadSyncWake","Timeout","Unknown","Unknown","Unknown","Unknown","Unknown","Unknown","Unknown","Unknown","Unknown","Unknown","Unknown","Unknown","UnmapFlags","Virtual","VmContext","Volatile","Wake","WouldBlock","WouldBlock","Yield","all","all","all","all","all","all","all","all","all","all","all","all","all","arg","backing","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","complement","complement","complement","complement","complement","complement","complement","complement","complement","complement","complement","complement","complement","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","count","cpu_count","cpu_count","current_value","default","dest_start","difference","difference","difference","difference","difference","difference","difference","difference","difference","difference","difference","difference","difference","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","entry","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","flags","flags","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","get_result","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","id","id","id","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_monotonic","len","life","load","maps","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","new","new","new","new","new","new","new","new_sleep","new_wake","not","not","not","not","not","not","not","not","not","not","not","not","not","num","op","page_size","page_size","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","physical_address","precision","prot","ready","ready","reference","reference","remove","remove","remove","remove","remove","remove","remove","remove","remove","remove","remove","remove","remove","set","set","set","set","set","set","set","set","set","set","set","set","set","slot","src_start","stack_base","stack_size","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","sys_debug_shutdown","sys_info","sys_kaction","sys_kernel_console_read","sys_kernel_console_read_buffer","sys_kernel_console_write","sys_new_handle","sys_object_create","sys_object_ctrl","sys_object_map","sys_object_read_map","sys_object_stat","sys_object_unmap","sys_read_clock_info","sys_spawn","sys_thread_exit","sys_thread_set_upcall","sys_thread_settls","sys_thread_sync","sys_thread_yield","ties_from","ties_to","tls","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","union","union","union","union","union","union","union","union","union","union","union","value","version","vm_context_handle","0","0","0","1","1","0","0","1","ThreadRepr","borrow","borrow_mut","exit","from","into","join","spawn","try_from","try_into","type_id","wait","get_monotonic","get_systemtime","Exception","ExceptionInfo","UpcallFrame","UpcallInfo","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bp","code","fmt","fmt","from","from","from","info","into","into","into","ip","new","r10","r11","r12","r13","r14","r15","r8","r9","rax","rbp","rbx","rcx","rdi","rdx","rflags","rip","rsi","rsp","sp","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","0","Volatile","borrow","borrow_mut","fmt","from","get","into","new","set","try_from","try_into","type_id"],"q":["twizzler_abi","","","","","","","","","","","","","","","","","","","twizzler_abi::alloc","","","twizzler_abi::arch","twizzler_abi::arch::syscall","twizzler_abi::aux","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","twizzler_abi::aux::AuxEntry","","","","","","twizzler_abi::devicetwizzler_abi::device::bus","twizzler_abi::device::bus::pcie","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","twizzler_abi::exec","","","","","","","","","","","","twizzler_abi::kso","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","twizzler_abi::kso::KactionCmd","","twizzler_abi::kso::KactionGenericCmd","","","","twizzler_abi::kso::KactionValue","","twizzler_abi::load_elf","","","","","","","","","","","","","","","","","","","","","","twizzler_abi::marker","","","","","","","","","","","","","","","","","","","","","","","","","","","","twizzler_abi::meta","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","twizzler_abi::object","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","twizzler_abi::rt1","twizzler_abi::simple_mutex","","","","","","","","","","","","","twizzler_abi::slot","","","","","","","","twizzler_abi::syscalltwizzler_abi::syscall::ObjectControlCmd","twizzler_abi::syscall::ThreadSync","","","","twizzler_abi::syscall::ThreadSyncReference","","","twizzler_abi::thread","","","","","","","","","","","","twizzler_abi::time","","twizzler_abi::upcall","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","twizzler_abi::upcall::UpcallInfo","twizzler_abi::vcell","","","","","","","","","","",""],"d":["Global allocation. Used by the Rust standard library as …","Architecture-dependent code, will include submodules for …","When running a new program (and thus, initializing a new …","APIs for accessing the device tree and device …","Some runtime-available executable information. Mostly used …","Functions to deal with Kernel State Objects (KSOs). These …","Functions to start new executable programs.","Marker traits used to indicate safety for storing data in …","Types that make up object metadata.","Low-level object APIs, mostly around IDs and basic things …","Simple callback into twizzler_abi made by the standard …","Runtime functions for Twizzler userspace. This part of the …","Very simple and unsafe Mutex for internal locking needs. …","Manage slots in the address space. Currently not finished.","Wrapper functions around for raw_syscall, providing a …","Functions for manipulating threads.","Raw time handling, provides a way to get a monotonic timer …","Functions for handling upcalls from the kernel.","Simple support for volatile memory access.","Allocate a region of memory as specified by <code>layout</code>. …","Free a region of previously allocated memory. If ptr is …","Reallocate a region of memory. Acts like realloc.","","Call into the kernel to perform a synchronous system call. …","A pointer to the arguments array.","Auxillary information provided to a new program on runtime …","A pointer to the env var array.","The object ID of the executable.","Kernel init info, including initrd names.","Information about initrd object names.","Ends the aux array.","A pointer to this program’s program headers, and the …","Add a name to the name list.","","","","","","","","","","","","","","","","Get the initial kernel info for init. Only works for init.","Get an ID.","","","","Get a name.","Get the name list.","","Constructor.","New mapping from name to ID.","Constructor for a null name.","","","","","","","","","","","","","","","","","","A bus. This device has numerous children and should be …","All supported kernel-discovered bus types.","For MMIO registers, we may need to specify the caching …","A traditional “device”. It may still have children, …","A per-bus device ID.","","Possible flags for device interrupts.","The base struct for a device object.","Possible high-level device types.","","","An info sub-object, which is comprised of a …","A vector number (used by the kernel).","","An mmio object has, at its base, a MmioInfo struct. At …","","A mapping of the MMIO registers for this device into an …","Info struct at the base of an mmio sub-object.","","","PCIe.","A device will have a number of sub-objects to present …","The “system” bus. Typically comprised of devices …","","An unknown device type. Should be ignored.","An unknown bus. Should be ignored.","","","","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","The cache type.","Poll an interrupt vector to see if it has fired.","Poll an interrupt vector to see if it has fired.","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","Device-specific info.","","","Inserts the specified flags in-place.","","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","","","","","","","","","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","The length of this mapping.","","","","","Construct a new device repr.","","Returns the complement of this set of flags.","","","","","","","Register an interrupt vector with this device.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","","","","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","Block until an interrupt fires.","","Allocate an interrupt for a device.","The standard PCIe bridge header. See the PCI spec for more …","","The standard PCIe device header. See the PCI spec for more …","The base struct for an info sub-object for a PCIe device.","The standard PCIe function header. See the PCI spec for …","The base struct for an info sub-object for a PCIe bus.","PCIe-specific crate::kso::KactionGenericCmd values.","Register a device ID.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A particular segment of the loaded executable, …","","","","Returns the object ID of the running executable.","Return a given segment for a given loaded executable or …","","","","","","","","Get a child object.","Get the root of the KSO tree.","Get a sub-object.","An argument was invalid.","Maximum name length for a KSO.","A KAction command, either generic or KSO-specific.","Possible error values for KAction.","Possible flags for kaction.","A generic kaction command, applies to all KSOs.","A value to pass for a KAction.","The base struct for any kernel state object.","The object was not found.","","Pin pages of object memory.","Release Pin","","","An unknown error.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","","","","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","","","","Construct a new kernel state object header.","Returns the complement of this set of flags.","If the value is an object ID, return it, otherwise return …","","","","","","","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","If the value is a u64, return it, otherwise return None.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","If the value is an object ID, return it, otherwise panic.","If the value is a u64, return it, otherwise panic.","","","","","","","","","An object that contains an ELF file.","","","","Possible errors for spawn_new_executable.","","","","","","","","","","","Start a new executable in a new address space.","","","","","","","Tag for a base type. Each base type must have a unique tag.","Trait that all base types must implement.","Version for a base type.","This auto trait specifies that some type is “safe” to …","","","","","","","","","","","","","Construct a new base type.","","","Returns a list of valid tags and versions for this type.","","","","","","","","","A meta extension entry.","A tag for a meta extension entry.","Flags for objects.","The core metadata that all objects share.","A nonce for avoiding object ID collision.","","","","","","","","","","","","","","","","","The number of meta extensions.","The object flags.","","","","The number of FOT entries.","","","","","","","","","","","The object’s public key ID.","The ID nonce.","The tag of the base struct type.","The tag.","","","","","","","","","","","","","","","","","","","A tag-specific value.","The version of the base struct type.","Exec allowed.","The maximum size of an object, including null page and …","The size of the null page.","An object ID, represented as a transparent wrapper type. …","Mapping protections for mapping objects into the address …","Read allowed.","Write allowed.","Returns the set containing all flags.","","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","","","","","","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","","Create a new ObjID out of a 128 bit value.","Build a new ObjID out of a high part and a low part.","Returns the complement of this set of flags.","","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Split an object ID into upper and lower values, useful for …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","Toggles the specified flags in-place.","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Called from _start to initialize the runtime and pass …","Simple mutex, supporting sleeping and wakeup. Does no …","","","","","","Lock a mutex, which can be unlocked by calling …","Construct a new mutex.","","","Similar to Mutex::lock, but if we can’t immediately grab …","","Unlock a mutex locked with Mutex::lock.","","","","","Allocate a slot in the address space where we could map a …","Release a slot for reuse.","Init slot allocation and context runtime. Called during …","Return the vaddr range of a slot (start address, end …","The specified object is already a handle.","The backing memory type for this object. Currently doesn’…","Read from the kernel write buffer.","Flags about a given clock or clock read.","Information about a given clock source, including …","Possible clock sources.","Read from the console itself.","Commit an object creation.","Flags controlling how a particular object tie operates.","A specification of ties to create. (see the book for more …","If the buffer is full, discard this write instead of …","Delete an object.","Flags to control operation of the object delete operation.","Compare for equality","Exit the thread. arg1 and arg2 should be code and location …","","Possible kernel handle types.","Invert the decision test for sleeping the thread.","The input mechanism had an internal error.","One of the arguments was invalid.","One of the arguments was invalid.   ","An argument was invalid.","An argument was invalid.","An argument was invalid.","An argument was invalid.","An argument was invalid.","One of the arguments was invalid.   ","An argument was invalid.","One of the arguments was invalid.   ","The ID was invalid.","The specified ID was invalid.","The specified protections were invalid.","The reference was invalid.","The specified slot was invalid.","The specified slot was invalid.","The specified slot was invalid.","Apply a kernel action to an object (used for device …","Read data from the kernel console, either buffer or input.","Possible errors returned by reading from the kernel console…","Flags to pass to sys_kernel_console_read_buffer.","Possible errors returned by reading from the kernel console…","Flags to pass to sys_kernel_console_read.","Possible sources for a kernel console read syscall.","Write data to the kernel console.","Flags to pass to sys_kernel_console_write.","The base lifetime type of the object. Note that this does …","","Flags to pass to sys_object_map.","Information about an object mapping.","","If the read would block, return instead.","If the operation would block, return instead.","New Handle.","Possible error values for sys_new_handle.","Flags to pass to sys_new_handle.","Failed to read because there was no input mechanism made …","The default, let the kernel decide based on the …","The specified object was not found.","A specified object (handle) was not found.","","","Possible object control commands for sys_object_ctrl.","Possible error values for sys_object_ctrl.","Full object creation specification, minus ties.","Create new object.","Possible error returns for sys_object_create.","Flags to pass to the object create system call.","Manage in-kernel object properties.","Information about an object, according to the local kernel.","Map an object into address space.","Possible error values for sys_object_map.","A source or tie object was not found.","The specified object was not found.","Read mapping information.","Possible error values for sys_object_unmap.","","Specifications for an object-copy from a source object. …","Get kernel information about an object.","Possible error values for sys_object_stat.","Unmap an object.","Possible error values for sys_object_unmap.","This object is persistent, and should be deleted only …","","Flags to pass to sys_read_clock_info.","Read clock information.","Possible error values for sys_read_clock_info.","","Set thread’s TLS pointer","Set the thread’s upcall pointer (child threads in the …","","The kernel could not handle one of the source ranges.","Spawn a new thread.","Information about the system.","Returns system info.","All possible Synchronous syscalls into the Twizzler kernel.","Possible Thread Control operations","General thread control functions.","Arguments to pass to sys_spawn.","Possible error values for sys_spawn.","Flags to pass to sys_spawn.","Either a sleep or wake request. The syscall comprises of a …","Sync a thread with other threads using some number of …","Possible error returns for sys_thread_sync.","Flags to pass to sys_thread_sync.","Possible operations the kernel can perform when looking at …","A reference to a piece of data. May either be a …","Result of sync operations.","Specification for a thread sleep request.","Specification for a thread wake request.","The operation timed out.","Unknown error.","Unknown error.","An unknown error occurred.","An unknown error occurred.","An unknown error occurred.","An unknown error occurred.","An unknown error occurred.","An unknown error occurred.","An unknown error occurred.","An unknown error occurred.","An unknown error.","An unknown error occurred.","Flags to pass to sys_object_unmap.","","","This object is volatile, and is expected to be deleted …","","Operation would block, but non-blocking was requested.","Operation would block, but non-blocking was requested.","Yield the thread’s CPU time now. The actual effect of …","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","","The backing type of this object.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Apply the operation to two values, returning the result.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Number of threads to wake up.","Get the number of CPUs on the system.","The number of CPUs on this system. Hyperthreads are …","Get the current value of a clock source.","","The offset into the dest object to start the copy to.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Flags. Currently unused.","The mapping flags.","","Flags to apply to this sleep requestonvert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","","","","","","","","","","Get the result of the thread sync operation.","","","","","","","","","","","","","","","The ID of the source object.","The mapped object ID.","The ID of this object.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Is the clock source monotonic?","The length of the copy.","The lifetime type of this object.","","The number of mappings in which this object participates.","","","","","","","","","","","","","","","","","","","","","","","","","","Construct a new ObjectSource.","Build a new object create specification.","Create a new CreateTieSpec.","","Construct a new ThreadSpawnArgs. If vm_context_handle is …","Construct a new thread sync sleep request. The kernel will …","Construct a new thread wake request. The reference works …","Construct a new ClockInfo. You probably want to be getting …","Build a sleep request.","Build a wake request.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Return the number associated with this syscall.","The operation to compare *reference and value to.","Get the page size of the system.","The size of a virtual address page on this system.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the precision of a clock source.","The protections of the mapping.","","","Reference to an atomic u64 that we will compare to.","Reference to the word for which we will wake up threads …","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","The slot.","The offset into the source object to start the copy.","","","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Shutdown the computer.","Get a SysInfo struct from the kernel.","Execute a kaction on an object.","Read from the kernel console input, placing data into …","Read from the kernel console buffer, placing data into …","Write to the kernel console.","Make a new handle object.","Create an object, returning either its ID or an error.","Perform a kernel operation on this object.","Map an object into the address space with the specified …","Reads the map information about a given slot in the …","Read information about a given object.","Unmaps an object from the address space specified by <code>handle</code>…","Read information about a give clock, as specified by clock …","Spawn a new thread, returning the ObjID of the thread’s …","Exit the thread. arg1 and arg2 should be code and location …","Set the upcall location for this thread.","Set the current kernel thread’s TLS pointer. On x86_64, …","Perform a number of ThreadSync operations, either waking …","Yield the thread’s CPU time now. The actual effect of …","The number of ties from this object.","The number of ties to this object.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","The value used for the comparison.","The version of this data structure, to allow expansion.","","","","","","","","","","Base type for a thread object.","","","Exit the current thread.","","","Wait until the specified thread terminates.","Spawn a new thread, allocating a new stack for it, …","","","","Wait for a thread’s status to change.","Return a Duration representing an instant in monotonic …","Return a Duration representing the time since the unix …","","Information about an exception.","Arch-specific frame info for upcall.","Possible upcall reasons and info.","","","","","","","Get the base pointer of the frame.","CPU-reported exception code.","","","","","","Arch-specific additional info.","","","","Get the instruction pointer of the frame.","Construct new exception info.","","","","","","","","","","","","","","","","","","","Get the stack pointer of the frame.","","","","","","","","","","","A value that should be accessed with volatile memory …","","","","","Volatile-read the cell.","","Construct a new volatile cell.","Volatile-write the cell.","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,0,1,1,2,2,1,3,2,1,3,1,3,1,3,1,1,2,1,3,0,3,2,1,3,3,2,1,2,3,3,1,3,2,1,3,2,1,3,2,1,3,4,5,6,7,4,6,8,0,0,8,0,0,0,0,0,9,9,10,0,9,0,0,10,0,0,9,11,0,11,12,8,11,12,12,12,13,13,13,13,13,13,13,13,14,15,8,11,10,12,16,13,17,18,9,14,15,8,11,10,12,16,13,17,18,9,0,15,16,15,15,8,11,10,12,13,17,18,9,8,11,10,12,13,17,18,9,8,11,10,13,17,18,13,13,15,15,13,13,8,11,10,13,17,18,13,14,15,8,11,10,12,16,13,13,13,13,13,17,18,9,14,15,8,11,10,12,16,13,17,18,9,13,13,13,13,13,16,15,16,13,15,13,13,14,15,8,11,10,12,16,13,17,18,9,13,13,16,15,13,17,18,15,18,13,8,11,10,13,17,18,15,13,13,15,13,13,13,14,15,16,14,8,11,10,12,13,17,18,9,15,13,14,15,8,11,10,10,12,16,13,17,17,18,9,9,14,15,8,11,10,12,16,13,17,18,9,14,15,8,11,10,12,16,13,17,18,9,13,14,15,0,19,0,0,0,0,0,0,0,19,20,21,22,19,22,21,20,23,24,25,19,22,21,20,23,24,25,20,24,25,24,22,21,20,21,22,25,22,25,22,25,21,20,24,25,21,20,19,22,21,20,23,24,25,25,22,23,21,20,21,20,19,22,21,20,23,24,25,20,20,20,20,22,21,20,20,21,23,20,20,20,20,20,22,25,22,25,20,20,20,24,25,22,22,25,20,21,21,19,19,22,21,20,23,24,25,19,22,21,20,23,24,25,19,22,21,20,23,24,25,22,25,0,26,26,26,0,0,26,26,26,26,26,26,27,28,28,28,29,0,0,0,0,0,0,0,29,30,28,28,27,30,29,31,31,31,31,31,31,31,31,32,30,29,31,28,27,32,30,29,31,28,27,30,29,31,28,27,30,29,31,28,27,30,29,31,28,27,31,31,31,31,30,29,31,28,27,31,32,30,29,31,31,31,31,31,28,27,32,30,30,29,29,31,28,27,31,31,31,31,31,31,31,31,32,30,29,31,28,27,31,31,30,31,28,27,32,31,30,0,0,30,29,31,28,27,31,31,31,31,31,30,29,31,28,27,32,31,32,30,29,31,28,28,27,27,32,30,29,31,28,27,32,30,29,31,28,27,30,31,0,0,30,30,33,34,35,36,37,36,38,39,0,40,40,40,0,40,40,41,40,41,41,40,41,40,41,0,40,41,40,41,40,41,0,0,0,0,42,43,42,43,42,43,42,43,42,43,42,43,44,42,43,44,42,43,42,43,42,43,42,43,0,0,0,0,0,45,46,47,48,49,45,46,47,48,49,47,48,49,47,48,49,45,45,47,48,49,45,45,46,47,48,49,45,46,47,48,49,45,45,45,46,47,48,49,45,46,47,48,49,45,46,47,48,49,45,46,47,48,49,46,45,50,0,0,0,0,50,50,50,51,51,50,50,50,50,50,50,50,51,50,51,50,51,50,51,50,51,50,50,50,50,50,51,50,50,51,51,51,51,50,50,50,50,50,51,51,50,50,50,50,50,51,50,50,50,50,51,50,50,50,51,50,51,51,50,51,50,50,50,51,50,50,50,51,50,51,50,51,50,51,50,51,50,50,0,0,52,52,52,52,52,52,52,52,52,52,52,52,0,0,0,0,0,0,0,0,53,0,54,0,0,0,54,55,0,0,56,55,0,57,58,59,0,60,61,62,53,63,64,65,66,67,68,69,70,66,67,63,69,63,64,65,71,71,0,0,0,0,0,71,0,0,72,0,0,73,74,75,71,0,0,61,76,53,68,71,71,0,0,0,71,0,0,71,0,71,0,62,63,71,0,77,0,71,0,71,0,78,0,0,71,0,73,58,58,79,62,71,0,71,0,0,71,0,0,0,0,71,0,0,0,0,0,0,0,69,61,80,62,53,63,64,65,66,67,68,69,70,0,77,81,78,79,61,80,58,74,75,56,82,83,84,85,86,59,87,60,72,88,89,90,74,75,56,82,83,84,85,86,59,87,60,72,88,74,75,56,82,83,84,85,86,59,87,60,72,88,74,75,56,82,83,84,85,86,59,87,60,72,88,74,75,56,82,83,84,85,86,59,87,60,72,88,74,75,56,82,83,84,85,86,59,87,60,72,88,74,75,56,82,83,84,85,86,59,87,60,72,88,74,75,56,82,83,84,85,86,59,87,60,72,88,54,61,74,80,75,56,91,76,78,82,83,92,93,62,53,81,84,94,95,63,85,64,86,65,96,66,59,55,67,90,87,89,68,58,57,60,77,97,98,69,79,70,72,88,99,73,71,54,61,74,80,75,56,91,76,78,82,83,92,93,62,53,81,84,94,95,63,85,64,86,65,96,66,59,55,67,90,87,89,68,58,57,60,77,97,98,69,79,70,72,88,99,73,71,57,61,74,80,75,56,91,76,78,82,83,92,93,62,53,81,84,94,95,63,85,64,86,65,96,66,59,55,67,90,87,89,68,57,60,77,97,98,69,79,70,72,88,99,73,71,61,74,80,75,56,91,76,78,82,83,92,93,62,53,81,84,94,95,63,85,64,86,65,96,66,59,55,67,90,87,89,68,57,60,77,97,98,69,79,70,72,88,99,73,71,74,75,56,91,76,78,82,83,92,93,62,53,81,84,94,95,63,85,64,86,65,96,66,59,67,90,87,89,68,58,57,60,77,97,98,69,79,70,72,88,74,75,56,82,83,84,85,86,59,87,60,72,88,74,75,56,82,83,84,85,86,59,87,60,72,88,98,94,94,99,76,91,74,75,56,82,83,84,85,86,59,87,60,72,88,74,75,56,82,83,84,85,86,59,87,60,72,88,89,74,75,56,91,76,78,82,83,92,93,62,53,81,84,94,95,63,85,64,86,65,96,66,59,67,90,87,89,68,58,57,60,77,97,98,69,79,70,72,88,74,75,56,82,83,84,85,86,59,87,60,72,88,94,96,89,97,61,61,74,74,74,74,74,80,80,75,75,75,75,75,56,56,56,56,56,91,76,78,82,82,82,82,82,83,83,83,83,83,92,93,62,62,53,53,81,84,84,84,84,84,94,95,63,63,85,85,85,85,85,64,64,86,86,86,86,86,65,65,96,66,66,59,59,59,59,59,55,67,67,90,87,87,87,87,87,89,68,68,58,57,60,60,60,60,60,77,97,98,69,69,79,70,70,72,72,72,72,72,88,88,88,88,88,99,73,71,54,54,61,61,74,80,80,75,56,91,76,78,82,83,92,93,62,62,53,53,81,84,94,95,63,63,85,64,64,86,65,65,96,66,66,59,55,67,67,90,87,89,68,68,58,58,57,60,77,97,98,69,69,79,70,70,72,88,99,73,71,71,74,75,56,82,83,84,85,86,59,87,60,72,88,74,75,56,82,83,84,85,86,59,87,60,72,88,74,75,56,82,83,84,85,86,59,87,60,72,88,74,75,56,82,83,84,85,86,59,87,60,72,88,79,74,75,56,82,83,84,95,85,86,59,87,60,72,88,91,96,90,74,75,56,82,83,84,85,86,59,87,60,72,88,74,75,56,82,83,84,85,86,59,87,60,72,88,74,75,56,82,83,84,85,86,59,87,60,72,88,54,61,74,80,75,56,91,76,78,82,83,92,93,62,53,81,84,94,95,63,85,64,86,65,96,66,59,55,67,90,87,89,68,58,57,60,77,97,98,69,79,70,72,88,99,73,71,74,75,56,82,83,84,85,86,59,87,60,72,88,74,75,56,82,83,84,85,86,59,87,60,72,88,99,91,90,77,90,74,75,56,91,82,83,92,93,84,94,95,85,86,96,59,90,87,89,60,77,97,98,79,72,88,91,92,93,95,89,97,98,99,79,79,74,75,56,82,83,84,85,86,59,87,60,72,88,71,97,94,94,74,75,56,91,76,78,82,83,92,93,62,53,81,84,94,95,63,85,64,86,65,96,66,59,67,90,87,89,68,58,57,60,77,97,98,69,79,70,72,88,95,99,96,97,79,97,98,74,75,56,82,83,84,85,86,59,87,60,72,88,74,75,56,82,83,84,85,86,59,87,60,72,88,96,91,89,89,74,75,56,82,83,84,85,86,59,87,60,72,88,74,75,56,82,83,84,85,86,59,87,60,72,88,74,75,56,82,83,84,85,86,59,87,60,72,88,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,90,90,89,61,74,80,75,56,91,76,78,82,83,92,93,62,53,81,84,94,95,63,85,64,86,65,96,66,59,55,67,90,87,89,68,57,60,77,97,98,69,79,70,72,88,99,73,71,61,80,62,53,63,64,65,66,67,68,69,70,74,75,56,82,83,84,85,86,59,87,60,72,88,54,61,74,80,75,56,91,76,78,82,83,92,93,62,53,81,81,84,94,95,63,85,64,86,65,96,66,59,55,55,67,90,87,89,68,58,57,60,77,97,98,69,79,70,72,88,99,73,73,71,54,61,74,80,75,56,91,76,78,82,83,92,93,62,53,81,84,94,95,63,85,64,86,65,96,66,59,55,67,90,87,89,68,58,57,60,77,97,98,69,79,70,72,88,99,73,71,54,61,74,80,75,56,91,76,78,82,83,92,93,62,53,81,84,94,95,63,85,64,86,65,96,66,59,55,67,90,87,89,68,58,57,60,77,97,98,69,79,70,72,88,99,73,71,74,75,56,82,83,84,85,86,59,87,60,72,88,97,94,89,100,101,102,101,102,103,104,103,0,105,105,0,105,105,0,0,105,105,105,105,0,0,106,0,0,0,107,108,106,107,108,106,107,108,108,106,107,108,106,108,107,108,106,107,108,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,108,106,107,108,106,107,108,106,109,0,110,110,110,110,110,110,110,110,110,110,110],"f":[null,null,null,null,null,null,null,null,null,null,[[]],null,null,null,null,null,null,null,null,[[["layout",3]]],[[["layout",3]]],[[["layout",3],["usize",15]]],null,[[["syscall",4]]],null,null,null,null,null,null,null,null,[[["kernelinitname",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["auxentry",4]],[[],["kernelinitname",3]],[[]],[[]],[[["auxentry",4]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["kernelinitinfo",3]],[[],["objid",3]],[[]],[[]],[[]],[[],["str",15]],[[]],[[["auxentry",4]],["bool",15]],[[]],[[["str",15],["objid",3]]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[["deviceinterruptflags",3]]],[[]],[[],["u16",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[["usize",15]],[["u64",15],["option",4,["u64"]]]],[[["usize",15]],[["u64",15],["option",4,["u64"]]]],[[],["devicetype",4]],[[],["bustype",4]],[[],["subobjecttype",4]],[[],["cachetype",4]],[[],["deviceinterruptflags",3]],[[],["interruptvector",3]],[[],["deviceid",3]],[[],["mailboxpriority",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["devicetype",4]],["ordering",4]],[[["bustype",4]],["ordering",4]],[[["subobjecttype",4]],["ordering",4]],[[["deviceinterruptflags",3]],["ordering",4]],[[["interruptvector",3]],["ordering",4]],[[["deviceid",3]],["ordering",4]],[[]],[[],["bool",15]],null,null,[[]],[[]],[[["devicetype",4]],["bool",15]],[[["bustype",4]],["bool",15]],[[["subobjecttype",4]],["bool",15]],[[["deviceinterruptflags",3]],["bool",15]],[[["interruptvector",3]],["bool",15]],[[["deviceid",3]],["bool",15]],[[["intoiterator",8]]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u16",15]],["option",4]],[[["u16",15]]],[[["u16",15]]],[[["intoiterator",8]]],[[]],null,[[]],[[]],[[]],null,[[]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],null,null,[[["deviceinterruptflags",3]],["bool",15]],[[["interruptvector",3]],["bool",15]],[[["deviceid",3]],["bool",15]],[[["bustype",4],["devicetype",4],["ksohdr",3],["deviceid",3]]],[[["u32",15]]],[[]],[[["devicetype",4]],[["option",4,["ordering"]],["ordering",4]]],[[["bustype",4]],[["option",4,["ordering"]],["ordering",4]]],[[["subobjecttype",4]],[["option",4,["ordering"]],["ordering",4]]],[[["deviceinterruptflags",3]],[["option",4,["ordering"]],["ordering",4]]],[[["interruptvector",3]],[["option",4,["ordering"]],["ordering",4]]],[[["deviceid",3]],[["option",4,["ordering"]],["ordering",4]]],[[["usize",15],["interruptvector",3],["deviceinterruptflags",3]]],[[]],[[["bool",15]]],[[["usize",15]],["threadsyncsleep",3]],[[]],[[]],[[]],null,[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["u8",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["u64",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[["usize",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],null,[[["usize",15],["duration",3],["option",4,["duration"]]],["u64",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["result",4]],[[["u32",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,[[]],[[]],[[]],[[],[["objid",3],["option",4,["objid"]]]],[[["objid",3],["usize",15]],[["option",4,["segment"]],["segment",3]]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[["kactionflags",3]]],[[]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["kactionvalue",4]],[[],["kactionerror",4]],[[],["kactionflags",3]],[[],["kactiongenericcmd",4]],[[],["kactioncmd",4]],[[]],[[]],[[]],[[]],[[]],[[["kactionvalue",4]],["ordering",4]],[[["kactionerror",4]],["ordering",4]],[[["kactionflags",3]],["ordering",4]],[[["kactiongenericcmd",4]],["ordering",4]],[[["kactioncmd",4]],["ordering",4]],[[]],[[],["bool",15]],[[]],[[]],[[["kactionvalue",4]],["bool",15]],[[["kactionerror",4]],["bool",15]],[[["kactionflags",3]],["bool",15]],[[["kactiongenericcmd",4]],["bool",15]],[[["kactioncmd",4]],["bool",15]],[[["intoiterator",8]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["u64",15]]],[[]],[[]],[[]],[[["u64",15]],["option",4]],[[["u64",15]]],[[["u64",15]]],[[["intoiterator",8]]],[[]],[[]],[[]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[["kactionvalue",4]],["bool",15]],[[["kactionflags",3]],["bool",15]],[[["kactiongenericcmd",4]],["bool",15]],[[["kactioncmd",4]],["bool",15]],[[["str",15]]],[[]],[[],[["objid",3],["option",4,["objid"]]]],[[["u64",15],["usize",15]],[["u64",15],["option",4,["u64"]]]],[[["usize",15],["u32",15]],[["u64",15],["option",4,["u64"]]]],[[["kactionvalue",4]],[["option",4,["ordering"]],["ordering",4]]],[[["kactionerror",4]],[["option",4,["ordering"]],["ordering",4]]],[[["kactionflags",3]],[["option",4,["ordering"]],["ordering",4]]],[[["kactiongenericcmd",4]],[["option",4,["ordering"]],["ordering",4]]],[[["kactioncmd",4]],[["option",4,["ordering"]],["ordering",4]]],[[]],[[["bool",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["u32",15]],[["kactionerror",4],["kactiongenericcmd",4],["result",4,["kactiongenericcmd","kactionerror"]]]],[[],["result",4]],[[["u64",15]],[["kactionerror",4],["kactioncmd",4],["result",4,["kactioncmd","kactionerror"]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],[["u64",15],["option",4,["u64"]]]],[[]],[[["u64",15]],["option",4]],[[["u64",15]],["option",4]],[[],["objid",3]],[[],["u64",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["objid",3]],[["objid",3],["result",4,["objid","spawnexecutableerror"]],["spawnexecutableerror",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,[[]],[[]],[[]],[[]],[[],["baseversion",3]],[[],["basetag",3]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["metaflags",3]],[[],["nonce",3]],[[],["metaexttag",3]],[[]],[[]],[[]],null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,[[]],[[],["objid",3]],[[],["u128",15]],[[]],[[]],[[["protections",3]]],[[]],[[],["u32",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["objid",3]],[[],["protections",3]],[[]],[[]],[[["objid",3]],["ordering",4]],[[["protections",3]],["ordering",4]],[[]],[[],["bool",15]],[[]],[[]],[[["objid",3]],["bool",15]],[[["protections",3]],["bool",15]],[[["intoiterator",8]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["u128",15]]],[[]],[[]],[[["u32",15]],["option",4]],[[["u32",15]]],[[["u32",15]]],[[["intoiterator",8]]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[["objid",3]],["bool",15]],[[["protections",3]],["bool",15]],[[["u128",15]]],[[["u64",15]]],[[]],[[["objid",3]],[["option",4,["ordering"]],["ordering",4]]],[[["protections",3]],[["option",4,["ordering"]],["ordering",4]]],[[]],[[["bool",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[],["never",15]],null,[[]],[[]],[[]],[[]],[[],["bool",15]],[[]],[[],["mutex",3]],[[],["result",4]],[[],["result",4]],[[],["bool",15]],[[],["typeid",3]],[[]],null,null,null,null,[[],[["usize",15],["option",4,["usize"]]]],[[["usize",15]]],[[]],[[["usize",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["kernelconsolereadflags",3]]],[[["kernelconsolereadbufferflags",3]]],[[["kernelconsolewriteflags",3]]],[[["objectcreateflags",3]]],[[["createtieflags",3]]],[[["newhandleflags",3]]],[[["mapflags",3]]],[[["unmapflags",3]]],[[["deleteflags",3]]],[[["threadspawnflags",3]]],[[["threadsyncflags",3]]],[[["clockflags",3]]],[[["readclockflags",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u32",15]],[[],["u32",15]],[[],["u64",15]],[[],["u32",15]],[[],["u32",15]],[[],["u64",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["upartialord",8],["partialeq",8],["eq",8],["ord",8]],["bool",15]],[[],["kernelconsolereaderror",4]],[[],["kernelconsolereadflags",3]],[[],["kernelconsolereadbuffererror",4]],[[],["kernelconsolereadbufferflags",3]],[[],["kernelconsolewriteflags",3]],[[],["objectsource",3]],[[],["backingtype",4]],[[],["lifetimetype",4]],[[],["objectcreateflags",3]],[[],["createtieflags",3]],[[],["objectcreate",3]],[[],["createtiespec",3]],[[],["objectcreateerror",4]],[[],["newhandleerror",4]],[[],["handletype",4]],[[],["newhandleflags",3]],[[],["sysinfo",3]],[[],["pinnedpage",3]],[[],["objectmaperror",4]],[[],["mapflags",3]],[[],["objectunmaperror",4]],[[],["unmapflags",3]],[[],["objectreadmaperror",4]],[[],["mapinfo",3]],[[],["objectcontrolerror",4]],[[],["deleteflags",3]],[[],["objectcontrolcmd",4]],[[],["objectstaterror",4]],[[],["objectinfo",3]],[[],["threadspawnflags",3]],[[],["threadspawnargs",3]],[[],["threadspawnerror",4]],[[],["threadsyncop",4]],[[],["threadsyncflags",3]],[[],["threadsyncreference",4]],[[],["threadsyncsleep",3]],[[],["threadsyncwake",3]],[[],["threadsyncerror",4]],[[],["threadsync",4]],[[],["readclockinfoerror",4]],[[],["clockflags",3]],[[],["readclockflags",3]],[[],["clockinfo",3]],[[],["clocksource",4]],[[],["syscall",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["kernelconsolereadflags",3]],["ordering",4]],[[["kernelconsolereadbufferflags",3]],["ordering",4]],[[["kernelconsolewriteflags",3]],["ordering",4]],[[["objectsource",3]],["ordering",4]],[[["backingtype",4]],["ordering",4]],[[["lifetimetype",4]],["ordering",4]],[[["objectcreateflags",3]],["ordering",4]],[[["createtieflags",3]],["ordering",4]],[[["objectcreate",3]],["ordering",4]],[[["createtiespec",3]],["ordering",4]],[[["objectcreateerror",4]],["ordering",4]],[[["newhandleerror",4]],["ordering",4]],[[["handletype",4]],["ordering",4]],[[["newhandleflags",3]],["ordering",4]],[[["sysinfo",3]],["ordering",4]],[[["pinnedpage",3]],["ordering",4]],[[["objectmaperror",4]],["ordering",4]],[[["mapflags",3]],["ordering",4]],[[["objectunmaperror",4]],["ordering",4]],[[["unmapflags",3]],["ordering",4]],[[["objectreadmaperror",4]],["ordering",4]],[[["mapinfo",3]],["ordering",4]],[[["objectcontrolerror",4]],["ordering",4]],[[["deleteflags",3]],["ordering",4]],[[["objectstaterror",4]],["ordering",4]],[[["objectinfo",3]],["ordering",4]],[[["threadspawnflags",3]],["ordering",4]],[[["threadspawnargs",3]],["ordering",4]],[[["threadspawnerror",4]],["ordering",4]],[[["threadcontrol",4]],["ordering",4]],[[["threadsyncop",4]],["ordering",4]],[[["threadsyncflags",3]],["ordering",4]],[[["threadsyncreference",4]],["ordering",4]],[[["threadsyncsleep",3]],["ordering",4]],[[["threadsyncwake",3]],["ordering",4]],[[["threadsyncerror",4]],["ordering",4]],[[["threadsync",4]],["ordering",4]],[[["readclockinfoerror",4]],["ordering",4]],[[["clockflags",3]],["ordering",4]],[[["readclockflags",3]],["ordering",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,[[],["nonzerousize",3]],null,[[],["duration",3]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["kernelconsolereadflags",3]],["bool",15]],[[["kernelconsolereadbufferflags",3]],["bool",15]],[[["kernelconsolewriteflags",3]],["bool",15]],[[["objectsource",3]],["bool",15]],[[["backingtype",4]],["bool",15]],[[["lifetimetype",4]],["bool",15]],[[["objectcreateflags",3]],["bool",15]],[[["createtieflags",3]],["bool",15]],[[["objectcreate",3]],["bool",15]],[[["createtiespec",3]],["bool",15]],[[["objectcreateerror",4]],["bool",15]],[[["newhandleerror",4]],["bool",15]],[[["handletype",4]],["bool",15]],[[["newhandleflags",3]],["bool",15]],[[["sysinfo",3]],["bool",15]],[[["pinnedpage",3]],["bool",15]],[[["objectmaperror",4]],["bool",15]],[[["mapflags",3]],["bool",15]],[[["objectunmaperror",4]],["bool",15]],[[["unmapflags",3]],["bool",15]],[[["objectreadmaperror",4]],["bool",15]],[[["mapinfo",3]],["bool",15]],[[["objectcontrolerror",4]],["bool",15]],[[["deleteflags",3]],["bool",15]],[[["objectstaterror",4]],["bool",15]],[[["objectinfo",3]],["bool",15]],[[["threadspawnflags",3]],["bool",15]],[[["threadspawnargs",3]],["bool",15]],[[["threadspawnerror",4]],["bool",15]],[[["threadcontrol",4]],["bool",15]],[[["threadsyncop",4]],["bool",15]],[[["threadsyncflags",3]],["bool",15]],[[["threadsyncreference",4]],["bool",15]],[[["threadsyncsleep",3]],["bool",15]],[[["threadsyncwake",3]],["bool",15]],[[["threadsyncerror",4]],["bool",15]],[[["threadsync",4]],["bool",15]],[[["readclockinfoerror",4]],["bool",15]],[[["clockflags",3]],["bool",15]],[[["readclockflags",3]],["bool",15]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],null,null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["u64",15]]],[[]],[[]],[[["u64",15]]],[[]],[[]],[[["u64",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u64",15]]],[[]],[[["u64",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u64",15]]],[[]],[[["u64",15]]],[[]],[[]],[[["u64",15]]],[[]],[[]],[[["u64",15]]],[[]],[[]],[[]],[[]],[[["u64",15]]],[[]],[[]],[[]],[[]],[[["u64",15]]],[[]],[[["u64",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u64",15]]],[[]],[[]],[[["u64",15]]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[]],[[["u64",15]],["option",4]],[[["u64",15]],["option",4]],[[["u64",15]],["option",4]],[[["u32",15]],["option",4]],[[["u32",15]],["option",4]],[[["u64",15]],["option",4]],[[["u32",15]],["option",4]],[[["u32",15]],["option",4]],[[["u64",15]],["option",4]],[[["u32",15]],["option",4]],[[["u32",15]],["option",4]],[[["u32",15]],["option",4]],[[["u32",15]],["option",4]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[["u32",15]]],[[["u32",15]]],[[["u64",15]]],[[["u32",15]]],[[["u32",15]]],[[["u64",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[["u32",15]]],[[["u32",15]]],[[["u64",15]]],[[["u32",15]]],[[["u32",15]]],[[["u64",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[],["threadsyncresult",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,null,[[],["u64",15]],null,[[["kernelconsolereadflags",3]],["bool",15]],[[["kernelconsolereadbufferflags",3]],["bool",15]],[[["kernelconsolewriteflags",3]],["bool",15]],[[["objectsource",3]],["bool",15]],[[["objectcreateflags",3]],["bool",15]],[[["createtieflags",3]],["bool",15]],[[["objectcreate",3]],["bool",15]],[[["createtiespec",3]],["bool",15]],[[["newhandleflags",3]],["bool",15]],[[["sysinfo",3]],["bool",15]],[[["pinnedpage",3]],["bool",15]],[[["mapflags",3]],["bool",15]],[[["unmapflags",3]],["bool",15]],[[["mapinfo",3]],["bool",15]],[[["deleteflags",3]],["bool",15]],[[["objectinfo",3]],["bool",15]],[[["threadspawnflags",3]],["bool",15]],[[["threadspawnargs",3]],["bool",15]],[[["threadsyncflags",3]],["bool",15]],[[["threadsyncreference",4]],["bool",15]],[[["threadsyncsleep",3]],["bool",15]],[[["threadsyncwake",3]],["bool",15]],[[["threadsync",4]],["bool",15]],[[["clockflags",3]],["bool",15]],[[["readclockflags",3]],["bool",15]],[[["objid",3],["u64",15],["usize",15]]],[[["backingtype",4],["option",4,["objid"]],["objectcreateflags",3],["objid",3],["lifetimetype",4]]],[[["objid",3],["createtieflags",3]]],[[["u64",15]]],[[["usize",15],["threadspawnflags",3],["option",4,["objid"]],["objid",3]]],[[["u64",15],["threadsyncflags",3],["threadsyncreference",4],["threadsyncop",4]]],[[["usize",15],["threadsyncreference",4]]],[[["clocksource",4],["duration",3],["clockflags",3]]],[[["threadsyncsleep",3]]],[[["threadsyncwake",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u64",15]],null,[[],["usize",15]],null,[[["kernelconsolereadflags",3]],[["option",4,["ordering"]],["ordering",4]]],[[["kernelconsolereadbufferflags",3]],[["option",4,["ordering"]],["ordering",4]]],[[["kernelconsolewriteflags",3]],[["option",4,["ordering"]],["ordering",4]]],[[["objectsource",3]],[["option",4,["ordering"]],["ordering",4]]],[[["backingtype",4]],[["option",4,["ordering"]],["ordering",4]]],[[["lifetimetype",4]],[["option",4,["ordering"]],["ordering",4]]],[[["objectcreateflags",3]],[["option",4,["ordering"]],["ordering",4]]],[[["createtieflags",3]],[["option",4,["ordering"]],["ordering",4]]],[[["objectcreate",3]],[["option",4,["ordering"]],["ordering",4]]],[[["createtiespec",3]],[["option",4,["ordering"]],["ordering",4]]],[[["objectcreateerror",4]],[["option",4,["ordering"]],["ordering",4]]],[[["newhandleerror",4]],[["option",4,["ordering"]],["ordering",4]]],[[["handletype",4]],[["option",4,["ordering"]],["ordering",4]]],[[["newhandleflags",3]],[["option",4,["ordering"]],["ordering",4]]],[[["sysinfo",3]],[["option",4,["ordering"]],["ordering",4]]],[[["pinnedpage",3]],[["option",4,["ordering"]],["ordering",4]]],[[["objectmaperror",4]],[["option",4,["ordering"]],["ordering",4]]],[[["mapflags",3]],[["option",4,["ordering"]],["ordering",4]]],[[["objectunmaperror",4]],[["option",4,["ordering"]],["ordering",4]]],[[["unmapflags",3]],[["option",4,["ordering"]],["ordering",4]]],[[["objectreadmaperror",4]],[["option",4,["ordering"]],["ordering",4]]],[[["mapinfo",3]],[["option",4,["ordering"]],["ordering",4]]],[[["objectcontrolerror",4]],[["option",4,["ordering"]],["ordering",4]]],[[["deleteflags",3]],[["option",4,["ordering"]],["ordering",4]]],[[["objectstaterror",4]],[["option",4,["ordering"]],["ordering",4]]],[[["objectinfo",3]],[["option",4,["ordering"]],["ordering",4]]],[[["threadspawnflags",3]],[["option",4,["ordering"]],["ordering",4]]],[[["threadspawnargs",3]],[["option",4,["ordering"]],["ordering",4]]],[[["threadspawnerror",4]],[["option",4,["ordering"]],["ordering",4]]],[[["threadcontrol",4]],[["option",4,["ordering"]],["ordering",4]]],[[["threadsyncop",4]],[["option",4,["ordering"]],["ordering",4]]],[[["threadsyncflags",3]],[["option",4,["ordering"]],["ordering",4]]],[[["threadsyncreference",4]],[["option",4,["ordering"]],["ordering",4]]],[[["threadsyncsleep",3]],[["option",4,["ordering"]],["ordering",4]]],[[["threadsyncwake",3]],[["option",4,["ordering"]],["ordering",4]]],[[["threadsyncerror",4]],[["option",4,["ordering"]],["ordering",4]]],[[["threadsync",4]],[["option",4,["ordering"]],["ordering",4]]],[[["readclockinfoerror",4]],[["option",4,["ordering"]],["ordering",4]]],[[["clockflags",3]],[["option",4,["ordering"]],["ordering",4]]],[[["readclockflags",3]],[["option",4,["ordering"]],["ordering",4]]],[[],["u64",15]],[[],["duration",3]],null,[[],["bool",15]],[[],["bool",15]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u32",15]]],[[],["sysinfo",3]],[[["u64",15],["option",4,["objid"]],["objid",3],["kactioncmd",4],["kactionflags",3]],[["kactionerror",4],["kactionvalue",4],["result",4,["kactionvalue","kactionerror"]]]],[[["kernelconsolereadflags",3]],[["usize",15],["kernelconsolereaderror",4],["result",4,["usize","kernelconsolereaderror"]]]],[[["kernelconsolereadbufferflags",3]],[["usize",15],["result",4,["usize","kernelconsolereadbuffererror"]],["kernelconsolereadbuffererror",4]]],[[["kernelconsolewriteflags",3]]],[[["objid",3],["newhandleflags",3],["handletype",4]],[["u64",15],["newhandleerror",4],["result",4,["u64","newhandleerror"]]]],[[["objectcreate",3]],[["objid",3],["objectcreateerror",4],["result",4,["objid","objectcreateerror"]]]],[[["objid",3],["objectcontrolcmd",4]],[["objectcontrolerror",4],["result",4,["objectcontrolerror"]]]],[[["usize",15],["protections",3],["option",4,["objid"]],["mapflags",3],["objid",3]],[["usize",15],["result",4,["usize","objectmaperror"]],["objectmaperror",4]]],[[["objid",3],["usize",15],["option",4,["objid"]]],[["mapinfo",3],["objectreadmaperror",4],["result",4,["mapinfo","objectreadmaperror"]]]],[[["objid",3]],[["objectinfo",3],["objectstaterror",4],["result",4,["objectinfo","objectstaterror"]]]],[[["usize",15],["option",4,["objid"]],["objid",3],["unmapflags",3]],[["result",4,["objectunmaperror"]],["objectunmaperror",4]]],[[["clocksource",4],["readclockflags",3]],[["clockinfo",3],["readclockinfoerror",4],["result",4,["clockinfo","readclockinfoerror"]]]],[[["threadspawnargs",3]],[["objid",3],["result",4,["objid","threadspawnerror"]],["threadspawnerror",4]]],[[["u64",15]],["never",15]],[[]],[[["u64",15]]],[[["duration",3],["option",4,["duration"]]],[["result",4,["usize","threadsyncerror"]],["usize",15],["threadsyncerror",4]]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["u64",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["u64",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["never",15]],[[]],[[]],[[["u32",15]]],[[["usize",15]],[["option",4,["u32"]],["u32",15]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["duration",3],["option",4,["duration"]]],[["u64",15],["option",4,["u64"]]]],[[],["duration",3]],[[],["duration",3]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[],["usize",15]],[[["u64",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["usize",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,[[]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]]],"p":[[4,"AuxEntry"],[3,"KernelInitInfo"],[3,"KernelInitName"],[13,"ProgramHeaders"],[13,"Environment"],[13,"Arguments"],[13,"ExecId"],[4,"DeviceType"],[4,"MailboxPriority"],[4,"SubObjectType"],[4,"BusType"],[4,"CacheType"],[3,"DeviceInterruptFlags"],[3,"DeviceInterrupt"],[3,"DeviceRepr"],[3,"MmioInfo"],[3,"InterruptVector"],[3,"DeviceId"],[4,"PcieKactionSpecific"],[3,"PcieBridgeHeader"],[3,"PcieDeviceHeader"],[3,"PcieFunctionHeader"],[3,"PcieCapabilityHeader"],[3,"PcieInfo"],[3,"PcieDeviceInfo"],[3,"Segment"],[4,"KactionCmd"],[4,"KactionGenericCmd"],[4,"KactionError"],[4,"KactionValue"],[3,"KactionFlags"],[3,"KsoHdr"],[13,"Generic"],[13,"Specific"],[13,"GetChild"],[13,"GetSubObject"],[13,"PinPages"],[13,"U64"],[13,"ObjID"],[4,"SpawnExecutableError"],[3,"ElfObject"],[3,"BaseVersion"],[3,"BaseTag"],[8,"BaseType"],[3,"MetaInfo"],[3,"MetaExt"],[3,"MetaFlags"],[3,"Nonce"],[3,"MetaExtTag"],[3,"Protections"],[3,"ObjID"],[3,"Mutex"],[4,"NewHandleError"],[4,"KernelConsoleReadSource"],[4,"ObjectControlCmd"],[3,"KernelConsoleWriteFlags"],[4,"ThreadSyncOp"],[4,"ThreadControl"],[3,"DeleteFlags"],[3,"ThreadSyncFlags"],[4,"KernelConsoleReadError"],[4,"ObjectCreateError"],[4,"ObjectMapError"],[4,"ObjectUnmapError"],[4,"ObjectReadMapError"],[4,"ObjectControlError"],[4,"ObjectStatError"],[4,"ThreadSpawnError"],[4,"ThreadSyncError"],[4,"ReadClockInfoError"],[4,"Syscall"],[3,"ClockFlags"],[4,"ClockSource"],[3,"KernelConsoleReadFlags"],[3,"KernelConsoleReadBufferFlags"],[4,"BackingType"],[4,"ThreadSyncReference"],[4,"LifetimeType"],[4,"ThreadSync"],[4,"KernelConsoleReadBufferError"],[4,"HandleType"],[3,"ObjectCreateFlags"],[3,"CreateTieFlags"],[3,"NewHandleFlags"],[3,"MapFlags"],[3,"UnmapFlags"],[3,"ThreadSpawnFlags"],[3,"ReadClockFlags"],[3,"ThreadSpawnArgs"],[3,"ObjectInfo"],[3,"ObjectSource"],[3,"ObjectCreate"],[3,"CreateTieSpec"],[3,"SysInfo"],[3,"PinnedPage"],[3,"MapInfo"],[3,"ThreadSyncSleep"],[3,"ThreadSyncWake"],[3,"ClockInfo"],[13,"Delete"],[13,"Sleep"],[13,"Wake"],[13,"ObjectRef"],[13,"Virtual"],[3,"ThreadRepr"],[4,"UpcallInfo"],[3,"UpcallFrame"],[3,"ExceptionInfo"],[13,"Exception"],[3,"Volatile"]]},\
"twizzler_async":{"doc":"Support for asynchronous programming on Twizzler. This …","t":[3,3,8,8,16,3,18,18,16,3,3,18,18,18,18,16,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,10,10,10,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11],"n":["Async","AsyncDuplex","AsyncDuplexSetup","AsyncSetup","Error","FlagBlock","READ_WOULD_BLOCK","READ_WOULD_BLOCK","ReadError","Task","Timer","WOULD_BLOCK","WOULD_BLOCK","WRITE_WOULD_BLOCK","WRITE_WOULD_BLOCK","WriteError","after","at","block_on","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cancel","default","detach","drop","drop","drop","drop","expect","fmt","from","from","from","from","from","get_ref","get_ref","into","into","into","into","into","into_future","into_future","into_inner","into_inner","local","new","new","new","poll","poll","read_with","run","run_with","setup_read_sleep","setup_sleep","setup_write_sleep","signal_all","spawn","timeout_after","timeout_at","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_poll","type_id","type_id","type_id","type_id","type_id","unwrap","wait","wait_for_first","write_with"],"q":["twizzler_async","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A wrapper type around some “handle” that we want to …","A wrapper type around some “handle” that we want to …","Implement setting up externally signaled asynchronous …","Implement setting up externally signaled asynchronous …","The error type returned by any closures run.","A basic condition variable for async tasks. If you call …","The specific variant of the error type that indicates that …","The specific variant of the error type that indicates that …","The error type returned by read operations.","A spawned future. Tasks are futures themselves and yield …","A timer future that returns after a specified period of …","The specific variant of the error type that indicates that …","The specific variant of the error type that indicates that …","The specific variant of the error type that indicates that …","The specific variant of the error type that indicates that …","The error type returned by write operations.","Make a new timer future that returns Ready after a …","Make a new timer future that returns Ready at or after a …","Run a future to completion, sleeping the thread if there …","","","","","","","","","","","Cancels the task and waits for it to stop running. If the …","","Detach the task and let it run in the background.","","","","","Spawns a new task and awaits and unwraps the result, …","","","","","","","Return a reference to the underlying handle.","Return a reference to the underlying handle.","","","","","","","","Consume the wrapper and return the underlying handle.","Consume this Async and return the handle.","Spawns a future onto the thread-local executor.","Construct a new <code>Async&lt;T&gt;</code>.","Construct a new Async.","Construct a new FlagBlock.","","","Asynchronously run a read-like operation that will sleep …","Runs executors.","Asynchronously run an operation that will sleep if not …","Return a thread sync sleep operation specification for …","Return a thread sync sleep operation specification for …","Return a thread sync sleep operation specification for …","Signal anyone waiting.","Spawns a future onto the global executor.","Await a future until a timeout occurs (or that future …","Await a future until a timeout occurs (or that future …","","","","","","","","","","","","","","","","","Spawns a new task and awaits and unwraps the result.","Return an awaitable future for the “readiness” of this …","A future that waits on two sub-futures until the first one …","Asynchronously run a write-like operation that will sleep …"],"i":[0,0,0,0,1,0,2,2,2,0,0,1,1,2,2,2,3,3,0,4,5,3,6,7,4,5,3,6,7,5,7,5,4,5,3,6,5,6,4,5,3,6,7,4,6,4,5,3,6,7,5,3,4,6,5,4,6,7,5,3,4,0,6,2,1,2,7,5,0,0,4,5,3,6,7,4,5,3,6,7,5,4,5,3,6,7,5,7,0,4],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["duration",3]],["timer",3]],[[["instant",3]],["timer",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["flagblock",3]],[[]],[[]],[[]],[[]],[[]],[[["str",15]],["task",3]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["task",3]],[[]],[[]],[[]],[[["context",3],["pin",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[]],[[]],[[]],[[],["threadsyncsleep",3]],[[],["threadsyncsleep",3]],[[],["threadsyncsleep",3]],[[]],[[],["task",3]],[[["future",8],["duration",3]]],[[["future",8],["instant",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["context",3],["pin",3]],["poll",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["task",3]],[[],["flagblockfuture",3]],[[],["waitforfirst",3]],[[]]],"p":[[8,"AsyncSetup"],[8,"AsyncDuplexSetup"],[3,"Timer"],[3,"AsyncDuplex"],[3,"Task"],[3,"Async"],[3,"FlagBlock"]]},\
"twizzler_driver":{"doc":"","tn":["BusTreeRoot","borrow","borrow_mut","bus","children","controller","device","dma","from","get_bustree_root","into","request","try_from","try_into","type_id","pcie","AllocateInterrupt","Msi","MsiCapability","MsiX","MsixCapability","MsixTableEntry","PcieBridgeHeader","PcieCapability","PcieCapabilityHeader","PcieCapabilityHeader","PcieCapabilityIterator","PcieDeviceHeader","PcieDeviceInfo","PcieFunctionHeader","PcieInfo","PcieKactionSpecific","RegisterDevice","Unknown","bar","bars","bist","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bridge_control","bus_end","bus_nr","bus_start","cache_line_size","cap_ptr","cap_ptr","cardbus_cis_ptr","class","class","command","dev_nr","device_id","device_id","exprom_base","exprom_base","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fnheader","fnheader","from","from","from","from","from","from","from","from","from","from","from","from","from","func_nr","header","header","header_type","id","id","int_line","int_line","int_pin","int_pin","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","io_base","io_base_upper","io_limit","io_limit_upper","latency_timer","mask","max_latency","memory_base","memory_limit","min_grant","msg_addr_hi","msg_addr_low","msg_ctrl","msg_ctrl","msg_data","next","next","next","pending","pending_offset_and_bir","pref_base_upper","pref_limit_upper","pref_memory_base","pref_memory_limit","primary_bus_nr","progif","progif","resv","revision","revision","secondary_bus_nr","secondary_latency_timer","secondary_status","seg_nr","seg_nr","status","subclass","subclass","subordinate_bus_nr","subsystem_id","subsystem_vendor_id","table_offset_and_bir","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vendor_id","vendor_id","0","0","0","DeviceController","borrow","borrow_mut","device","events","from","into","new_from_device","try_from","try_into","type_id","Bus","BusType","Device","Device","DeviceRepr","DeviceType","Pcie","System","Unknown","Unknown","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bus_type","bus_type","check_for_interrupt","check_for_mailbox","children","children","clone","clone","clone_into","clone_into","cmp","cmp","device_id","device_type","eq","eq","events","fmt","fmt","fmt","fmt","from","from","from","from","get_info","get_mmio","info","init","interrupts","into","into","into","into","is_bus","kaction","mailboxes","mmio","new","partial_cmp","partial_cmp","register_interrupt","repr","repr_mut","setup_interrupt_sleep","tags","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","wait_for_interrupt","DeviceChildrenIterator","borrow","borrow_mut","from","into","into_iter","next","try_from","try_into","type_id","DeviceEventStream","InterruptAllocationError","InterruptInfo","KernelError","NoMoreInterrupts","Unsupported","allocate_interrupt","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","check_mailbox","devint","drop","free_interrupt","from","from","from","into","into","into","next","next_msg","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","0","InfoObject","borrow","borrow_mut","from","get_data","into","try_from","try_into","type_id","MmioObject","borrow","borrow_mut","from","get_info","get_mmio_offset","into","try_from","try_into","type_id","Access","BiDirectional","DMA_PAGE_SIZE","DeviceSync","DeviceToHost","DmaObject","DmaOptions","DmaPin","DmaPool","DmaRegion","DmaSliceRegion","Exhausted","FullCoherence","HostToDevice","InternalError","PinError","PostCpuToDevice","PostDeviceToCpu","PreCpuToDevice","PreDeviceToCpu","SyncMode","UNSAFE_MANUAL_COHERENCE","access","access","all","allocate","allocate_array","allocate_array_with","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","complement","contains","default","default_spec","difference","drop","drop","empty","eq","eq","eq","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","get","get","get_mut","get_mut","hash","hash","hash","hash","index","insert","intersection","intersects","into","into","into","into","into","into","into","into","into","into_iter","is_all","is_empty","len","ne","new","new","not","nr_pages","num_bytes","num_bytes","object","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pin","pin","region","release_pin","release_pin","remove","set","slice_region","sub","sub_assign","symmetric_difference","sync","sync","to_owned","to_owned","to_owned","to_owned","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","with","with","with_mut","with_mut","NUM_IDS","Request","RequestDriver","Requester","Response","ResponseInfo","SubmitError","SubmitRequest","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","data","data","eq","eq","finish","flush","fmt","fmt","from","from","from","hash","hash","id","id","into","into","into","into_inner","is_err","is_shutdown","ne","ne","new","new","new","partial_cmp","partial_cmp","shutdown","submit","submit","submit_for_response","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":["twizzler_driver","","","","","","","","","","","","","","","twizzler_driver::bus","twizzler_driver::bus::pcietwizzler_driver::bus::pcie::PcieCapability","","","twizzler_driver::controller","","","","","","","","","","","twizzler_driver::device","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","twizzler_driver::device::children","","","","","","","","","","twizzler_driver::device::events","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","twizzler_driver::device::events::InterruptAllocationError","twizzler_driver::device::info","","","","","","","","","twizzler_driver::device::mmio","","","","","","","","","","twizzler_driver::dmatwizzler_driver::request","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","Module for managing DMA memory, using objects for DMA, and …","","","","","","","","","Allocate an interrupt for a device.","","","","","","The standard PCIe bridge header. See the PCI spec for more …","","","","","The standard PCIe device header. See the PCI spec for more …","The base struct for an info sub-object for a PCIe device.","The standard PCIe function header. See the PCI spec for …","The base struct for an info sub-object for a PCIe bus.","PCIe-specific crate::kso::KactionGenericCmd values.","Register a devicebus. This device has numerous children and should be …","All supported kernel-discovered bus types.","","A traditional “device”. It may still have children, …","The base struct for a device object.","Possible high-level device types.","PCIe.","The “system” bus. Typically comprised of devices …","An unknown device type. Should be ignored.","An unknown bus. Should be ignored.","","","","","","","","","","","Poll an interrupt vector to see if it has fired.","Poll an interrupt vector to see if it has fired.","","","","","","","","","","","","","","","","","","","","","","Get an indexed info object for a device.","","","","","","","","","","","","","Construct a new device repr.","","","Register an interrupt vector with this device.","","","","","","","","","","","","","","","","","","","","","Block until an interrupt fires.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the base of the memory mapped IO region.","","","","","Intended access direction for DMA memory.","The memory is accessed read/write by both device and host.","Size of a page for this DMA system.","DMA types must implement this trait, which indicates that …","The memory is used for the host to read and the device to …","A handle for an object that can be used to perform DMA, …","Options for DMA regions.","A representation of some pinned memory for a region.","A pool for allocating DMA regions that all share a common …","A region of DMA memory, represented in virtual memory as …","A region of DMA memory, represented in virtual memory as …","Kernel resources are exhausted.","Ensures that memory is fully coherent.","The memory is used for the host to write and the device to …","An internal error occurred.","Possible failure modes for pinning memory.","Ensures coherence for the host to write to the device, …","Ensures coherence for the device to write to the host, …","Ensures coherence for the host to write to the device, …","Ensures coherence for the device to write to the host, …","Mode of syncing to apply when calling <code>sync()</code>. These sync …","Region functions will not perform automatic coherence.","Return the access direction of this region.","Return the access direction of this region.","Returns the set containing all flags.","Allocate a new DmaRegion from the pool. The region will be …","Allocate a new DmaSliceRegion from the pool. Each entry in …","Allocate a new DmaSliceRegion from the pool. Each entry in …","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","Generate a default CreateSpec for use in creating Twizzler …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","","","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","Get a reference to the DMA memory.","Get a reference to the DMA memory.","Get a mutable reference to the DMA memory.","Get a mutable reference to the DMA memory.","","","","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","","","","","","","","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Return the number of elements in the slice that this …","","Create a new DmaObject from an existing object handle.","Create a new DmaPool with access and DMA options, where …","Returns the complement of this set of flags.","Calculate the number of pages this region covers.","Return the number of bytes this region covers.","Return the number of bytes this region covers.","Get a reference to the object handle.","","","","","","","Create a DmaRegion from the base of this object, where the …","Release any pin created for this region.","Release any pin created for this region.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Create a DmaSliceRegion from the base of this object, …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,1,0,1,0,0,0,1,0,1,0,1,1,1,0,2,3,0,3,0,0,0,0,0,0,0,0,0,0,0,0,2,3,4,5,6,7,8,9,10,11,3,2,6,5,4,12,13,14,7,8,9,10,11,3,2,6,5,4,12,13,14,4,13,14,13,6,5,4,5,6,14,6,14,6,14,5,4,8,9,10,11,3,13,14,5,4,7,8,9,10,11,3,2,6,5,4,12,13,14,14,9,10,6,8,12,5,4,5,4,7,8,9,10,11,3,2,6,5,4,12,13,14,7,4,4,4,4,6,9,5,4,4,5,9,9,9,10,9,7,8,12,9,10,4,4,4,4,4,6,14,9,6,14,4,4,4,13,14,6,6,14,4,5,5,10,7,8,9,10,11,3,2,2,6,5,4,12,13,14,7,8,9,10,11,3,2,6,5,4,12,13,14,7,8,9,10,11,3,2,6,5,4,12,13,14,6,14,15,16,17,0,18,18,18,18,18,18,18,18,18,18,19,0,0,19,0,0,20,20,19,20,21,22,19,20,21,22,19,20,21,22,22,22,0,21,19,20,19,20,19,20,22,22,19,20,0,21,22,19,20,21,22,19,20,21,21,0,22,22,21,22,19,20,21,21,22,0,22,19,20,22,21,21,22,22,19,20,21,22,21,22,19,20,21,22,19,20,21,22,19,20,22,0,23,23,23,23,23,23,23,23,23,0,0,0,24,24,24,25,24,25,26,24,25,26,25,26,26,25,24,25,26,24,25,26,26,25,24,25,26,24,25,26,24,25,26,27,0,28,28,28,28,28,28,28,28,0,29,29,29,29,29,29,29,29,29,0,30,0,0,30,0,0,0,0,0,0,31,32,30,31,0,32,32,32,32,0,33,34,35,33,36,36,36,33,33,33,33,33,33,33,37,38,36,34,35,31,30,32,33,37,38,36,34,35,31,30,32,33,31,30,32,33,31,30,32,33,31,30,32,33,33,33,33,36,33,37,34,33,31,30,32,33,33,31,30,32,33,33,33,33,33,37,37,38,36,34,35,31,30,32,33,33,33,33,33,34,35,34,35,31,30,32,33,38,33,33,33,37,38,36,34,35,31,30,32,33,38,33,33,35,33,37,36,33,34,34,35,37,31,30,32,33,34,35,37,34,35,33,33,37,33,33,33,34,35,31,30,32,33,33,37,38,36,34,35,31,30,32,33,37,38,36,34,35,31,30,32,33,37,38,36,34,35,31,30,32,33,33,34,35,34,35,39,39,0,0,39,0,39,0,40,41,42,40,41,42,41,42,41,42,41,42,41,42,41,42,40,39,41,42,40,41,42,41,42,41,42,40,41,42,41,41,40,41,42,40,41,42,41,42,40,39,40,40,41,42,40,41,42,40,41,42,40,41,42],"f":[null,[[]],[[]],null,[[],["devicechildreniterator",3]],null,null,null,[[]],[[],["bustreeroot",3]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["option",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["u32",15]],[["result",4,["pciekactionspecific"]],["pciekactionspecific",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,[[]],[[]],[[],["device",3]],[[],["deviceeventstream",3]],[[]],[[]],[[["device",3]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bustype",4]],null,[[["usize",15]],[["u64",15],["option",4,["u64"]]]],[[["usize",15]],[["u64",15],["option",4,["u64"]]]],null,[[],["devicechildreniterator",3]],[[],["devicetype",4]],[[],["bustype",4]],[[]],[[]],[[["devicetype",4]],["ordering",4]],[[["bustype",4]],["ordering",4]],null,null,[[["devicetype",4]],["bool",15]],[[["bustype",4]],["bool",15]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[]],[[]],[[]],[[]],[[["u8",15]],[["option",4,["infoobject"]],["infoobject",3]]],[[["u8",15]],[["mmioobject",3],["option",4,["mmioobject"]]]],null,[[],["devicerepr",3]],null,[[]],[[]],[[]],[[]],[[],["bool",15]],[[["u64",15],["kactionflags",3],["kactioncmd",4]],[["kactionvalue",4],["kactionerror",4],["result",4,["kactionvalue","kactionerror"]]]],null,null,[[["devicetype",4],["bustype",4],["deviceid",3],["ksohdr",3]],["devicerepr",3]],[[["devicetype",4]],[["ordering",4],["option",4,["ordering"]]]],[[["bustype",4]],[["ordering",4],["option",4,["ordering"]]]],[[["usize",15],["interruptvector",3],["deviceinterruptflags",3]]],[[],["devicerepr",3]],[[],["devicerepr",3]],[[["usize",15]],["threadsyncsleep",3]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["usize",15],["option",4,["duration"]],["duration",3]],["u64",15]],null,[[]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,[[],[["interruptinfo",3],["result",4,["interruptinfo","interruptallocationerror"]],["interruptallocationerror",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["mailboxpriority",4]],[["u64",15],["option",4,["u64"]]]],[[],["u32",15]],[[]],[[["interruptinfo",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["mailboxpriority",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[]],[[]],[[]],[[],["mmioinfo",3]],[[["usize",15]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["access",4]],[[],["access",4]],[[]],[[["devicesync",8]],[["result",4,["dmaregion","allocationerror"]],["allocationerror",4],["dmaregion",3]]],[[["usize",15],["clone",8],["devicesync",8]],[["result",4,["dmasliceregion","allocationerror"]],["allocationerror",4],["dmasliceregion",3]]],[[["usize",15]],[["result",4,["dmasliceregion","allocationerror"]],["allocationerror",4],["dmasliceregion",3]]],[[]],[[]],[[["dmaoptions",3]]],[[]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["pinerror",4]],[[],["access",4]],[[],["syncmode",4]],[[],["dmaoptions",3]],[[]],[[]],[[]],[[]],[[["pinerror",4]],["ordering",4]],[[["access",4]],["ordering",4]],[[["syncmode",4]],["ordering",4]],[[["dmaoptions",3]],["ordering",4]],[[]],[[],["bool",15]],[[]],[[],["createspec",3]],[[]],[[]],[[]],[[]],[[["pinerror",4]],["bool",15]],[[["access",4]],["bool",15]],[[["syncmode",4]],["bool",15]],[[["dmaoptions",3]],["bool",15]],[[["intoiterator",8]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["object",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u64",15]],["option",4]],[[["u64",15]]],[[["u64",15]]],[[["intoiterator",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[]],[[]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["usize",15]],[[["dmaoptions",3]],["bool",15]],[[["object",3]]],[[["createspec",3],["access",4],["dmaoptions",3]]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["object",3]],[[["pinerror",4]],[["option",4,["ordering"]],["ordering",4]]],[[["access",4]],[["option",4,["ordering"]],["ordering",4]]],[[["syncmode",4]],[["option",4,["ordering"]],["ordering",4]]],[[["dmaoptions",3]],[["option",4,["ordering"]],["ordering",4]]],[[],[["pinerror",4],["result",4,["dmapin","pinerror"]],["dmapin",3]]],[[],[["pinerror",4],["result",4,["dmapin","pinerror"]],["dmapin",3]]],[[["access",4],["dmaoptions",3]],[["devicesync",8],["dmaregion",3]]],[[]],[[]],[[]],[[["bool",15]]],[[["usize",15],["access",4],["dmaoptions",3]],[["devicesync",8],["dmasliceregion",3]]],[[]],[[]],[[]],[[["syncmode",4]]],[[["usize",15],["syncmode",4],["range",3,["usize"]]]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[["usize",15],["range",3,["usize"]]]],[[]],[[["usize",15],["range",3,["usize"]]]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["responseinfo",3]],[[],["submitrequest",3]],[[]],[[]],[[["responseinfo",3]],["ordering",4]],[[["submitrequest",3]],["ordering",4]],[[]],[[]],[[["responseinfo",3]],["bool",15]],[[["submitrequest",3]],["bool",15]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[],["u64",15]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[["responseinfo",3]],["bool",15]],[[["submitrequest",3]],["bool",15]],[[]],[[["u64",15],["bool",15]]],[[]],[[["responseinfo",3]],[["option",4,["ordering"]],["ordering",4]]],[[["submitrequest",3]],[["option",4,["ordering"]],["ordering",4]]],[[]],[[],[["box",3,["future"]],["pin",3,["box"]]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[3,"BusTreeRoot"],[4,"PcieKactionSpecific"],[4,"PcieCapability"],[3,"PcieBridgeHeader"],[3,"PcieDeviceHeader"],[3,"PcieFunctionHeader"],[3,"PcieCapabilityIterator"],[3,"PcieCapabilityHeader"],[3,"MsiCapability"],[3,"MsixCapability"],[3,"MsixTableEntry"],[3,"PcieCapabilityHeader"],[3,"PcieInfo"],[3,"PcieDeviceInfo"],[13,"Unknown"],[13,"Msi"],[13,"MsiX"],[3,"DeviceController"],[4,"DeviceType"],[4,"BusType"],[3,"Device"],[3,"DeviceRepr"],[3,"DeviceChildrenIterator"],[4,"InterruptAllocationError"],[3,"DeviceEventStream"],[3,"InterruptInfo"],[13,"KernelError"],[3,"InfoObject"],[3,"MmioObject"],[4,"Access"],[4,"PinError"],[4,"SyncMode"],[3,"DmaOptions"],[3,"DmaRegion"],[3,"DmaSliceRegion"],[3,"DmaPool"],[3,"DmaObject"],[3,"DmaPin"],[8,"RequestDriver"],[3,"Requester"],[3,"ResponseInfo"],[3,"SubmitRequest"]]},\
"twizzler_nando":{"doc":"","t":[],"n":[],"q":[],"d":[],"i":[],"f":[],"p":[]},\
"twizzler_net":{"doc":"","t":[13,13,13,13,13,4,13,3,3,13,13,13,13,13,13,3,3,13,13,13,3,3,3,13,13,13,3,18,13,13,13,13,4,4,13,13,13,13,4,4,4,13,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,5,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,3,4,13,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Both","Close","Close","CloseConnection","CloseConnection","CloseInfo","Connect","Connection","ConnectionId","ConnectionReady","Echo","EchoReply","Error","InvalidArgument","Listen","ListenFlags","ListenInfo","ListenIpv4","ListenReady","NewConnection","NmHandle","NmHandleManager","NmOpenObjects","NoSuchConnection","Nothing","Nothing","PacketData","RAW","Recv","RecvFromIpv4","Reset","Rx","RxCompletion","RxRequest","Send","SendToIpv4","StopListen","Tx","TxCompletion","TxCompletionError","TxRequest","Unknown","addr","address","all","allocatable_buffer_controller","allocatable_buffer_controller","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","client_name","client_name","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","complement","complete","contains","data","difference","drop","drop","empty","eq","eq","eq","eq","extend","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","get_incoming_buffer","get_incoming_buffer","handle","hash","id","id","insert","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_all","is_closed","is_closed","is_dead","is_dead","is_empty","is_network_manager_ready","is_terminated","is_terminated","ne","ne","ne","new","not","open_nm_handle","partial_cmp","partial_cmp","partial_cmp","partial_cmp","receive","remove","server_open_nm_handle","set","set_closed","set_closed","set_dead","set_dead","sub","sub_assign","submit","submit","submit_no_wait","submit_no_wait","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","wait_until_network_manager_ready","0","0","0","0","0","1","1","1","1","2","0","0","0","0","0","0","0","0","0","0","0","1","1","1","Icmp","Ipv4","Ipv4Addr","NodeAddr","Null","ServiceAddr","Tcp","Udp","any","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","cmp","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","is_localhost","localhost","ne","ne","ne","partial_cmp","partial_cmp","partial_cmp","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","0","0","0","BufferBase","BufferController","ManagedBuffer","allocate","as_bytes","as_bytes_mut","as_packet_data","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","buffer_len","copy_in","drop","from","from","from","get_data_mut","get_slice","get_slice_mut","init","into","into","into","new_unowned","release","set_len","tags","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":["twizzler_nettwizzler_net::RxRequest","","","","","","","","","","twizzler_net::TxCompletion","","","twizzler_net::TxRequest","","","","","","","","","","","twizzler_net::addr","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","twizzler_net::addr::NodeAddr","twizzler_net::addr::ServiceAddr","","twizzler_net::buffer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the set containing all flags.","","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","","","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","","","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","","","","","","","","","","","","","","","Returns <code>true</code> if all flags are currently set.","","","","","Returns <code>true</code> if no flags are currently stored.","","","","","","","","Returns the complement of this set of flags.","","","","","","","Removes the specified flags in-place.","","Inserts or removes the specified flags depending on the …","","","","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","","","","","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,2,3,2,3,0,3,0,0,4,3,2,4,5,3,0,0,3,4,2,0,0,0,5,6,4,0,7,2,2,1,1,0,0,3,3,3,1,0,0,0,5,0,8,7,9,10,7,7,7,7,7,7,7,9,10,11,12,1,13,2,6,7,8,3,5,4,14,9,10,11,12,1,13,2,6,7,8,3,5,4,14,0,9,10,11,12,1,13,2,6,7,8,3,5,4,11,12,1,13,2,6,7,8,3,5,4,12,1,7,8,7,10,7,10,7,9,10,7,12,1,7,8,7,8,9,10,11,12,1,13,2,6,7,7,7,7,7,8,3,5,4,14,9,10,11,12,12,1,13,2,6,7,8,3,5,4,14,7,7,7,7,9,10,9,7,9,10,7,7,7,9,10,11,12,1,13,2,6,7,8,3,5,4,14,7,9,10,9,10,7,0,9,10,12,7,8,8,7,0,12,1,7,8,10,7,0,7,9,10,9,10,7,7,9,10,9,10,7,11,12,1,13,2,6,7,8,3,5,4,7,9,10,11,12,1,13,2,6,7,8,3,5,4,14,9,10,11,12,1,13,2,6,7,8,3,5,4,14,9,10,11,12,1,13,2,6,7,8,3,5,4,14,7,0,15,16,17,18,19,16,17,18,19,19,20,21,22,23,24,25,26,27,28,29,30,24,27,28,31,32,0,0,31,0,31,31,31,33,32,31,33,32,31,33,32,31,33,32,31,33,32,31,33,32,31,33,33,32,31,33,33,32,31,33,32,31,33,33,33,32,31,33,32,31,33,32,31,33,33,32,31,33,32,31,33,32,31,34,35,36,0,0,0,37,38,38,38,39,37,38,39,37,38,38,38,38,39,37,38,38,37,37,39,39,37,38,38,37,38,39,39,37,38,39,37,38,39,37,38],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["buffercontroller",3]],[[],["buffercontroller",3]],[[]],[[]],[[["listenflags",3]]],[[]],[[],["u32",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["str",15]],[[],["str",15]],[[],["packetdata",3]],[[],["connectionid",3]],[[],["closeinfo",4]],[[],["connection",3]],[[],["rxrequest",4]],[[],["rxcompletion",4]],[[],["listenflags",3]],[[],["listeninfo",3]],[[],["txrequest",4]],[[],["txcompletionerror",4]],[[],["txcompletion",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["connectionid",3]],["ordering",4]],[[["closeinfo",4]],["ordering",4]],[[["listenflags",3]],["ordering",4]],[[["listeninfo",3]],["ordering",4]],[[]],[[["txcompletion",4],["u32",15]]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[["connectionid",3]],["bool",15]],[[["closeinfo",4]],["bool",15]],[[["listenflags",3]],["bool",15]],[[["listeninfo",3]],["bool",15]],[[["intoiterator",8]]],[[],["listenflags",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["u64",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u32",15]],["option",4]],[[["u32",15]]],[[["u32",15]]],[[["intoiterator",8]]],[[["packetdata",3]],["managedbuffer",3]],[[["packetdata",3]],["managedbuffer",3]],[[["arc",3]]],[[]],[[],["u64",15]],[[],["u64",15]],[[]],[[]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["objid",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["connectionid",3]],["bool",15]],[[["listenflags",3]],["bool",15]],[[["listeninfo",3]],["bool",15]],[[["nodeaddr",4],["serviceaddr",4],["listenflags",3]]],[[]],[[["str",15]],[["option",4,["nmhandle"]],["nmhandle",3]]],[[["connectionid",3]],[["option",4,["ordering"]],["ordering",4]]],[[["closeinfo",4]],[["option",4,["ordering"]],["ordering",4]]],[[["listenflags",3]],[["option",4,["ordering"]],["ordering",4]]],[[["listeninfo",3]],[["option",4,["ordering"]],["ordering",4]]],[[]],[[]],[[],[["option",4,["nmhandlemanager"]],["nmhandlemanager",3]]],[[["bool",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["txrequest",4]]],[[["rxrequest",4]]],[[["txrequest",4]]],[[["rxrequest",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[["objid",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["ipv4addr",3]],[[],["nodeaddr",4]],[[],["serviceaddr",4]],[[]],[[]],[[]],[[["ipv4addr",3]],["ordering",4]],[[["nodeaddr",4]],["ordering",4]],[[["serviceaddr",4]],["ordering",4]],[[["ipv4addr",3]],["bool",15]],[[["nodeaddr",4]],["bool",15]],[[["serviceaddr",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["u32",15]]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[]],[[["ipv4addr",3]],["bool",15]],[[["nodeaddr",4]],["bool",15]],[[["serviceaddr",4]],["bool",15]],[[["ipv4addr",3]],[["option",4,["ordering"]],["ordering",4]]],[[["nodeaddr",4]],[["option",4,["ordering"]],["ordering",4]]],[[["serviceaddr",4]],[["option",4,["ordering"]],["ordering",4]]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,[[]],[[]],[[]],[[],["packetdata",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]],["maybeuninit",19]],[[["usize",15],["u32",15]]],[[["usize",15],["u32",15]]],[[]],[[]],[[]],[[]],[[["usize",15],["buffercontroller",3],["u32",15]]],[[["u32",15]]],[[["usize",15]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[4,"CloseInfo"],[4,"RxRequest"],[4,"TxRequest"],[4,"TxCompletion"],[4,"TxCompletionError"],[4,"RxCompletion"],[3,"ListenFlags"],[3,"ListenInfo"],[3,"NmHandle"],[3,"NmHandleManager"],[3,"PacketData"],[3,"ConnectionId"],[3,"Connection"],[3,"NmOpenObjects"],[13,"EchoReply"],[13,"RecvFromIpv4"],[13,"Recv"],[13,"CloseConnection"],[13,"NewConnection"],[13,"ConnectionReady"],[13,"ListenReady"],[13,"Error"],[13,"Echo"],[13,"SendToIpv4"],[13,"ListenIpv4"],[13,"Connect"],[13,"Send"],[13,"CloseConnection"],[13,"Listen"],[13,"StopListen"],[4,"ServiceAddr"],[4,"NodeAddr"],[3,"Ipv4Addr"],[13,"Ipv4"],[13,"Tcp"],[13,"Udp"],[3,"BufferController"],[3,"ManagedBuffer"],[3,"BufferBase"]]},\
"twizzler_object":{"doc":"The twizzler-object crate.","t":[13,4,3,18,13,13,13,13,3,3,4,3,13,13,3,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,8,3,8,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Create","CreateError","CreateSpec","EXEC","Init","InvalidId","InvalidProtections","MappingFailed","ObjID","Object","ObjectInitError","ObjectInitFlags","ObjectNotFound","OutOfSlots","Protections","READ","WRITE","all","all","as_ref","as_u128","base","base_mut_unchecked","base_unchecked","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","complement","complement","contains","contains","create","create_with","difference","difference","empty","empty","eq","eq","eq","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","get_fote_unguarded","hash","hash","hash","id","init_id","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","is_all","is_all","is_empty","is_empty","key","marker","meta","meta","meta_flags","meta_kuid","meta_nonce","meta_tag","meta_version","metaext","ne","ne","ne","new","new","new_from_parts","not","not","partial_cmp","partial_cmp","partial_cmp","ptr","raw_lea","raw_lea_mut","remove","remove","set","set","slot","slot","split","src","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","tie","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","toggle","toggle","transmute","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","0","0","BaseTag","BaseType","BaseVersion","ObjSafe","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","fmt","fmt","from","from","init","into","into","tags","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","FotEntry","borrow","borrow_mut","from","into","try_from","try_into","type_id","AtomicInvPtr","InvPtr","borrow","borrow","borrow_mut","borrow_mut","from","from","from_parts","from_parts","inner","into","into","is_null","is_null","is_null_unguarded","null","null","parts","parts","parts_unguarded","raw_inner","try_from","try_from","try_into","try_into","type_id","type_id","Slot","borrow","borrow_mut","drop","from","get","get_fote_unguarded","id","into","prot","raw_lea","raw_lea_mut","slot","try_from","try_into","type_id","vaddr_meta","vaddr_null","vaddr_start"],"q":["twizzler_objecttwizzler_object::CreateError","","twizzler_object::marker","","","","","","","","","","","","","","","","","","","","","","","","","","","","twizzler_object::meta","","","","","","","","twizzler_object::ptr","","","","","","","","","","","","","","","","","","","","","","","","","","","","twizzler_object::slot","","","","","","","","","","","","","","","","","",""],"d":["","Possible object creation errors.","A builder-pattern type for making a new object.","Exec allowed.","","The ID isn’t valid.","The requested protections are invalid.","The mapping failed.","An object ID, represented as a transparent wrapper type. …","A handle for an object with base type T.","Possible errors from initializing an object handle.","Flags to pass to object initialization routines.","The object doesn’t exist.","There are not enough memory slots.","Mapping protections for mapping objects into the address …","Read allowed.","Write allowed.","Returns the set containing all flags.","Returns the set containing all flags.","","","Get a reference to the base of an object. Checks to see if …","Get a mutable reference to the base of an object, …","Get a reference to the base of an object, bypassing …","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Create an object, setting up the initial value for base …","Create an object, setting up the initial value for the …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","Get a mutable pointer to one of the object’s FOT entries.","","","","Get the ID of this object.","Initialize an object handle from an object ID.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","","","","","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Set the public key ID for this new object.","","","Get a mutable reference to the object’s meta info struct.","Get the meta flags of the object.","Get the public key ID of the object.","Get the nonce of the object.","Get the base tag of the object.","Get the base version of the object.","Get a mutable reference to the object’s first meta …","","","","Construct a basic CreateSpec.","Create a new ObjID out of a 128 bit value.","Build a new ObjID out of a high part and a low part.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","","Get a raw pointer into an object given an offset.","Get a raw mutable pointer into an object given an offset.","Removes the specified flags in-place.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","","Get the slot of this object.","Split an object ID into upper and lower values, useful for …","Add a source for object creation.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Add a tie to another object.","","","","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","Tag for a base type. Each base type must have a unique tag.","Trait that all base types must implement.","Version for a base type.","This auto trait specifies that some type is “safe” to …","","","","","","","","","","","","","Construct a new base type.","","","Returns a list of valid tags and versions for this type.","","","","","","","","","An entry in the FOT.","","","","","","","","An atomic invariant pointer. Allows reading through an …","The raw invariant pointer, containing just a 64-bit packed …","","","","","","","Construct an InvPtr from an FOT entry and an offset.","Construct an InvPtr from an FOT entry and an offset.","Get a reference to the inner raw 64 bits of the invariant …","","","Check if an invariant pointer is null.","Check if an invariant pointer is null.","Check if an invariant pointer is null.","Construct a null raw pointer.","Construct a null raw pointer.","Read the invariant pointer into its raw parts.","Read the invariant pointer into its raw parts.","Read the invariant pointer into its raw parts.","Get a reference to the inner raw 64 bits of the invariant …","","","","","","","A slot for an object in active memory. All unique …","","","","","Get a slot for an object and protections combo.","Get a mutable pointer to one of the slot’s object’s …","Get the ID of the object in this slot.","","Get the protections of this slot.","Perform a raw load-effective-address for an offset into a …","Perform a raw load-effective-address for an offset into a …","Get the slot number of this slot.","","","","Get the vaddr of this slot’s object’s meta page.","Get the vaddr of this slot’s object’s null page.","Get the vaddr of this slot’s object base."],"i":[1,0,0,2,1,3,3,3,0,0,0,0,3,3,0,2,2,4,2,5,5,6,6,6,4,2,4,2,4,2,4,2,4,2,4,2,4,2,7,6,1,4,3,5,2,7,6,1,4,3,5,2,6,1,4,3,5,2,6,1,4,3,5,2,4,5,2,4,2,4,2,6,6,4,2,4,2,4,5,2,4,2,1,4,4,4,4,4,3,5,5,5,5,2,2,2,2,2,7,6,6,1,4,3,3,5,5,2,4,2,4,2,4,2,4,2,6,4,5,2,6,6,4,2,4,2,4,2,7,6,1,4,3,5,2,4,2,4,2,7,0,0,6,6,6,6,6,6,6,4,5,2,7,5,5,4,2,4,5,2,0,6,6,4,2,4,2,0,6,5,7,4,2,4,2,4,2,7,6,1,4,3,5,2,5,4,2,6,7,6,1,4,3,5,2,7,6,1,4,3,5,2,7,6,1,4,3,5,2,4,2,8,9,0,0,0,0,10,11,10,11,10,11,10,11,10,11,10,11,12,10,11,12,10,11,10,11,10,11,10,11,0,13,13,13,13,13,13,13,0,0,14,15,14,15,14,15,14,15,15,14,15,14,15,14,14,15,14,15,14,14,14,15,14,15,14,15,0,16,16,16,16,0,16,16,16,16,16,16,16,16,16,16,16,16,16],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[],["protections",3]],[[],["objid",3]],[[],["u128",15]],[[],[["baseerror",4],["result",4,["baseerror"]]]],[[]],[[]],[[]],[[["protections",3]],["protections",3]],[[]],[[["protections",3]]],[[["objectinitflags",3]]],[[["protections",3]],["protections",3]],[[]],[[["protections",3]]],[[],["u32",15]],[[],["u32",15]],[[]],[[["protections",3]],["protections",3]],[[]],[[["protections",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["createerror",4]],[[],["objectinitflags",3]],[[],["objectiniterror",4]],[[],["objid",3]],[[],["protections",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[["objectinitflags",3]],["ordering",4]],[[["objid",3]],["ordering",4]],[[["protections",3]],["ordering",4]],[[]],[[],["protections",3]],[[],["bool",15]],[[["protections",3]],["bool",15]],[[["createspec",3]],[["createerror",4],["result",4,["createerror"]]]],[[["createspec",3]],[["createerror",4],["result",4,["createerror"]]]],[[]],[[["protections",3]],["protections",3]],[[]],[[],["protections",3]],[[["objectinitflags",3]],["bool",15]],[[["objid",3]],["bool",15]],[[["protections",3]],["bool",15]],[[["intoiterator",8]]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[]],[[["slot",3],["arc",3,["slot"]]]],[[]],[[]],[[]],[[["objectmaperror",4]]],[[]],[[["u128",15]],["objid",3]],[[]],[[]],[[["u32",15]],["option",4]],[[["u32",15]],[["protections",3],["option",4,["protections"]]]],[[["u32",15]]],[[["u32",15]],["protections",3]],[[["u32",15]]],[[["u32",15]],["protections",3]],[[["intoiterator",8]]],[[],["protections",3]],[[["usize",15]]],[[]],[[]],[[]],[[],["objid",3]],[[["protections",3],["objectinitflags",3],["objid",3]],[["objectiniterror",4],["result",4,["objectiniterror"]]]],[[]],[[["protections",3]]],[[]],[[["protections",3]],["protections",3]],[[],["bool",15]],[[["protections",3]],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["objid",3]]],null,null,[[],[["metainfo",3],["nonnull",3,["metainfo"]]]],[[],["metaflags",3]],[[],["objid",3]],[[],["nonce",3]],[[],["basetag",3]],[[],["baseversion",3]],[[],[["nonnull",3,["metaext"]],["metaext",3]]],[[["objectinitflags",3]],["bool",15]],[[["objid",3]],["bool",15]],[[["protections",3]],["bool",15]],[[["lifetimetype",4],["backingtype",4]]],[[["u128",15]],["objid",3]],[[["u64",15]],["objid",3]],[[]],[[],["protections",3]],[[["objectinitflags",3]],[["option",4,["ordering"]],["ordering",4]]],[[["objid",3]],[["ordering",4],["option",4,["ordering"]]]],[[["protections",3]],[["ordering",4],["option",4,["ordering"]]]],null,[[["usize",15]]],[[["usize",15]]],[[]],[[["protections",3]]],[[["bool",15]]],[[["bool",15],["protections",3]]],null,[[],["arc",3]],[[]],[[["objectsource",3]]],[[]],[[["protections",3]],["protections",3]],[[]],[[["protections",3]]],[[]],[[["protections",3]],["protections",3]],[[["object",3],["createtieflags",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[["protections",3]]],[[],["object",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[["protections",3]],["protections",3]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["baseversion",3]],[[],["basetag",3]],[[]],[[]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15],["u64",15]]],[[["usize",15],["u64",15]]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[]],[[]],[[["protections",3],["objid",3]],[["objectiniterror",4],["result",4,["arc","objectiniterror"]],["arc",3,["slot"]]]],[[["usize",15]]],[[],["objid",3]],[[]],[[],["protections",3]],[[["usize",15]]],[[["usize",15]]],[[],["usize",15]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]]],"p":[[4,"CreateError"],[3,"Protections"],[4,"ObjectInitError"],[3,"ObjectInitFlags"],[3,"ObjID"],[3,"Object"],[3,"CreateSpec"],[13,"Create"],[13,"Init"],[3,"BaseVersion"],[3,"BaseTag"],[8,"BaseType"],[3,"FotEntry"],[3,"InvPtr"],[3,"AtomicInvPtr"],[3,"Slot"]]},\
"twizzler_queue":{"doc":"Provides a duplex send/completion queue, where each …","t":[3,18,18,3,3,4,3,3,3,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["CallbackQueueReceiver","NON_BLOCK","NON_BLOCK","Queue","QueueBase","QueueError","QueueSender","ReceiveFlags","SubmissionFlags","Unknown","WouldBlock","all","all","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","cmp","complement","complement","complete","complete","contains","contains","create","difference","difference","empty","empty","eq","eq","eq","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","get_completion","handle","hash","hash","init","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","is_all","is_all","is_empty","is_empty","ne","ne","new","new","not","not","object","partial_cmp","partial_cmp","partial_cmp","receive","receive","remove","remove","set","set","setup_read_com_sleep","setup_read_sub_sleep","setup_write_com_sleep","setup_write_sub_sleep","sub","sub","sub_assign","sub_assign","submit","submit_and_wait","submit_no_wait","symmetric_difference","symmetric_difference","tags","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union"],"q":["twizzler_queued":["A receiver-side async-enabled queue abstraction.","If the request would block, return Err([…","If the request would block, return Err([…","A single queue, holding two subqueues (sending and …","The base info structure stored in a Twizzler queue object. …","Possible errors for submitting to a queue.","An async-supported sending-half of a Queue. This is to …","Flags to control how queue receive works.","Flags to control how queue submission works.","An unknown error.","The operation would have blocked, and non-blocking …","Returns the set containing all flags.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Send a completion back to the sender.","Submit a completion item of type C across the completion …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Create a new Twizzler queue object.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","Receive a completion item and id from the completion …","Handle a request in a closure that returns a completion.","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","","","","","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","","","Create a new CallbackQueueReceiver from a Queue.","Build a new QueueSender from a Queue.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Get a handle to the internal object that holds the queue …","","","","Receive a request without immediately returning a …","Receive an item and request id from the sending subqueue.","Removes the specified flags in-place.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Setup a sleep operation for reading the completion …","Setup a sleep operation for reading the sending subqueue.","Setup a sleep operation for writing the completion …","Setup a sleep operation for writing the sending subqueue.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Submit an item of type S across the sending subqueue, with …","Submit an item and await a completion.","Submit a request and don’t wait for a response. WARNING: …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>."],"i":[0,1,2,0,0,0,0,0,0,3,3,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,4,5,6,7,1,2,3,4,5,6,7,1,2,3,1,2,3,1,2,3,1,2,3,1,2,4,5,1,2,5,1,2,1,2,1,2,3,1,2,1,1,1,1,1,2,2,2,2,2,3,4,5,5,6,7,1,2,3,1,2,1,2,1,2,1,2,5,4,1,2,6,1,2,1,2,1,2,4,5,6,7,1,2,3,1,2,1,2,1,2,4,7,1,2,5,1,2,3,4,5,1,2,1,2,5,5,5,5,1,2,1,2,5,7,7,1,2,6,1,2,3,1,2,4,5,6,7,1,2,3,4,5,6,7,1,2,3,4,5,6,7,1,2,3,1,2],"f":[null,null,null,null,null,null,null,null,null,null,null,[[],["submissionflags",3]],[[],["receiveflags",3]],[[["submissionflags",3]],["submissionflags",3]],[[["receiveflags",3]],["receiveflags",3]],[[["submissionflags",3]]],[[["receiveflags",3]]],[[["submissionflags",3]],["submissionflags",3]],[[["receiveflags",3]],["receiveflags",3]],[[["submissionflags",3]]],[[["receiveflags",3]]],[[],["u32",15]],[[],["u32",15]],[[["submissionflags",3]],["submissionflags",3]],[[["receiveflags",3]],["receiveflags",3]],[[["submissionflags",3]]],[[["receiveflags",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["submissionflags",3]],[[],["receiveflags",3]],[[],["queueerror",4]],[[]],[[]],[[]],[[["submissionflags",3]],["ordering",4]],[[["receiveflags",3]],["ordering",4]],[[["queueerror",4]],["ordering",4]],[[],["submissionflags",3]],[[],["receiveflags",3]],[[["u32",15]]],[[["u32",15],["submissionflags",3]],[["result",4,["queueerror"]],["queueerror",4]]],[[["submissionflags",3]],["bool",15]],[[["receiveflags",3]],["bool",15]],[[["usize",15],["createspec",3]],[["result",4,["createerror"]],["createerror",4]]],[[["submissionflags",3]],["submissionflags",3]],[[["receiveflags",3]],["receiveflags",3]],[[],["submissionflags",3]],[[],["receiveflags",3]],[[["submissionflags",3]],["bool",15]],[[["receiveflags",3]],["bool",15]],[[["queueerror",4]],["bool",15]],[[]],[[]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[]],[[["queuebase",3],["object",3,["queuebase"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u32",15]],[["submissionflags",3],["option",4,["submissionflags"]]]],[[["u32",15]],[["receiveflags",3],["option",4,["receiveflags"]]]],[[["u32",15]],["submissionflags",3]],[[["u32",15]],["receiveflags",3]],[[["u32",15]],["submissionflags",3]],[[["u32",15]],["receiveflags",3]],[[],["submissionflags",3]],[[],["receiveflags",3]],[[["receiveflags",3]],[["queueerror",4],["result",4,["queueerror"]]]],[[]],[[]],[[]],[[]],[[["submissionflags",3]]],[[["receiveflags",3]]],[[["submissionflags",3]],["submissionflags",3]],[[["receiveflags",3]],["receiveflags",3]],[[["submissionflags",3]],["bool",15]],[[["receiveflags",3]],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["submissionflags",3]],["bool",15]],[[["receiveflags",3]],["bool",15]],[[["queue",3]]],[[["queue",3]]],[[],["submissionflags",3]],[[],["receiveflags",3]],[[],["object",3]],[[["submissionflags",3]],[["ordering",4],["option",4,["ordering"]]]],[[["receiveflags",3]],[["ordering",4],["option",4,["ordering"]]]],[[["queueerror",4]],[["ordering",4],["option",4,["ordering"]]]],[[]],[[["receiveflags",3]],[["result",4,["queueerror"]],["queueerror",4]]],[[["submissionflags",3]]],[[["receiveflags",3]]],[[["bool",15],["submissionflags",3]]],[[["receiveflags",3],["bool",15]]],[[],["threadsyncsleep",3]],[[],["threadsyncsleep",3]],[[],["threadsyncsleep",3]],[[],["threadsyncsleep",3]],[[["submissionflags",3]],["submissionflags",3]],[[["receiveflags",3]],["receiveflags",3]],[[["submissionflags",3]]],[[["receiveflags",3]]],[[["u32",15],["submissionflags",3]],[["result",4,["queueerror"]],["queueerror",4]]],[[]],[[["submissionflags",3]]],[[["submissionflags",3]],["submissionflags",3]],[[["receiveflags",3]],["receiveflags",3]],[[]],[[]],[[]],[[]],[[["submissionflags",3]]],[[["receiveflags",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["submissionflags",3]],["submissionflags",3]],[[["receiveflags",3]],["receiveflags",3]]],"p":[[3,"SubmissionFlags"],[3,"ReceiveFlags"],[4,"QueueError"],[3,"CallbackQueueReceiver"],[3,"Queue"],[3,"QueueBase"],[3,"QueueSender"]]},\
"twizzler_queue_raw":{"doc":"A raw queue interface for Twizzler, making no assumptions …","t":[18,18,3,4,3,3,3,3,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["NON_BLOCK","NON_BLOCK","QueueEntry","QueueError","RawQueue","RawQueueHdr","ReceiveFlags","SubmissionFlags","Unknown","WouldBlock","all","all","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","complement","complement","contains","contains","default","difference","difference","empty","empty","eq","eq","eq","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","hash","hash","info","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into","is_all","is_all","is_empty","is_empty","item","multi_receive","ne","ne","new","new","new","not","not","partial_cmp","partial_cmp","partial_cmp","receive","remove","remove","set","set","setup_send_sleep_simple","setup_sleep","setup_sleep_simple","sub","sub","sub_assign","sub_assign","submit","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","union","union"],"q":["twizzler_queue_raw","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["If the request would block, return Err([…","If the request would block, return Err([…","A queue entry. All queues must be formed of these, as the …","Possible errors for submitting to a queue.","A raw queue, comprising of a header to track the algorithm …","A raw queue header. This contains all the necessary …","Flags to control how queue receive works.","Flags to control how queue submission works.","An unknown error.","The operation would have blocked, and non-blocking …","Returns the set containing all flags.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","Get the info tag of a QueueEntry.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","","","","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Get the data item of a QueueEntry.","Wait for receiving on multiple raw queues. If any of the …","","","Construct a new raw queue header.","Construct a new raw queue out of a header reference and a …","Construct a new QueueEntry. The <code>info</code> tag should be used to …","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","Receive data from the queue, returning either that data or …","Removes the specified flags in-place.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","","","","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Submit a data item of type T, wrapped in a QueueEntry, to …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>."],"i":[1,2,0,0,0,0,0,0,3,3,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,4,5,6,1,2,3,4,5,6,1,2,3,6,1,2,3,6,1,2,3,1,2,3,1,2,1,2,6,1,2,1,2,1,2,3,1,2,6,1,1,1,1,1,2,2,2,2,2,3,4,5,6,1,2,3,1,2,1,2,1,2,1,2,1,2,6,1,2,1,2,1,2,4,5,6,1,2,3,1,2,1,2,6,0,1,2,4,5,6,1,2,1,2,3,5,1,2,1,2,5,5,5,1,2,1,2,5,1,2,6,1,2,3,1,2,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,1,2],"f":[null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[["submissionflags",3]]],[[["receiveflags",3]]],[[]],[[]],[[],["u32",15]],[[],["u32",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["queueentry",3]],[[],["submissionflags",3]],[[],["receiveflags",3]],[[],["queueerror",4]],[[]],[[]],[[]],[[]],[[["submissionflags",3]],["ordering",4]],[[["receiveflags",3]],["ordering",4]],[[["queueerror",4]],["ordering",4]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["queueentry",3]],[[]],[[]],[[]],[[]],[[["submissionflags",3]],["bool",15]],[[["receiveflags",3]],["bool",15]],[[["queueerror",4]],["bool",15]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u32",15]],["option",4]],[[["u32",15]],["option",4]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[]],[[]],[[],["u32",15]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[["fn",8],["fn",8],["receiveflags",3]],[["result",4,["usize","queueerror"]],["usize",15],["queueerror",4]]],[[["submissionflags",3]],["bool",15]],[[["receiveflags",3]],["bool",15]],[[["usize",15]]],[[]],[[["u32",15]]],[[]],[[]],[[["submissionflags",3]],[["option",4,["ordering"]],["ordering",4]]],[[["receiveflags",3]],[["option",4,["ordering"]],["ordering",4]]],[[["queueerror",4]],[["option",4,["ordering"]],["ordering",4]]],[[["fn",8],["receiveflags",3],["fn",8]],[["result",4,["queueentry","queueerror"]],["queueentry",3],["queueerror",4]]],[[]],[[]],[[["bool",15]]],[[["bool",15]]],[[]],[[["option",4],["option",4],["bool",15]],[["result",4,["queueerror"]],["queueerror",4]]],[[]],[[]],[[]],[[]],[[]],[[["fn",8],["submissionflags",3],["fn",8],["queueentry",3]],[["result",4,["queueerror"]],["queueerror",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]]],"p":[[3,"SubmissionFlags"],[3,"ReceiveFlags"],[4,"QueueError"],[3,"RawQueueHdr"],[3,"RawQueue"],[3,"QueueEntry"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};