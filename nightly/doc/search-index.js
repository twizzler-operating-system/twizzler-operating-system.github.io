var searchIndex = JSON.parse('{\
"dynlink":{"doc":"Welcome to the dynamic linker.","t":"NNEINNNNLLAAKLLLLLLLLLLALAALLLLMMMDGLLLLLLLLLLLDLLLLLLLLLLLLDIGLLKLLLLLLKLLLLDDSSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLL","n":["AlreadyExists","Collection","DynlinkError","ECollector","NotFound","Other","ParseError","Unknown","borrow","borrow_mut","compartment","context","ecollect","fmt","fmt","from","from","from","from","from","from","from_iter","into","library","source","symbol","tls","to_string","try_from","try_into","type_id","err","name","name","Compartment","CompartmentRef","borrow","borrow_mut","build_tls_region","fmt","fmt","from","into","to_string","try_from","try_into","type_id","Context","add_compartment","add_library","borrow","borrow_mut","default","from","into","lookup_symbol","relocate_all","try_from","try_into","type_id","Library","LibraryLoader","LibraryRef","borrow","borrow_mut","create_segments","fmt","fmt","from","get_elf","into","new","open","to_string","try_from","try_into","type_id","LookupFlags","RelocatedSymbol","SKIP_DEPS","SKIP_GLOBAL","SKIP_SELF","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","complement","contains","difference","empty","extend","fmt","fmt","fmt","fmt","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_iter","from_name","insert","intersection","intersects","into","into","into_iter","is_all","is_empty","iter","iter_names","not","raw_value","reloc_value","remove","set","size","sub","sub_assign","symmetric_difference","to_owned","toggle","try_from","try_from","try_into","try_into","type_id","type_id","union","TlsRegion","borrow","borrow_mut","drop","fmt","from","into","try_from","try_into","type_id"],"q":[[0,"dynlink"],[31,"dynlink::DynlinkError"],[34,"dynlink::compartment"],[47,"dynlink::context"],[60,"dynlink::library"],[77,"dynlink::symbol"],[142,"dynlink::tls"],[152,"core::result"],[153,"core::iter::traits::collect"],[154,"core::fmt"],[155,"core::fmt"],[156,"elf::parse"],[157,"anyhow"],[158,"alloc::vec"],[159,"core::iter::traits::collect"],[160,"core::option"],[161,"alloc::string"],[162,"core::any"],[163,"alloc::string"],[164,"twizzler_object::object"],[165,"elf::endian"],[166,"elf::elf_bytes"],[167,"bitflags::iter"],[168,"bitflags::iter"]],"d":["Tried to add a name that was already present to the …","A collection of errors.","The main error type for dynlink.","A collector trait that lets us combine multiple …","Identifier lookup of name failed.","Any other error.","Failed to parse ELF data.","Unknown error.","","","Compartments are an abstraction for isolation of library …","Management of global context.","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Management of individual libraries.","","Definitions for symbols in the dynamic linker.","Implements ELF TLS Variant II. I highly recommend reading …","","","","","","","","","","","","Build a useable TLS region, complete with copied …","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","Create a new compartment with a given name.","Add an unloaded library to the context (and load it)","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Lookup a given symbol within the context.","Iterate through all libraries and process relocations for …","","","","","","Arc type for libraries.","","","","","","Returns the argument unchanged.","Return a handle to the full ELF file.","Calls <code>U::from(self)</code>.","","","","","","","Options for use during symbol lookup. If all of these …","A (relocated) symbol. Contains information about the …","Don’t look through dependencies, go straight to global …","Don’t do a global search.","Look elsewhere first. Note that the symbol may still bind …","Get a flags value with all known bits set.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained named flags values.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Returns the raw symbol value (unrelocated).","Returns the relocated address of the symbol, i.e. the …","The intersection of a source flags value with the …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Returns the symbol’s size.","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","",""],"i":[1,1,0,0,1,1,1,1,1,1,0,0,38,1,1,1,1,1,1,1,1,1,1,0,1,0,0,1,1,1,1,39,40,41,0,0,17,17,17,17,17,17,17,17,17,17,17,0,18,18,18,18,18,18,18,18,18,18,18,18,0,0,0,20,20,22,20,20,20,20,20,20,22,20,20,20,20,0,0,24,24,24,24,24,24,24,24,24,24,24,24,25,24,25,24,24,24,24,24,24,24,24,24,24,24,24,25,24,24,24,24,24,24,24,24,24,24,25,24,24,24,24,24,24,24,25,25,24,24,25,24,24,24,24,24,25,24,25,24,25,24,24,0,16,16,16,16,16,16,16,16,16],"f":[0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,[[2,[-3,1]]],[],[],[[3,[-2]]]],[[1,4],5],[[1,4],5],[-1,-1,[]],[[[6,[-1]]],1,[]],[7,1],[8,1],[[[9,[8]]],1],[[[9,[1]]],1],[-1,1,10],[-1,-2,[],[]],0,[1,[[12,[11]]]],0,0,[-1,13,[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,14,[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[15,-1],[[2,[16,1]]],[]],[[17,4],5],[[17,4],5],[-1,-1,[]],[-1,-2,[],[]],[-1,13,[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,14,[]],0,[[18,-1],[[2,[15,1]]],19],[[18,15,20,-1],[[2,[21,1]]],22],[-1,-2,[],[]],[-1,-2,[],[]],[[],18],[-1,-1,[]],[-1,-2,[],[]],[[18,21,23,24],[[2,[25,1]]]],[[18,-1],[[2,[[9,[21]],1]]],10],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,14,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[-1,[27,[26]],[27,[26]]],[[2,[[30,[[29,[28]],[29,[28]]]],1]]],[]],[[20,4],5],[[20,4],5],[-1,-1,[]],[20,[[2,[[32,[31]],7]]]],[-1,-2,[],[]],[[[29,[28]],-1],20,19],[[-1,23],[[2,[[29,[28]],1]]],[]],[-1,13,[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,14,[]],0,0,0,0,0,[[],24],[[24,24],24],[[24,24],30],[[24,24],24],[[24,24],30],[24,33],[24,33],[[24,24],24],[[24,24],30],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[24,24],[[-1,-2],30,[],[]],[24,24],[[24,24],34],[[24,24],24],[[],24],[[24,-1],30,10],[[24,4],5],[[24,4],5],[[24,4],5],[[24,4],5],[-1,-1,[]],[-1,-1,[]],[33,[[12,[24]]]],[33,24],[33,24],[33,24],[-1,24,10],[23,[[12,[24]]]],[[24,24],30],[[24,24],24],[[24,24],34],[-1,-2,[],[]],[-1,-2,[],[]],[24],[24,34],[24,34],[24,[[35,[24]]]],[24,[[36,[24]]]],[24,24],[25,37],[25,37],[[24,24],30],[[24,24,34],30],[25,37],[[24,24],24],[[24,24],30],[[24,24],24],[-1,-2,[],[]],[[24,24],30],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,14,[]],[-1,14,[]],[[24,24],24],0,[-1,-2,[],[]],[-1,-2,[],[]],[16,30],[[16,4],5],[-1,-1,[]],[-1,-2,[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,14,[]]],"c":[],"p":[[4,"DynlinkError",0],[4,"Result",152],[8,"FromIterator",153],[3,"Formatter",154],[6,"Result",154],[3,"PoisonError",155],[4,"ParseError",156],[3,"Error",157],[3,"Vec",158],[8,"IntoIterator",153],[8,"Error",159],[4,"Option",160],[3,"String",161],[3,"TypeId",162],[6,"CompartmentRef",34],[3,"TlsRegion",142],[3,"Compartment",34],[3,"Context",47],[8,"ToString",161],[3,"Library",60],[6,"LibraryRef",60],[8,"LibraryLoader",60],[15,"str"],[3,"LookupFlags",77],[3,"RelocatedSymbol",77],[3,"ObjectSource",163],[15,"slice"],[15,"u8"],[3,"Object",164],[15,"tuple"],[6,"NativeEndian",165],[3,"ElfBytes",166],[15,"u32"],[15,"bool"],[3,"Iter",167],[3,"IterNames",167],[15,"u64"],[8,"ECollector",0],[13,"ParseError",31],[13,"NotFound",31],[13,"AlreadyExists",31]]},\
"nvme":{"doc":"","t":"AAAAANDDNDENNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLGDGDDDDLLLLLLLLLLLLLLLLLLLLALLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLALLLLLLAAALLLLLLLLLLLLLLLLLLLLANNNELALLLLLLLLNENNNNNNNNNNNNNNNNNNNNNNNNNNNNNLLALLLLLNNNNNNNENNNNNNNNNNNNNNNNNNNNNNNNNNNLLLLLLLLLDLLLLLLLLLLALLLDMMMAMMMLLAMAMMLMMLMMMMMMMMMMMMMMMAMLLLMLLDLLLLLLLLLLLLLLLLLLLLLLLLLNDENNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNEDENNNNENNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDNNNELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAAANEDENDNNDDDDNDDDDDDDMLLMMLLLLMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLMMMMLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLMLLMMLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLMLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMMMMMMMLLMLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLMLLLLLLMLLLLLLMMLLLLLLLLLLLLLLMMMMMMMMMLLMLLLLLLMLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLMMLLMMLLLLNNNDNDDDELLLLLLLLLLMLLLLLLLLLLLLLLLLLLLMLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMNNENDDNLLLLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSDNNNDEDNLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDENNENNNENNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLDLLLLLLLLLLLLLAEQNEINENNNDNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLEEDNDDNNNNNNNNNENNNDDNNNDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDENNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["admin","ds","hosted","nvm","queue","ActiveNamespaceIdList","CreateIOCompletionQueue","CreateIOSubmissionQueue","IOCommandSetSpecificIdentifyNamespace","Identify","IdentifyCNSValue","IdentifyController","IdentifyNamespace","NamespaceIdentificationDescriptorList","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cns_value","cntid_value","csi_value","from","from","from","from","into","into","into","into","new","new","new","nsid","specific_id_value","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","Address","HalfSeconds","InterruptVector","Microseconds","Minutes","OneHundredMilliseconds","Seconds","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmd","cmp","cmp","cmp","cmp","cmp","controller","default","default","default","default","default","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bytes","from_bytes","hash","hash","hash","hash","hash","identify","into","into","into","into","into","into_bytes","into_bytes","namespace","new","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","queue","sgl","status","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","uuid","Buffer","PrpFirstAndList","PrpList","PrpListOrBuffer","address","admin","borrow","borrow_mut","from","into","is_list","try_from","try_into","type_id","Abort","AdminCommand","AsyncEventRequest","CapacityManagement","CreateCompletionQueue","CreateSubmissionQueue","DeleteCompletionQueue","DeleteSubmissionQueue","DeviceSelfTest","DirectiveReceive","DirectiveSend","DoorbellBufferConfig","FabricsCommands","FirmwareCommit","FirmwareImageDownload","FormatNVM","GetFeatures","GetLBAStatus","GetLogPage","Identify","KeepAlive","Lockdown","NVMeMIReceive","NVMeMISend","NamespaceAttachment","NamespaceManagement","Sanitize","SecurityReceive","SecuritySend","SetFeatures","VirtualizationManagement","borrow","borrow_mut","features","from","into","try_from","try_into","type_id","Arbitration","AsyncEventConfig","AutonomousPowerStateTransition","ControllerMetadata","EnduranceGroupEventConfig","EnhancedControllerMetadata","ErrorRecovery","FeatureId","HostBehaviorSupport","HostControlledThermalManagement","HostIdentifier","HostMemoryBuffer","IOCommandSetProfile","InterruptCoalescing","InterruptVectorConfig","KeepAliveTimer","LBARangeType","LBAStatusInfoReportInterval","NamespaceMetadata","NamespaceWriteProtectionConfig","NonOperationalPowerStateConfig","NumberOfQueues","PowerManagement","PredictableLatencyModeConfig","PredictableLatencyModeWindow","ReadRecoveryLevelConfig","ReservationNotificationMask","ReservationPersistence","SanitizeConfig","SoftwareProgressMarker","SpinupControl","TemperatureThreshold","Timestamp","VolatileWriteCache","WriteAtomicityNormal","borrow","borrow_mut","from","from_bytes","into","into_bytes","try_from","try_into","type_id","ControllerId","borrow","borrow_mut","from","from","from_bytes","from_bytes","into","into_bytes","into_bytes","new","properties","try_from","try_into","type_id","ControllerProperties","admin_comqueue_base_addr","admin_queue_attr","admin_subqueue_base_addr","aqa","boot_partition_info","boot_partition_memory_buffer_location","boot_partition_read_select","borrow","borrow_mut","capabilities","capabilities","config","configuration","controller_ready_timeouts","from","int_mask_clear","int_mask_set","into","memory_buffer_elasticity_buffer_size","memory_buffer_location","memory_buffer_memory_space_control","memory_buffer_size","memory_buffer_status","memory_buffer_sustained_write_throughput","nvm_subsystem_reset","nvm_subsystem_shutdown","pmem_capabilities","pmem_region_control","pmem_region_controller_mem_space_control_lower","pmem_region_controller_mem_space_control_upper","pmem_region_elasticity_buffer_size","pmem_region_status","pmem_region_sustained_write_throughput","status","status","try_from","try_into","type_id","version","version_maj","version_min","AdminQueueAttributes","borrow","borrow_mut","clone","clone_into","completion_queue_size","completion_queue_size_or_err","from","from_bytes","into","into_bytes","new","set_completion_queue_size","set_completion_queue_size_checked","set_submission_queue_size","set_submission_queue_size_checked","submission_queue_size","submission_queue_size_or_err","to_owned","try_from","try_into","type_id","with_completion_queue_size","with_completion_queue_size_checked","with_submission_queue_size","with_submission_queue_size_checked","Controller","ControllerCap","ControllerPowerScope","Domain","NVMSubSystem","NotReported","arbitration_urgent_with_wrr","arbitration_vendor_specific","boot_partition_supported","boot_partition_supported_or_err","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","contiguous_queues_required","contiguous_queues_required_or_err","controller_mem_buffer_supported","controller_mem_buffer_supported_or_err","controller_power_scope","controller_power_scope_or_err","controller_ready_independent_of_media_support","controller_ready_modes_supported","controller_ready_modes_supported_or_err","controller_ready_with_media_support","doorbell_stride","doorbell_stride_bytes","doorbell_stride_or_err","from","from","from","from_bytes","from_bytes","into","into","into_bytes","into_bytes","max_queue_entries","max_queue_entries_or_err","memory_page_sz_max","memory_page_sz_max_bytes","memory_page_sz_max_or_err","memory_page_sz_min","memory_page_sz_min_bytes","memory_page_sz_min_or_err","new","nvm_subsystem_reset_supported","nvm_subsystem_reset_supported_or_err","nvm_subsystem_shutdown_supported","nvm_subsystem_shutdown_supported_or_err","persistent_mem_region_supported","persistent_mem_region_supported_or_err","supports_more_io_command_sets","supports_nvm_command_set","timeout","timeout_or_err","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","AbruptShutdown","AdminOnly","AllSupported","ArbitrationMechanism","ControllerConfig","IOCommandSet","NVMCommandSet","NoNotification","NormalShutdown","RoundRobin","ShutdownNotification","VendorSpecific","WeightedRoundRobinWithUrgent","arbitration_mechanism","arbitration_mechanism_or_err","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","controller_ready_independent_of_media_enable","controller_ready_independent_of_media_enable_or_err","enable","enable_or_err","fmt","fmt","fmt","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","into","into","into","into","into_bytes","into_bytes","into_bytes","into_bytes","io_command_set_selected","io_command_set_selected_or_err","io_completion_queue_entry_size","io_completion_queue_entry_size_or_err","io_submission_queue_entry_size","io_submission_queue_entry_size_or_err","mem_page_size","mem_page_size_or_err","new","set_arbitration_mechanism","set_arbitration_mechanism_checked","set_controller_ready_independent_of_media_enable","set_controller_ready_independent_of_media_enable_checked","set_enable","set_enable_checked","set_io_command_set_selected","set_io_command_set_selected_checked","set_io_completion_queue_entry_size","set_io_completion_queue_entry_size_checked","set_io_submission_queue_entry_size","set_io_submission_queue_entry_size_checked","set_mem_page_size","set_mem_page_size_checked","set_shutdown_notification","set_shutdown_notification_checked","shutdown_notification","shutdown_notification_or_err","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","with_arbitration_mechanism","with_arbitration_mechanism_checked","with_controller_ready_independent_of_media_enable","with_controller_ready_independent_of_media_enable_checked","with_enable","with_enable_checked","with_io_command_set_selected","with_io_command_set_selected_checked","with_io_completion_queue_entry_size","with_io_completion_queue_entry_size_checked","with_io_submission_queue_entry_size","with_io_submission_queue_entry_size_checked","with_mem_page_size","with_mem_page_size_checked","with_shutdown_notification","with_shutdown_notification_checked","ControllerStatus","NormalOperation","ShutdownProcessingComplete","ShutdownProcessingOccurring","ShutdownStatus","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","fatal_status","fatal_status_or_err","fmt","from","from","from","from_bytes","from_bytes","into","into","into_bytes","into_bytes","new","nvm_subsystem_reset_occurred","nvm_subsystem_reset_occurred_or_err","processing_paused","processing_paused_or_err","ready","ready_or_err","shutdown_status","shutdown_status_or_err","shutdown_type_is_nvm_subsystem","shutdown_type_is_nvm_subsystem_or_err","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","controller","namespace","ns_desc_list","AdministrativeController","AuthMethod","ControllerAttributes","ControllerType","DiscoveryController","FirmwareUpdates","HmacSha256","IOController","IdentifyControllerDataStructure","LogPageAttributes","ManagementEndpointCapabilities","MultipathIONamespaceSharingCaps","NotReported","NvmSubsystemReport","OptionalAdminCommandSupport","OptionalAsyncEventsSupported","ReadRecoveryLevelsSupported","ReplayProtectedMemoryBlockSupport","SanitizeCapabilities","VPDWriteCycleInfo","abort_command_limit","access_size","access_size_or_err","admin_vendor_specific_command_config","ana_transition_time","asym_namespace_access_change","asym_namespace_access_change_or_err","asym_namespace_access_reporting","asym_namespace_access_reporting_or_err","async_event_request_limit","auth_method","auth_method_or_err","autonomous_power_state_transition_attributes","block_erase","block_erase_or_err","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","command_and_feature_lockdown","command_and_feature_lockdown_or_err","command_retry_delay_time_1","command_retry_delay_time_2","command_retry_delay_time_3","commands_supported_and_effects","commands_supported_and_effects_or_err","controller_attributes","controller_id","controller_type","critical_composite_temp_threshold","crypto_erase","crypto_erase_or_err","data_area_4","data_area_4_or_err","default","default","default","default","default","default","default","default","default","default","default","default","default","delete_endurance_group","delete_endurance_group_or_err","delete_nvm_set","delete_nvm_set_or_err","device_self_test","device_self_test_options","device_self_test_or_err","directives","directives_or_err","discovery_log_page_change","discovery_log_page_change_or_err","doorbell_buffer_config","doorbell_buffer_config_or_err","endurance_group_event_aggregate_log","endurance_group_event_aggregate_log_or_err","endurance_group_ident_maximum","endurance_groups","endurance_groups_or_err","error_log_page_entries","extended_device_self_test_time","extended_lba_formats_supported","extended_lba_formats_supported_or_err","firmware_activation_notices","firmware_activation_notices_or_err","firmware_activation_without_reset","firmware_activation_without_reset_or_err","firmware_download_and_commit","firmware_download_and_commit_or_err","firmware_revision","firmware_updates","firmware_upgrade_granularity","first_firmware_slot_readonly","first_firmware_slot_readonly_or_err","fixed_domain_capacity_management","fixed_domain_capacity_management_or_err","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format_nvm","format_nvm_or_err","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","fru_globally_unique_identifier","get_lba_status","get_lba_status_or_err","get_log_page","get_log_page_or_err","host_controlled_thermal_management_attributes","host_id","host_id_or_err","host_memory_buffer_max_desc_entries","host_memory_buffer_min_desc_entry_size","host_memory_buffer_minimum_size","host_memory_buffer_preferred_size","ieee_oui_identifier","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_bytes","into_bytes","into_bytes","into_bytes","into_bytes","into_bytes","into_bytes","into_bytes","into_bytes","into_bytes","into_bytes","into_bytes","keep_alive_support","lba_status_info_alert","lba_status_info_alert_or_err","log_page_attributes","management_endpoint_capabilities","max_data_transfer_size","max_thermal_management_temp","max_time_for_firmware_activation","min_thermal_management_temp","model_number","multi_domain_subsystem","multi_domain_subsystem_or_err","multipath_io_and_namespace_sharing_caps","namespace_attribute_notices","namespace_attribute_notices_or_err","namespace_granularity","namespace_granularity_or_err","namespace_management","namespace_management_or_err","new","new","new","new","new","new","new","new","new","new","new","no_dealloc_inhibited","no_dealloc_inhibited_or_err","no_dealloc_mods_media","no_dealloc_mods_media_or_err","non_op_power_state_permissive_mode","non_op_power_state_permissive_mode_or_err","normal_nvm_subsystem_shutdown","normal_nvm_subsystem_shutdown_or_err","nr_power_states_support","nr_rpmb_units","nr_rpmb_units_or_err","number_of_firmware_slots","number_of_firmware_slots_or_err","nvm_set_ident_maximum","nvm_sets","nvm_sets_or_err","nvm_sub_multiple","nvm_sub_multiple_or_err","nvm_sub_two_or_more","nvm_sub_two_or_more_or_err","nvm_subsystem_report","nvme_enclosure","nvme_enclosure_or_err","nvme_mi_send_and_recv","nvme_mi_send_and_recv_or_err","nvme_storage_device","nvme_storage_device_or_err","optional_admin_command_support","optional_async_events_supported","overwrite","overwrite_or_err","pcie_management_endpoint","pcie_management_endpoint_or_err","per_namespace_smart_log","per_namespace_smart_log_or_err","persistent_event_log","persistent_event_log_or_err","predictable_latency_event_aggregate_log","predictable_latency_event_aggregate_log_or_err","predictable_latency_mode","predictable_latency_mode_or_err","read_recovery_levels","read_recovery_levels_or_err","read_recovery_levels_supported","reccommended_arbitration_burst","replay_protected_memory_block_support","res0","res1","res2","rtd3_entry_latency","rtd3_resume_latency","sanitize_capabilities","security_send_and_recv","security_send_and_recv_or_err","serial_number","smbus_port_management_endpoint","smbus_port_management_endpoint_or_err","sq_associations","sq_associations_or_err","sriov_controller","sriov_controller_or_err","subsystem_vendor_id","support_multiple_update_detection","support_multiple_update_detection_or_err","supported_effects_features_and_nvme_mi","supported_effects_features_and_nvme_mi_or_err","telemetry_host_initiated","telemetry_host_initiated_or_err","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","total_nvm_capacity","total_size","total_size_or_err","traffic_based_keep_alive","traffic_based_keep_alive_or_err","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unallocated_nvm_capacity","uuid_list","uuid_list_or_err","valid","valid_or_err","variable_capacity_management","variable_capacity_management_or_err","vendor","version","virtualization_management","virtualization_management_or_err","vpd_write_cycle_info","warning_composite_temp_threshold","write_cycles_remaining","write_cycles_remaining_or_err","zone_desc_changed_notices","zone_desc_changed_notices_or_err","Best","Better","Degraded","FormattedLbaSize","Good","IdentifyNamespaceDataStructure","LbaFormat","NamespaceFeatures","RelativePerformance","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","data_size","data_size_log2","data_size_log2_or_err","default","default","default","default","extended_block","extended_block_or_err","features","fmt","fmt","fmt","fmt","fmt","formatted_lba_size","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","index","into","into","into","into","into","into_bytes","into_bytes","into_bytes","into_bytes","lba_formats","metadata_size","metadata_size_or_err","new","new","new","opt_perf","opt_perf_or_err","relative_performance","relative_performance_or_err","size","supports_atomic_fields","supports_atomic_fields_or_err","supports_dealloc_lb_err","supports_dealloc_lb_err_or_err","supports_thin_provisioning","supports_thin_provisioning_or_err","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","uid_reuse","uid_reuse_or_err","utilization","CommandSetId","IeeeExtended","NamespaceDescriptor","NamespaceGUID","NamespaceIdentBuffer","NamespaceIdentBufferIterator","NamespaceUUID","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","from","from","from","into","into","into","into_iter","iter","next","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","NamespaceId","NamespaceList","NamespaceListIter","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default","fmt","from","from","from","into","into","into","into_iter","into_iter","new","new","next","nr_bytes","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","ADMIN","CommandId","High","Low","Medium","QueueId","QueuePriority","QueueSize","Urgent","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","comentry","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","into","into","into","into","into_bytes","into_bytes","into_bytes","into_bytes","into_bytes","into_bytes","into_bytes","new","new","new","subentry","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","CommonCompletion","StatusField","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","command_id","default","fmt","fmt","from","from","from_bytes","from_bytes","into","into","into_bytes","into_bytes","is_error","new","new_sq_head","phase","sq_id","status","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","CommandDword0","CommonCommand","Dptr","FuseFirst","FuseSecond","FuseSpec","Normal","Prp","Prp","Psdt","Sgl","Sgl","SglAndMeta","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","into","into","into","into","into","into_bytes","into_bytes","into_bytes","new","new","psdt","set_cid","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","with_cdw0","with_cdw10","with_cdw11","with_cdw12","with_cdw13","with_cdw14","with_cdw15","with_cdw2","with_cdw3","with_cid","with_dptr","with_mptr","with_nsid","SglDescriptor","borrow","borrow_mut","clone","clone_into","fmt","from","from_bytes","into","into_bytes","new","to_owned","try_from","try_into","type_id","UuidIndex","borrow","borrow_mut","from","from","from_bytes","from_bytes","into","into_bytes","into_bytes","new","try_from","try_into","type_id","memory","CacheType","DmaType","Double","DptrMode","PhysicalPageCollection","Prp","PrpMode","Sgl","Single","Uncacheable","VirtualRegion","WriteBack","WriteThrough","base","base_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","eq","eq","equivalent","equivalent","fmt","fmt","from","from","from","from","get_dptr","get_dptr","get_prp_list_or_buffer","get_prp_list_or_buffer","into","into","into","into","len","new","partial_cmp","partial_cmp","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","AccessFrequency","AccessLatency","ContextAttributes","DatasetMgmt","DatasetMgmtCommand","DatasetMgmtDword11","FrequentBoth","Idle","InfrequentBoth","InfrequentReads","InfrequentWrites","Low","NoInfo","NoInfo","Normal","NvmCommand","OneTime","OverwriteSoon","Read","ReadCommand","ReadDword13","Speculative","Typical","Write","WriteCommand","WriteDword13","access_frequency","access_frequency","access_frequency","access_frequency_or_err","access_frequency_or_err","access_frequency_or_err","access_latency","access_latency","access_latency","access_latency_or_err","access_latency_or_err","access_latency_or_err","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","command_access_size","command_access_size_or_err","default","default","default","default","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","incompressable","incompressable","incompressable_or_err","incompressable_or_err","into","into","into","into","into","into","into","into","into","into","into_bytes","into_bytes","into_bytes","into_bytes","into_bytes","into_bytes","new","new","new","new","new","new","new","seq_read_range","seq_read_range_or_err","seq_write_range","seq_write_range_or_err","sequenial","sequenial","sequenial_or_err","sequenial_or_err","set_access_frequency","set_access_frequency","set_access_frequency","set_access_frequency_checked","set_access_frequency_checked","set_access_frequency_checked","set_access_latency","set_access_latency","set_access_latency","set_access_latency_checked","set_access_latency_checked","set_access_latency_checked","set_command_access_size","set_command_access_size_checked","set_incompressable","set_incompressable","set_incompressable_checked","set_incompressable_checked","set_seq_read_range","set_seq_read_range_checked","set_seq_write_range","set_seq_write_range_checked","set_sequenial","set_sequenial","set_sequenial_checked","set_sequenial_checked","set_write_prepare","set_write_prepare_checked","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","with_access_frequency","with_access_frequency","with_access_frequency","with_access_frequency_checked","with_access_frequency_checked","with_access_frequency_checked","with_access_latency","with_access_latency","with_access_latency","with_access_latency_checked","with_access_latency_checked","with_access_latency_checked","with_command_access_size","with_command_access_size_checked","with_incompressable","with_incompressable","with_incompressable_checked","with_incompressable_checked","with_seq_read_range","with_seq_read_range_checked","with_seq_write_range","with_seq_write_range_checked","with_sequenial","with_sequenial","with_sequenial_checked","with_sequenial_checked","with_write_prepare","with_write_prepare_checked","write_prepare","write_prepare_or_err","CompletionQueue","CreateQueueError","MemoryRegionTooSmall","StrideTooSmall","SubmissionQueue","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cmp","eq","equivalent","fmt","from","from","from","get_completion","get_completion_bytes","into","into","into","is_empty","is_full","len","new","new","partial_cmp","ready","stride","stride","submit","submit_bytes","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_head"],"q":[[0,"nvme"],[5,"nvme::admin"],[50,"nvme::ds"],[155,"nvme::ds::cmd"],[169,"nvme::ds::cmd::admin"],[208,"nvme::ds::cmd::admin::features"],[252,"nvme::ds::controller"],[267,"nvme::ds::controller::properties"],[309,"nvme::ds::controller::properties::aqa"],[335,"nvme::ds::controller::properties::capabilities"],[402,"nvme::ds::controller::properties::config"],[516,"nvme::ds::controller::properties::status"],[560,"nvme::ds::identify"],[563,"nvme::ds::identify::controller"],[985,"nvme::ds::identify::namespace"],[1090,"nvme::ds::identify::ns_desc_list"],[1121,"nvme::ds::namespace"],[1156,"nvme::ds::queue"],[1227,"nvme::ds::queue::comentry"],[1263,"nvme::ds::queue::subentry"],[1358,"nvme::ds::sgl"],[1373,"nvme::ds::uuid"],[1387,"nvme::hosted"],[1388,"nvme::hosted::memory"],[1453,"nvme::nvm"],[1675,"nvme::queue"],[1722,"core::option"],[1723,"core::result"],[1724,"core::any"],[1725,"core::cmp"],[1726,"core::fmt"],[1727,"core::fmt"],[1728,"core::hash"],[1729,"modular_bitfield::error"],[1730,"core::marker"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Construct a Create IO Completion Queue request. See base …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Converts the given bytes directly into the bitfield struct.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns the underlying bits.","","Returns an instance with zero initialized data.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","Returns the argument unchanged.","","Converts the given bytes directly into the bitfield struct.","","Calls <code>U::from(self)</code>.","Returns the underlying bits.","","Returns an instance with zero initialized data.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the value of completion_queue_size.","Returns the value of completion_queue_size.","Returns the argument unchanged.","Converts the given bytes directly into the bitfield struct.","Calls <code>U::from(self)</code>.","Returns the underlying bits.","Returns an instance with zero initialized data.","Sets the value of completion_queue_size to the given value.","Sets the value of completion_queue_size to the given value.","Sets the value of submission_queue_size to the given value.","Sets the value of submission_queue_size to the given value.","Returns the value of submission_queue_size.","Returns the value of submission_queue_size.","","","","","Returns a copy of the bitfield with the value of …","Returns a copy of the bitfield with the value of …","Returns a copy of the bitfield with the value of …","Returns a copy of the bitfield with the value of …","","","","","","","","","Returns the value of boot_partition_supported.","Returns the value of boot_partition_supported.","","","","","","","","","Returns the value of contiguous_queues_required.","Returns the value of contiguous_queues_required.","Returns the value of controller_mem_buffer_supported.","Returns the value of controller_mem_buffer_supported.","Returns the value of controller_power_scope.","Returns the value of controller_power_scope.","","Returns the value of controller_ready_modes_supported.","Returns the value of controller_ready_modes_supported.","","Returns the value of doorbell_stride.","","Returns the value of doorbell_stride.","","Returns the argument unchanged.","Returns the argument unchanged.","Converts the given bytes directly into the bitfield struct.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the underlying bits.","","Returns the value of max_queue_entries.","Returns the value of max_queue_entries.","Returns the value of memory_page_sz_max.","","Returns the value of memory_page_sz_max.","Returns the value of memory_page_sz_min.","","Returns the value of memory_page_sz_min.","Returns an instance with zero initialized data.","Returns the value of nvm_subsystem_reset_supported.","Returns the value of nvm_subsystem_reset_supported.","Returns the value of nvm_subsystem_shutdown_supported.","Returns the value of nvm_subsystem_shutdown_supported.","Returns the value of persistent_mem_region_supported.","Returns the value of persistent_mem_region_supported.","","","Returns the value of timeout.","Returns the value of timeout.","","","","","","","","","","","","","","","","","","","","","","Returns the value of arbitration_mechanism.","Returns the value of arbitration_mechanism.","","","","","","","","","","","","","","","","","Returns the value of …","Returns the value of …","Returns the value of enable.","Returns the value of enable.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Converts the given bytes directly into the bitfield struct.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the underlying bits.","","","","Returns the value of io_command_set_selected.","Returns the value of io_command_set_selected.","Returns the value of io_completion_queue_entry_size.","Returns the value of io_completion_queue_entry_size.","Returns the value of io_submission_queue_entry_size.","Returns the value of io_submission_queue_entry_size.","Returns the value of mem_page_size.","Returns the value of mem_page_size.","Returns an instance with zero initialized data.","Sets the value of arbitration_mechanism to the given value.","Sets the value of arbitration_mechanism to the given value.","Sets the value of …","Sets the value of …","Sets the value of enable to the given value.","Sets the value of enable to the given value.","Sets the value of io_command_set_selected to the given …","Sets the value of io_command_set_selected to the given …","Sets the value of io_completion_queue_entry_size to the …","Sets the value of io_completion_queue_entry_size to the …","Sets the value of io_submission_queue_entry_size to the …","Sets the value of io_submission_queue_entry_size to the …","Sets the value of mem_page_size to the given value.","Sets the value of mem_page_size to the given value.","Sets the value of shutdown_notification to the given value.","Sets the value of shutdown_notification to the given value.","Returns the value of shutdown_notification.","Returns the value of shutdown_notification.","","","","","","","","","","","","","","","","","Returns a copy of the bitfield with the value of …","Returns a copy of the bitfield with the value of …","Returns a copy of the bitfield with the value of …","Returns a copy of the bitfield with the value of …","Returns a copy of the bitfield with the value of enable …","Returns a copy of the bitfield with the value of enable …","Returns a copy of the bitfield with the value of …","Returns a copy of the bitfield with the value of …","Returns a copy of the bitfield with the value of …","Returns a copy of the bitfield with the value of …","Returns a copy of the bitfield with the value of …","Returns a copy of the bitfield with the value of …","Returns a copy of the bitfield with the value of …","Returns a copy of the bitfield with the value of …","Returns a copy of the bitfield with the value of …","Returns a copy of the bitfield with the value of …","","","","","","","","","","","","","","Returns the value of fatal_status.","Returns the value of fatal_status.","","","Returns the argument unchanged.","Returns the argument unchanged.","Converts the given bytes directly into the bitfield struct.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the underlying bits.","","Returns an instance with zero initialized data.","Returns the value of nvm_subsystem_reset_occurred.","Returns the value of nvm_subsystem_reset_occurred.","Returns the value of processing_paused.","Returns the value of processing_paused.","Returns the value of ready.","Returns the value of ready.","Returns the value of shutdown_status.","Returns the value of shutdown_status.","Returns the value of shutdown_type_is_nvm_subsystem.","Returns the value of shutdown_type_is_nvm_subsystem.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the value of access_size.","Returns the value of access_size.","","","Returns the value of asym_namespace_access_change.","Returns the value of asym_namespace_access_change.","Returns the value of asym_namespace_access_reporting.","Returns the value of asym_namespace_access_reporting.","","Returns the value of auth_method.","Returns the value of auth_method.","","Returns the value of block_erase.","Returns the value of block_erase.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the value of command_and_feature_lockdown.","Returns the value of command_and_feature_lockdown.","","","","Returns the value of commands_supported_and_effects.","Returns the value of commands_supported_and_effects.","","","","","Returns the value of crypto_erase.","Returns the value of crypto_erase.","Returns the value of data_area_4.","Returns the value of data_area_4.","","","","","","","","","","","","","","Returns the value of delete_endurance_group.","Returns the value of delete_endurance_group.","Returns the value of delete_nvm_set.","Returns the value of delete_nvm_set.","Returns the value of device_self_test.","","Returns the value of device_self_test.","Returns the value of directives.","Returns the value of directives.","Returns the value of discovery_log_page_change.","Returns the value of discovery_log_page_change.","Returns the value of doorbell_buffer_config.","Returns the value of doorbell_buffer_config.","Returns the value of endurance_group_event_aggregate_log.","Returns the value of endurance_group_event_aggregate_log.","","Returns the value of endurance_groups.","Returns the value of endurance_groups.","","","Returns the value of extended_lba_formats_supported.","Returns the value of extended_lba_formats_supported.","Returns the value of firmware_activation_notices.","Returns the value of firmware_activation_notices.","Returns the value of firmware_activation_without_reset.","Returns the value of firmware_activation_without_reset.","Returns the value of firmware_download_and_commit.","Returns the value of firmware_download_and_commit.","","","","Returns the value of first_firmware_slot_readonly.","Returns the value of first_firmware_slot_readonly.","Returns the value of fixed_domain_capacity_management.","Returns the value of fixed_domain_capacity_management.","","","","","","","","","","","","","","","","Returns the value of format_nvm.","Returns the value of format_nvm.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Converts the given bytes directly into the bitfield struct.","Converts the given bytes directly into the bitfield struct.","Converts the given bytes directly into the bitfield struct.","Converts the given bytes directly into the bitfield struct.","Converts the given bytes directly into the bitfield struct.","Converts the given bytes directly into the bitfield struct.","Converts the given bytes directly into the bitfield struct.","Converts the given bytes directly into the bitfield struct.","Converts the given bytes directly into the bitfield struct.","Converts the given bytes directly into the bitfield struct.","","Converts the given bytes directly into the bitfield struct.","","Returns the value of get_lba_status.","Returns the value of get_lba_status.","Returns the value of get_log_page.","Returns the value of get_log_page.","","Returns the value of host_id.","Returns the value of host_id.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the underlying bits.","Returns the underlying bits.","Returns the underlying bits.","Returns the underlying bits.","Returns the underlying bits.","Returns the underlying bits.","Returns the underlying bits.","Returns the underlying bits.","Returns the underlying bits.","Returns the underlying bits.","","Returns the underlying bits.","","Returns the value of lba_status_info_alert.","Returns the value of lba_status_info_alert.","","","","","","","","Returns the value of multi_domain_subsystem.","Returns the value of multi_domain_subsystem.","","Returns the value of namespace_attribute_notices.","Returns the value of namespace_attribute_notices.","Returns the value of namespace_granularity.","Returns the value of namespace_granularity.","Returns the value of namespace_management.","Returns the value of namespace_management.","Returns an instance with zero initialized data.","Returns an instance with zero initialized data.","Returns an instance with zero initialized data.","Returns an instance with zero initialized data.","Returns an instance with zero initialized data.","Returns an instance with zero initialized data.","Returns an instance with zero initialized data.","Returns an instance with zero initialized data.","Returns an instance with zero initialized data.","Returns an instance with zero initialized data.","Returns an instance with zero initialized data.","Returns the value of no_dealloc_inhibited.","Returns the value of no_dealloc_inhibited.","Returns the value of no_dealloc_mods_media.","Returns the value of no_dealloc_mods_media.","Returns the value of non_op_power_state_permissive_mode.","Returns the value of non_op_power_state_permissive_mode.","Returns the value of normal_nvm_subsystem_shutdown.","Returns the value of normal_nvm_subsystem_shutdown.","","Returns the value of nr_rpmb_units.","Returns the value of nr_rpmb_units.","Returns the value of number_of_firmware_slots.","Returns the value of number_of_firmware_slots.","","Returns the value of nvm_sets.","Returns the value of nvm_sets.","Returns the value of nvm_sub_multiple.","Returns the value of nvm_sub_multiple.","Returns the value of nvm_sub_two_or_more.","Returns the value of nvm_sub_two_or_more.","","Returns the value of nvme_enclosure.","Returns the value of nvme_enclosure.","Returns the value of nvme_mi_send_and_recv.","Returns the value of nvme_mi_send_and_recv.","Returns the value of nvme_storage_device.","Returns the value of nvme_storage_device.","","","Returns the value of overwrite.","Returns the value of overwrite.","Returns the value of pcie_management_endpoint.","Returns the value of pcie_management_endpoint.","Returns the value of per_namespace_smart_log.","Returns the value of per_namespace_smart_log.","Returns the value of persistent_event_log.","Returns the value of persistent_event_log.","Returns the value of …","Returns the value of …","Returns the value of predictable_latency_mode.","Returns the value of predictable_latency_mode.","Returns the value of read_recovery_levels.","Returns the value of read_recovery_levels.","","","","","","","","","","Returns the value of security_send_and_recv.","Returns the value of security_send_and_recv.","","Returns the value of smbus_port_management_endpoint.","Returns the value of smbus_port_management_endpoint.","Returns the value of sq_associations.","Returns the value of sq_associations.","Returns the value of sriov_controller.","Returns the value of sriov_controller.","","Returns the value of support_multiple_update_detection.","Returns the value of support_multiple_update_detection.","Returns the value of …","Returns the value of …","Returns the value of telemetry_host_initiated.","Returns the value of telemetry_host_initiated.","","","","","","","","","","","","","","","","","Returns the value of total_size.","Returns the value of total_size.","Returns the value of traffic_based_keep_alive.","Returns the value of traffic_based_keep_alive.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the value of uuid_list.","Returns the value of uuid_list.","Returns the value of valid.","Returns the value of valid.","Returns the value of variable_capacity_management.","Returns the value of variable_capacity_management.","","","Returns the value of virtualization_management.","Returns the value of virtualization_management.","","","Returns the value of write_cycles_remaining.","Returns the value of write_cycles_remaining.","Returns the value of zone_desc_changed_notices.","Returns the value of zone_desc_changed_notices.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the value of data_size_log2.","Returns the value of data_size_log2.","","","","","Returns the value of extended_block.","Returns the value of extended_block.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Converts the given bytes directly into the bitfield struct.","","Converts the given bytes directly into the bitfield struct.","Converts the given bytes directly into the bitfield struct.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the underlying bits.","","Returns the underlying bits.","Returns the underlying bits.","","Returns the value of metadata_size.","Returns the value of metadata_size.","Returns an instance with zero initialized data.","Returns an instance with zero initialized data.","Returns an instance with zero initialized data.","Returns the value of opt_perf.","Returns the value of opt_perf.","Returns the value of relative_performance.","Returns the value of relative_performance.","","Returns the value of supports_atomic_fields.","Returns the value of supports_atomic_fields.","Returns the value of supports_dealloc_lb_err.","Returns the value of supports_dealloc_lb_err.","Returns the value of supports_thin_provisioning.","Returns the value of supports_thin_provisioning.","","","","","","","","","","","","","","","","","","","","","Returns the value of uid_reuse.","Returns the value of uid_reuse.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Converts the given bytes directly into the bitfield struct.","Converts the given bytes directly into the bitfield struct.","","Converts the given bytes directly into the bitfield struct.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the underlying bits.","","","Returns the underlying bits.","Returns the underlying bits.","","","Returns an instance with zero initialized data.","Returns an instance with zero initialized data.","Returns an instance with zero initialized data.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Converts the given bytes directly into the bitfield struct.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns the underlying bits.","","Returns an instance with zero initialized data.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","Converts the given bytes directly into the bitfield struct.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the underlying bits.","","","Returns an instance with zero initialized data.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Converts the given bytes directly into the bitfield struct.","Calls <code>U::from(self)</code>.","Returns the underlying bits.","Returns an instance with zero initialized data.","","","","","","","","","Returns the argument unchanged.","","Converts the given bytes directly into the bitfield struct.","Calls <code>U::from(self)</code>.","Returns the underlying bits.","","Returns an instance with zero initialized data.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the value of access_frequency.","Returns the value of access_frequency.","Returns the value of access_frequency.","Returns the value of access_frequency.","Returns the value of access_frequency.","Returns the value of access_frequency.","Returns the value of access_latency.","Returns the value of access_latency.","Returns the value of access_latency.","Returns the value of access_latency.","Returns the value of access_latency.","Returns the value of access_latency.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the value of command_access_size.","Returns the value of command_access_size.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Converts the given bytes directly into the bitfield struct.","Converts the given bytes directly into the bitfield struct.","Converts the given bytes directly into the bitfield struct.","Converts the given bytes directly into the bitfield struct.","Returns the value of incompressable.","Returns the value of incompressable.","Returns the value of incompressable.","Returns the value of incompressable.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns the underlying bits.","Returns the underlying bits.","Returns the underlying bits.","Returns the underlying bits.","Construct a Create IO Completion Queue request. See base …","Construct a Create IO Completion Queue request. See base …","Construct a Create IO Completion Queue request. See base …","Returns an instance with zero initialized data.","Returns an instance with zero initialized data.","Returns an instance with zero initialized data.","Returns an instance with zero initialized data.","Returns the value of seq_read_range.","Returns the value of seq_read_range.","Returns the value of seq_write_range.","Returns the value of seq_write_range.","Returns the value of sequenial.","Returns the value of sequenial.","Returns the value of sequenial.","Returns the value of sequenial.","Sets the value of access_frequency to the given value.","Sets the value of access_frequency to the given value.","Sets the value of access_frequency to the given value.","Sets the value of access_frequency to the given value.","Sets the value of access_frequency to the given value.","Sets the value of access_frequency to the given value.","Sets the value of access_latency to the given value.","Sets the value of access_latency to the given value.","Sets the value of access_latency to the given value.","Sets the value of access_latency to the given value.","Sets the value of access_latency to the given value.","Sets the value of access_latency to the given value.","Sets the value of command_access_size to the given value.","Sets the value of command_access_size to the given value.","Sets the value of incompressable to the given value.","Sets the value of incompressable to the given value.","Sets the value of incompressable to the given value.","Sets the value of incompressable to the given value.","Sets the value of seq_read_range to the given value.","Sets the value of seq_read_range to the given value.","Sets the value of seq_write_range to the given value.","Sets the value of seq_write_range to the given value.","Sets the value of sequenial to the given value.","Sets the value of sequenial to the given value.","Sets the value of sequenial to the given value.","Sets the value of sequenial to the given value.","Sets the value of write_prepare to the given value.","Sets the value of write_prepare to the given value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a copy of the bitfield with the value of …","Returns a copy of the bitfield with the value of …","Returns a copy of the bitfield with the value of …","Returns a copy of the bitfield with the value of …","Returns a copy of the bitfield with the value of …","Returns a copy of the bitfield with the value of …","Returns a copy of the bitfield with the value of …","Returns a copy of the bitfield with the value of …","Returns a copy of the bitfield with the value of …","Returns a copy of the bitfield with the value of …","Returns a copy of the bitfield with the value of …","Returns a copy of the bitfield with the value of …","Returns a copy of the bitfield with the value of …","Returns a copy of the bitfield with the value of …","Returns a copy of the bitfield with the value of …","Returns a copy of the bitfield with the value of …","Returns a copy of the bitfield with the value of …","Returns a copy of the bitfield with the value of …","Returns a copy of the bitfield with the value of …","Returns a copy of the bitfield with the value of …","Returns a copy of the bitfield with the value of …","Returns a copy of the bitfield with the value of …","Returns a copy of the bitfield with the value of sequenial …","Returns a copy of the bitfield with the value of sequenial …","Returns a copy of the bitfield with the value of sequenial …","Returns a copy of the bitfield with the value of sequenial …","Returns a copy of the bitfield with the value of …","Returns a copy of the bitfield with the value of …","Returns the value of write_prepare.","Returns the value of write_prepare.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,1,0,0,1,0,0,1,1,1,10,12,16,1,10,12,16,1,1,1,1,10,12,16,1,10,12,16,1,10,12,16,1,1,10,12,16,1,10,12,16,1,10,12,16,1,0,0,0,0,0,0,0,20,21,22,23,24,20,21,22,23,24,20,21,22,23,24,20,21,22,23,24,0,20,21,22,23,24,0,20,21,22,23,24,20,21,22,23,24,20,21,22,23,24,20,21,22,23,24,20,21,22,23,24,24,24,20,21,22,23,24,0,20,21,22,23,24,24,24,0,24,20,21,22,23,24,0,0,0,20,21,22,23,24,20,21,22,23,24,20,21,22,23,24,20,21,22,23,24,0,6,6,6,0,6,0,6,6,6,6,6,6,6,6,99,0,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,0,99,99,99,99,99,100,100,100,100,100,100,100,0,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,0,34,34,34,34,34,34,34,34,34,34,0,34,34,34,0,35,35,35,0,35,35,35,35,35,0,35,0,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,0,35,35,35,35,35,35,35,0,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,38,0,0,38,38,38,37,37,37,37,37,38,37,38,37,38,37,38,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,38,37,38,37,38,37,38,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,38,37,38,37,38,37,38,44,42,42,0,0,0,42,44,44,43,0,43,43,41,41,41,42,43,44,41,42,43,44,41,42,43,44,41,42,43,44,41,41,41,41,42,43,44,41,41,42,43,44,41,42,43,44,41,42,43,44,41,42,43,44,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,42,43,44,41,42,43,44,41,42,43,44,41,42,43,44,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,0,47,47,47,0,46,47,46,47,46,47,46,47,46,46,47,46,46,47,46,47,46,47,46,47,46,46,46,46,46,46,46,46,46,46,46,46,47,46,47,46,47,46,47,0,0,0,55,0,0,0,55,0,62,55,0,0,0,0,55,0,0,0,0,0,0,0,52,48,48,52,52,49,49,50,50,52,48,48,52,51,51,52,50,49,53,54,55,56,57,58,59,60,61,48,62,51,52,50,49,53,54,55,56,57,58,59,60,61,48,62,51,52,50,49,53,54,55,56,57,58,59,60,61,48,62,51,52,50,49,53,54,55,56,57,58,59,60,61,48,62,51,59,59,52,52,52,61,61,52,52,52,52,51,51,61,61,52,50,49,53,54,56,57,58,59,60,61,48,51,53,53,53,53,59,52,59,59,59,49,49,59,59,49,49,52,53,53,52,52,53,53,49,49,60,60,59,59,52,52,52,60,60,53,53,52,50,49,53,54,55,56,57,58,59,60,61,48,62,51,59,59,52,50,49,53,54,55,56,57,58,59,60,61,48,62,51,50,49,53,56,57,58,59,60,61,48,62,51,52,59,59,61,61,52,53,53,52,52,52,52,52,52,50,49,53,54,55,56,57,58,59,60,61,48,62,51,50,49,53,56,57,58,59,60,61,48,62,51,52,49,49,52,52,52,52,52,52,52,53,53,52,49,49,53,53,59,59,50,49,53,56,57,58,59,60,61,48,51,51,51,51,51,53,53,49,49,52,48,48,60,60,52,53,53,50,50,50,50,52,56,56,59,59,56,56,52,52,51,51,58,58,61,61,61,61,49,49,53,53,53,53,52,52,52,52,52,52,52,52,52,59,59,52,58,58,53,53,50,50,52,60,60,61,61,61,61,52,50,49,53,54,55,56,57,58,59,60,61,48,62,51,52,48,48,53,53,52,50,49,53,54,55,56,57,58,59,60,61,48,62,51,52,50,49,53,54,55,56,57,58,59,60,61,48,62,51,52,50,49,53,54,55,56,57,58,59,60,61,48,62,51,52,53,53,57,57,53,53,52,52,59,59,52,52,57,57,49,49,65,65,65,0,65,0,0,0,0,63,64,65,66,67,63,64,65,66,67,63,63,64,65,66,67,63,64,65,66,67,64,64,64,63,64,66,67,66,66,63,63,64,65,66,67,63,63,64,65,66,67,64,65,66,67,66,63,64,65,66,67,64,65,66,67,63,64,64,64,66,67,67,67,64,64,63,67,67,67,67,67,67,63,64,65,66,67,63,64,65,66,67,63,64,65,66,67,63,64,65,66,67,67,67,63,101,101,0,101,0,0,101,69,101,70,69,101,70,69,101,70,69,101,70,70,69,70,69,101,70,69,101,70,69,101,70,0,0,0,71,73,17,71,73,17,17,17,17,17,71,73,17,71,73,17,71,73,71,17,73,71,17,71,73,17,71,73,17,71,73,17,5,0,11,11,11,0,0,0,11,7,5,4,11,7,5,4,11,7,5,4,7,5,4,0,7,5,4,7,7,5,5,4,4,11,7,7,5,5,4,4,11,7,5,4,11,7,7,5,5,4,4,11,7,5,4,0,7,5,4,7,5,4,11,7,5,4,11,7,5,4,11,0,0,74,75,74,75,74,75,74,75,74,74,74,75,74,75,75,75,74,75,75,75,75,75,74,74,74,74,74,75,74,75,74,75,74,75,0,0,0,76,76,0,76,13,77,0,13,77,77,13,78,77,76,79,13,78,77,76,79,78,78,77,76,79,78,77,76,79,78,79,78,77,76,13,78,77,76,79,79,79,79,79,79,79,78,77,76,13,78,77,76,79,78,77,76,78,79,13,79,78,77,76,79,13,78,77,76,79,13,78,77,76,79,13,78,77,76,79,79,79,79,79,79,79,79,79,79,79,79,79,79,0,83,83,83,83,83,83,83,83,83,83,83,83,83,83,0,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,85,86,0,0,87,0,87,86,88,0,88,88,84,84,84,88,86,87,84,88,86,87,86,87,86,87,86,87,86,87,86,87,86,87,84,88,86,87,84,85,85,84,84,88,86,87,84,84,86,87,86,87,84,88,86,87,84,88,86,87,84,88,86,87,0,0,0,102,0,0,93,92,93,93,93,92,92,93,92,0,93,93,102,0,0,93,93,102,0,0,89,90,91,89,90,91,89,90,91,89,90,91,81,80,82,102,92,93,94,89,90,91,81,80,82,102,92,93,94,89,90,91,92,93,90,91,92,93,90,91,89,89,92,93,90,91,92,93,90,91,81,80,82,102,92,93,94,94,89,90,90,91,91,92,93,94,89,90,91,90,91,90,91,81,80,82,102,92,93,94,89,90,91,92,93,94,89,90,91,81,80,82,94,89,90,91,89,89,89,89,90,91,90,91,89,90,91,89,90,91,89,90,91,89,90,91,89,89,90,91,90,91,89,89,89,89,90,91,90,91,89,89,92,93,90,91,81,80,82,102,92,93,94,89,90,91,81,80,82,102,92,93,94,89,90,91,81,80,82,102,92,93,94,89,90,91,89,90,91,89,90,91,89,90,91,89,90,91,89,89,90,91,90,91,89,89,89,89,90,91,90,91,89,89,89,89,0,0,95,95,0,98,96,95,98,96,95,95,95,95,95,95,95,98,96,95,96,96,98,96,95,98,98,98,98,96,95,96,98,96,98,98,95,98,96,95,98,96,95,98,96,95,98],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,2],[1,3],[1,2],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[4,5,6,7,8,9],10],[[4,5,6,7,5,11],12],[[4,1,13,[15,[14]]],16],[1,[[15,[17]]]],[1,3],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[20,20],[21,21],[22,22],[23,23],[24,24],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],0,[[20,20],26],[[21,21],26],[[22,22],26],[[23,23],26],[[24,24],26],0,[[],20],[[],21],[[],22],[[],23],[[],24],[[20,20],9],[[21,21],9],[[22,22],9],[[23,23],9],[[24,24],9],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[20,27],28],[[21,27],28],[[22,27],28],[[23,27],28],[[24,27],28],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],[[18,[29]]]],[[[30,[2]]],24],[[20,-1],25,31],[[21,-1],25,31],[[22,-1],25,31],[[23,-1],25,31],[[24,-1],25,31],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[18,[32]]]],[24,[[30,[2]]]],0,[[],24],[[20,20],[[15,[26]]]],[[21,21],[[15,[26]]]],[[22,22],[[15,[26]]]],[[23,23],[[15,[26]]]],[[24,24],[[15,[26]]]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],0,0,0,0,0,[6,33],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[6,9],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,19,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-1,[]],[-1,-2,[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,19,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[[],[[18,[29]]]],[-1,-2,[],[]],[[],[[18,[32]]]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,19,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[3,34],[[[30,[2]]],34],[[],[[18,[29]]]],[-1,-2,[],[]],[34,[[30,[2]]]],[[],[[18,[32]]]],[[],34],0,[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,19,[]],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[-1,-1,[]],0,0,[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,19,[]],0,[35,3],[35,2],0,[-1,-2,[],[]],[-1,-2,[],[]],[36,36],[[-1,-2],25,[],[]],[36],[36,[[18,[29]]]],[-1,-1,[]],[[[30,[2]]],36],[-1,-2,[],[]],[36,[[30,[2]]]],[[],36],[36,25],[36,[[18,[25,32]]]],[36,25],[36,[[18,[25,32]]]],[36],[36,[[18,[29]]]],[-1,-2,[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,19,[]],[36,36],[36,[[18,[36,32]]]],[36,36],[36,[[18,[36,32]]]],0,0,0,0,0,0,[37,9],[37,9],[37],[37,[[18,[29]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[37,37],[38,38],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[37],[37,[[18,[29]]]],[37],[37,[[18,[29]]]],[37],[37,[[18,[29]]]],[37,9],[37],[37,[[18,[29]]]],[37,9],[37],[37,39],[37,[[18,[29]]]],[40,37],[-1,-1,[]],[-1,-1,[]],[[[30,[2]]],37],[[],[[18,[29]]]],[-1,-2,[],[]],[-1,-2,[],[]],[37,[[30,[2]]]],[[],[[18,[32]]]],[37],[37,[[18,[29]]]],[37],[37,39],[37,[[18,[29]]]],[37],[37,39],[37,[[18,[29]]]],[[],37],[37],[37,[[18,[29]]]],[37],[37,[[18,[29]]]],[37],[37,[[18,[29]]]],[37,9],[37,9],[37],[37,[[18,[29]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[41],[41,[[18,[29]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[41,41],[42,42],[43,43],[44,44],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[41],[41,[[18,[29]]]],[41],[41,[[18,[29]]]],[[42,27],28],[[43,27],28],[[44,27],28],[45,41],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[30,[2]]],41],[[],[[18,[29]]]],[[],[[18,[29]]]],[[],[[18,[29]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[41,[[30,[2]]]],[[],[[18,[32]]]],[[],[[18,[32]]]],[[],[[18,[32]]]],[41],[41,[[18,[29]]]],[41],[41,[[18,[29]]]],[41],[41,[[18,[29]]]],[41],[41,[[18,[29]]]],[[],41],[41,25],[41,[[18,[25,32]]]],[41,25],[41,[[18,[25,32]]]],[41,25],[41,[[18,[25,32]]]],[41,25],[41,[[18,[25,32]]]],[41,25],[41,[[18,[25,32]]]],[41,25],[41,[[18,[25,32]]]],[41,25],[41,[[18,[25,32]]]],[41,25],[41,[[18,[25,32]]]],[41],[41,[[18,[29]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[41,41],[41,[[18,[41,32]]]],[41,41],[41,[[18,[41,32]]]],[41,41],[41,[[18,[41,32]]]],[41,41],[41,[[18,[41,32]]]],[41,41],[41,[[18,[41,32]]]],[41,41],[41,[[18,[41,32]]]],[41,41],[41,[[18,[41,32]]]],[41,41],[41,[[18,[41,32]]]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[46,46],[47,47],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[46],[46,[[18,[29]]]],[[47,27],28],[45,46],[-1,-1,[]],[-1,-1,[]],[[[30,[2]]],46],[[],[[18,[29]]]],[-1,-2,[],[]],[-1,-2,[],[]],[46,[[30,[2]]]],[[],[[18,[32]]]],[[],46],[46],[46,[[18,[29]]]],[46],[46,[[18,[29]]]],[46],[46,[[18,[29]]]],[46],[46,[[18,[29]]]],[46],[46,[[18,[29]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[48],[48,[[18,[29]]]],0,0,[49],[49,[[18,[29]]]],[50],[50,[[18,[29]]]],0,[48],[48,[[18,[29]]]],0,[51],[51,[[18,[29]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[52,52],[50,50],[49,49],[53,53],[54,54],[55,55],[56,56],[57,57],[58,58],[59,59],[60,60],[61,61],[48,48],[62,62],[51,51],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[59],[59,[[18,[29]]]],0,0,0,[61],[61,[[18,[29]]]],0,0,0,0,[51],[51,[[18,[29]]]],[61],[61,[[18,[29]]]],[[],52],[[],50],[[],49],[[],53],[[],54],[[],56],[[],57],[[],58],[[],59],[[],60],[[],61],[[],48],[[],51],[53],[53,[[18,[29]]]],[53],[53,[[18,[29]]]],[59],0,[59,[[18,[29]]]],[59],[59,[[18,[29]]]],[49],[49,[[18,[29]]]],[59],[59,[[18,[29]]]],[49],[49,[[18,[29]]]],0,[53],[53,[[18,[29]]]],0,0,[53],[53,[[18,[29]]]],[49],[49,[[18,[29]]]],[60],[60,[[18,[29]]]],[59],[59,[[18,[29]]]],0,0,0,[60],[60,[[18,[29]]]],[53],[53,[[18,[29]]]],[[52,27],28],[[50,27],28],[[49,27],28],[[53,27],28],[[54,27],28],[[55,27],28],[[56,27],28],[[57,27],28],[[58,27],28],[[59,27],28],[[60,27],28],[[61,27],28],[[48,27],28],[[62,27],28],[[51,27],28],[59],[59,[[18,[29]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[30,[2]]],50],[[[30,[2]]],49],[[[30,[2]]],53],[[[30,[2]]],56],[[[30,[2]]],57],[[[30,[2]]],58],[[[30,[2]]],59],[[[30,[2]]],60],[[[30,[2]]],61],[[[30,[2]]],48],[[],[[18,[29]]]],[[[30,[2]]],51],0,[59],[59,[[18,[29]]]],[61],[61,[[18,[29]]]],0,[53],[53,[[18,[29]]]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[50,[[30,[2]]]],[49,[[30,[2]]]],[53,[[30,[2]]]],[56,[[30,[2]]]],[57,[[30,[2]]]],[58,[[30,[2]]]],[59,[[30,[2]]]],[60,[[30,[2]]]],[61,[[30,[2]]]],[48,[[30,[2]]]],[[],[[18,[32]]]],[51,[[30,[2]]]],0,[49],[49,[[18,[29]]]],0,0,0,0,0,0,0,[53],[53,[[18,[29]]]],0,[49],[49,[[18,[29]]]],[53],[53,[[18,[29]]]],[59],[59,[[18,[29]]]],[[],50],[[],49],[[],53],[[],56],[[],57],[[],58],[[],59],[[],60],[[],61],[[],48],[[],51],[51],[51,[[18,[29]]]],[51],[51,[[18,[29]]]],[53],[53,[[18,[29]]]],[49],[49,[[18,[29]]]],0,[48],[48,[[18,[29]]]],[60],[60,[[18,[29]]]],0,[53],[53,[[18,[29]]]],[50],[50,[[18,[29]]]],[50],[50,[[18,[29]]]],0,[56],[56,[[18,[29]]]],[59],[59,[[18,[29]]]],[56],[56,[[18,[29]]]],0,0,[51],[51,[[18,[29]]]],[58],[58,[[18,[29]]]],[61],[61,[[18,[29]]]],[61],[61,[[18,[29]]]],[49],[49,[[18,[29]]]],[53],[53,[[18,[29]]]],[53],[53,[[18,[29]]]],0,0,0,0,0,0,0,0,0,[59],[59,[[18,[29]]]],0,[58],[58,[[18,[29]]]],[53],[53,[[18,[29]]]],[50],[50,[[18,[29]]]],0,[60],[60,[[18,[29]]]],[61],[61,[[18,[29]]]],[61],[61,[[18,[29]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[48],[48,[[18,[29]]]],[53],[53,[[18,[29]]]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],0,[53],[53,[[18,[29]]]],[57],[57,[[18,[29]]]],[53],[53,[[18,[29]]]],0,0,[59],[59,[[18,[29]]]],0,0,[57],[57,[[18,[29]]]],[49],[49,[[18,[29]]]],0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[63,63],[64,64],[65,65],[66,66],[67,67],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[64,39],[64],[64,[[18,[29]]]],[[],63],[[],64],[[],66],[[],67],[66],[66,[[18,[29]]]],0,[[63,27],28],[[64,27],28],[[65,27],28],[[66,27],28],[[67,27],28],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[30,[2]]],64],[[],[[18,[29]]]],[[[30,[2]]],66],[[[30,[2]]],67],[66,39],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[64,[[30,[2]]]],[[],[[18,[32]]]],[66,[[30,[2]]]],[67,[[30,[2]]]],[63,[[68,[64]]]],[64],[64,[[18,[29]]]],[[],64],[[],66],[[],67],[67],[67,[[18,[29]]]],[64],[64,[[18,[29]]]],0,[67],[67,[[18,[29]]]],[67],[67,[[18,[29]]]],[67],[67,[[18,[29]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[67],[67,[[18,[29]]]],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[69,70],[70,15],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[17,17],[[-1,-2],25,[],[]],[[],17],[[17,27],28],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[71],[-1,-2,[],[]],[[[30,[2]]],71],[-1,17,[[72,[45]]]],[73,15],[71,39],[-1,-2,[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[7,7],[5,5],[4,4],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],0,[[7,27],28],[[5,27],28],[[4,27],28],[3,7],[-1,-1,[]],[-1,-1,[]],[3,5],[-1,-1,[]],[3,4],[-1,-1,[]],[[],[[18,[29]]]],[[[30,[2]]],7],[[[30,[2]]],5],[[],[[18,[29]]]],[[[30,[2]]],4],[[],[[18,[29]]]],[[],[[18,[29]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[7,[[30,[2]]]],[[],[[18,[32]]]],[[],[[18,[32]]]],[5,[[30,[2]]]],[4,[[30,[2]]]],[[],[[18,[32]]]],[[],[[18,[32]]]],[[],7],[[],5],[[],4],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[74,74],[75,75],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[74,4],[[],74],[[74,27],28],[[75,27],28],[-1,-1,[]],[-1,-1,[]],[[[30,[2]]],75],[[],[[18,[29]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[18,[32]]]],[75,[[30,[2]]]],[75,9],[[],75],[74,3],[74,9],[74,5],[74,75],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[2,4,76,77],78],[78,78],[77,77],[76,76],[79,79],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[],78],[[],79],[[78,27],28],[[77,27],28],[[76,27],28],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[16,79],[80,79],[81,79],[82,79],[10,79],[12,79],[-1,-1,[]],[[[30,[2]]],78],[[],[[18,[29]]]],[[],[[18,[29]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[78,[[30,[2]]]],[[],[[18,[32]]]],[[],[[18,[32]]]],[[],78],[[],79],[[13,9],77],[[79,4],25],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[[79,78],79],[[79,45],79],[[79,45],79],[[79,45],79],[[79,45],79],[[79,45],79],[[79,45],79],[[79,45],79],[[79,45],79],[[79,4],79],[[79,13],79],[[79,33],79],[[79,17],79],0,[-1,-2,[],[]],[-1,-2,[],[]],[83,83],[[-1,-2],25,[],[]],[[83,27],28],[-1,-1,[]],[[[30,[2]]],83],[-1,-2,[],[]],[83,[[30,[2]]]],[[],83],[-1,-2,[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,19,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[[15,[14]]],14],[-1,-1,[]],[[],[[18,[29]]]],[[[30,[2]]],14],[-1,-2,[],[]],[14,[[30,[2]]]],[[],[[18,[32]]]],[[],14],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,19,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[84,[-1]]],[],85],[[[84,[-1]]],[],85],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[86,86],[87,87],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[86,86],26],[[87,87],26],[[86,86],9],[[87,87],9],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[86,27],28],[[87,27],28],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[84,[-1]],87],[[15,[13]]],85],[[-1,87],[[15,[13]]],[]],[[-1,86],[[15,[6]]],[]],[[[84,[-1]],86],[[15,[6]]],85],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[84,[-1]]],39,85],[[2,39,88,-1],[[84,[-1]]],85],[[86,86],[[15,[26]]]],[[87,87],[[15,[26]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[89],[90],[91],[89,[[18,[29]]]],[90,[[18,[29]]]],[91,[[18,[29]]]],[89],[90],[91],[89,[[18,[29]]]],[90,[[18,[29]]]],[91,[[18,[29]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[92,92],[93,93],[90,90],[91,91],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[89],[89,[[18,[29]]]],[[],92],[[],93],[[],90],[[],91],[[92,27],28],[[93,27],28],[[90,27],28],[[91,27],28],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[45,94],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[45,90],[-1,-1,[]],[45,91],[[],[[18,[29]]]],[[],[[18,[29]]]],[[[30,[2]]],94],[[[30,[2]]],89],[[[30,[2]]],90],[[[30,[2]]],91],[90],[91],[90,[[18,[29]]]],[91,[[18,[29]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[18,[32]]]],[[],[[18,[32]]]],[94,[[30,[2]]]],[89,[[30,[2]]]],[90,[[30,[2]]]],[91,[[30,[2]]]],[[4,17,13,2,94],81],[[4,17,13,40,3,90],80],[[4,17,13,40,3,91],82],[[],94],[[],89],[[],90],[[],91],[89],[89,[[18,[29]]]],[89],[89,[[18,[29]]]],[90],[91],[90,[[18,[29]]]],[91,[[18,[29]]]],[89,25],[90,25],[91,25],[89,[[18,[25,32]]]],[90,[[18,[25,32]]]],[91,[[18,[25,32]]]],[89,25],[90,25],[91,25],[89,[[18,[25,32]]]],[90,[[18,[25,32]]]],[91,[[18,[25,32]]]],[89,25],[89,[[18,[25,32]]]],[90,25],[91,25],[90,[[18,[25,32]]]],[91,[[18,[25,32]]]],[89,25],[89,[[18,[25,32]]]],[89,25],[89,[[18,[25,32]]]],[90,25],[91,25],[90,[[18,[25,32]]]],[91,[[18,[25,32]]]],[89,25],[89,[[18,[25,32]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[89,89],[90,90],[91,91],[89,[[18,[89,32]]]],[90,[[18,[90,32]]]],[91,[[18,[91,32]]]],[89,89],[90,90],[91,91],[89,[[18,[89,32]]]],[90,[[18,[90,32]]]],[91,[[18,[91,32]]]],[89,89],[89,[[18,[89,32]]]],[90,90],[91,91],[90,[[18,[90,32]]]],[91,[[18,[91,32]]]],[89,89],[89,[[18,[89,32]]]],[89,89],[89,[[18,[89,32]]]],[90,90],[91,91],[90,[[18,[90,32]]]],[91,[[18,[91,32]]]],[89,89],[89,[[18,[89,32]]]],[89],[89,[[18,[29]]]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[95,95],[[-1,-2],25,[],[]],[[95,95],26],[[95,95],9],[[-1,-2],9,[],[]],[[95,27],28],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[96,[[15,[[25,[3,-1]]]]],97],[[96,[68,[2]]],[[15,[3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[98,9],[98,9],[98,3],[[[68,[2]],3,39],[[18,[98,95]]]],[[[68,[2]],3,39],[[18,[96,95]]]],[[95,95],[[15,[26]]]],[96,9],[98,39],[96,39],[[98,-1],[[15,[3]]],97],[[98,[68,[2]]],[[15,[3]]]],[-1,-2,[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[[98,3],25]],"c":[],"p":[[4,"IdentifyCNSValue",5],[15,"u8"],[15,"u16"],[3,"CommandId",1156],[3,"QueueId",1156],[4,"PrpListOrBuffer",155],[3,"QueueSize",1156],[6,"InterruptVector",50],[15,"bool"],[3,"CreateIOCompletionQueue",5],[4,"QueuePriority",1156],[3,"CreateIOSubmissionQueue",5],[4,"Dptr",1263],[3,"UuidIndex",1373],[4,"Option",1722],[3,"Identify",5],[3,"NamespaceId",1121],[4,"Result",1723],[3,"TypeId",1724],[3,"OneHundredMilliseconds",50],[3,"Microseconds",50],[3,"Minutes",50],[3,"Seconds",50],[3,"HalfSeconds",50],[15,"tuple"],[4,"Ordering",1725],[3,"Formatter",1726],[6,"Result",1726],[3,"InvalidBitPattern",1727],[15,"array"],[8,"Hasher",1728],[3,"OutOfBounds",1727],[6,"Address",50],[3,"ControllerId",252],[3,"ControllerProperties",267],[3,"AdminQueueAttributes",309],[3,"ControllerCap",335],[4,"ControllerPowerScope",335],[15,"usize"],[15,"u64"],[3,"ControllerConfig",402],[4,"IOCommandSet",402],[4,"ArbitrationMechanism",402],[4,"ShutdownNotification",402],[15,"u32"],[3,"ControllerStatus",516],[4,"ShutdownStatus",516],[3,"ReplayProtectedMemoryBlockSupport",563],[3,"OptionalAsyncEventsSupported",563],[3,"MultipathIONamespaceSharingCaps",563],[3,"SanitizeCapabilities",563],[3,"IdentifyControllerDataStructure",563],[3,"ControllerAttributes",563],[3,"ReadRecoveryLevelsSupported",563],[4,"ControllerType",563],[3,"NvmSubsystemReport",563],[3,"VPDWriteCycleInfo",563],[3,"ManagementEndpointCapabilities",563],[3,"OptionalAdminCommandSupport",563],[3,"FirmwareUpdates",563],[3,"LogPageAttributes",563],[4,"AuthMethod",563],[3,"IdentifyNamespaceDataStructure",985],[3,"LbaFormat",985],[4,"RelativePerformance",985],[3,"FormattedLbaSize",985],[3,"NamespaceFeatures",985],[15,"slice"],[3,"NamespaceIdentBuffer",1090],[3,"NamespaceIdentBufferIterator",1090],[3,"NamespaceList",1121],[8,"Into",1729],[3,"NamespaceListIter",1121],[3,"CommonCompletion",1227],[3,"StatusField",1227],[4,"FuseSpec",1263],[4,"Psdt",1263],[3,"CommandDword0",1263],[3,"CommonCommand",1263],[3,"ReadCommand",1453],[3,"DatasetMgmtCommand",1453],[3,"WriteCommand",1453],[3,"SglDescriptor",1358],[3,"VirtualRegion",1388],[8,"PhysicalPageCollection",1388],[4,"PrpMode",1388],[4,"DptrMode",1388],[4,"CacheType",1388],[3,"ContextAttributes",1453],[3,"ReadDword13",1453],[3,"WriteDword13",1453],[4,"AccessLatency",1453],[4,"AccessFrequency",1453],[3,"DatasetMgmtDword11",1453],[4,"CreateQueueError",1675],[3,"CompletionQueue",1675],[8,"Copy",1730],[3,"SubmissionQueue",1675],[4,"AdminCommand",169],[4,"FeatureId",208],[4,"NamespaceDescriptor",1090],[4,"NvmCommand",1453]]},\
"twizzler_abi":{"doc":"This library provides a common interface for applications …","t":"AAAAAAAAAAAAARAFDDLLLLLLLLLLLLLLLLLLLLLLLLNEENDDDDENNNDNRENNDRNNENNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAMMLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLMLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLANDDDDDDENMMMMMMMMMLLLLLLLLLLLLLLMMMMMMMMMMLLLLLLLLMMMMMMLLLLMMLLLLLLLMFMMMMMMLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLMMNNNNNDENREEDEEDNNNNNNNNNNSNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFLLDIDILLLLLLLLLLLLKLLKLLLLLLLLDDDDDLLLLLLLLLLLLLLLLMMLLLMLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLMMSRRDDSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDNNNNEEEEDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDFLLLLLLLLLLLLLLFLLLLLLALLLLLLLLLLLLLLLLDNNNENLLLLLLLLLFLLLLLLRRRRSNENNNNDDDDEENNNDDSNDNNNRRSSDNNNNNNENSNNNNNNNNNNNNNNNNNNNNNEDEDENDESDDDDNRSSDNEDNNNNNNSEEDNEDNDNENNNENDNENENNNDDDNENEDNNDNNNNNNNNNDNEENDEDENEDEEGDDDENNDNNNNNNNNNNNNNNDNNNNNNNNNSSSLLLLLLLLLLLLLLLMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFFFFFFFFFFFFFFFFFFFFMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMENNNNDLLLLLLLLLALLLLLLLLLLLLLLLLLLLLDDDDRSLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLNDNENDNENDNNDENMMLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLMLLLLLLLLMLLLMLMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLL","n":["arch","aux","device","kso","marker","meta","object","pager","runtime","slot","syscall","thread","upcall","SLOTS","syscall","raw_syscall","KernelInitInfo","KernelInitName","add_name","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","from","from","id","into","into","name","names","new","new","null","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Bus","BusType","CacheType","Device","DeviceId","DeviceInterrupt","DeviceInterruptFlags","DeviceRepr","DeviceType","High","Idle","Info","InterruptVector","Low","MMIO_OFFSET","MailboxPriority","MemoryMappedIO","Mmio","MmioInfo","NUM_DEVICE_INTERRUPTS","Num","Pcie","SubObjectType","System","Uncacheable","Unknown","Unknown","WriteBack","WriteCombining","WriteThrough","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bus","bus_type","cache_type","check_for_interrupt","check_for_mailbox","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","complement","contains","device_id","device_type","difference","empty","eq","eq","eq","eq","eq","eq","eq","extend","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","hash","info","init","init","insert","interrupts","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into","is_all","is_empty","length","mailboxes","new","new","not","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","register_interrupt","remove","set","setup_interrupt_sleep","sub","sub_assign","submit_mailbox_msg","symmetric_difference","sync","tags","tags","taken","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","vec","wait_for_interrupt","pcie","AllocateInterrupt","PcieBridgeHeader","PcieCapabilityHeader","PcieDeviceHeader","PcieDeviceInfo","PcieFunctionHeader","PcieInfo","PcieKactionSpecific","RegisterDevice","bar0","bar0","bar1","bar1","bar2","bar3","bar4","bar5","bist","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bridge_control","bus_end","bus_nr","bus_start","cache_line_size","cap_ptr","cap_ptr","cardbus_cis_ptr","class","class","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","command","dev_nr","device_id","device_id","exprom_base","exprom_base","fmt","fmt","fmt","fmt","fnheader","fnheader","from","from","from","from","from","from","from","func_nr","get_bar","header_type","id","int_line","int_line","int_pin","int_pin","into","into","into","into","into","into","into","io_base","io_base_upper","io_limit","io_limit_upper","latency_timer","max_latency","memory_base","memory_limit","min_grant","next","pref_base_upper","pref_limit_upper","pref_memory_base","pref_memory_limit","primary_bus_nr","progif","progif","revision","revision","secondary_bus_nr","secondary_latency_timer","secondary_status","seg_nr","seg_nr","status","subclass","subclass","subordinate_bus_nr","subsystem_id","subsystem_vendor_id","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vendor_id","vendor_id","Generic","GetChild","GetKsoRoot","GetSubObject","High","InterruptAllocateOptions","InterruptPriority","InvalidArgument","KSO_NAME_MAX_LEN","KactionCmd","KactionError","KactionFlags","KactionGenericCmd","KactionValue","KsoHdr","Low","Normal","NotFound","ObjID","OutOfMemory","PinPages","ReleasePin","ResourceAllocationFailed","Specific","U64","UNIQUE","Unknown","all","all","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","complement","complement","contains","contains","difference","difference","empty","empty","eq","eq","eq","eq","eq","eq","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","hash","hash","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","into","is_all","is_all","is_empty","is_empty","new","not","not","objid","pack_kaction_int_pri_and_opts","pack_kaction_pin_start_and_len","pack_kaction_pin_token_and_len","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","remove","remove","set","set","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u64","union","union","unpack_kaction_int_pri_and_opts","unpack_kaction_pin_start_and_len","unpack_kaction_pin_token_and_len","unwrap_objid","unwrap_u64","BaseTag","BaseType","BaseVersion","ObjSafe","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","fmt","fmt","from","from","init","into","into","tags","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","MetaExt","MetaExtTag","MetaFlags","MetaInfo","Nonce","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","extcount","flags","fmt","fmt","fmt","fotcount","from","from","from","from","from","into","into","into","into","into","kuid","nonce","tag","tag","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","value","version","EXEC","MAX_SIZE","NULLPAGE_SIZE","ObjID","Protections","READ","WRITE","all","as_ref","as_u128","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","complement","contains","difference","empty","eq","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","hash","insert","intersection","intersects","into","into","is_all","is_empty","new","new_from_parts","not","partial_cmp","partial_cmp","remove","set","split","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_string","toggle","try_from","try_from","try_into","try_into","type_id","type_id","union","CompletionToKernel","CompletionToPager","EchoReq","EchoReq","EchoResp","EchoResp","KernelCommand","KernelCompletionData","PagerCompletionData","PagerRequest","RequestFromKernel","RequestFromPager","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmd","cmd","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","data","data","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","new","new","new","new","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","MinimalRuntime","__twz_get_runtime","abort","actual_monotonicity","available_parallelism","borrow","borrow_mut","default","default_allocator","exit","from","futex_wait","futex_wake","futex_wake_all","get_exeid","get_full_mapping","get_kernel_init_info","get_library","get_library_segment","get_monotonic","get_system_time","into","join","load_elf","map_object","release_handle","runtime_entry","set_name","sleep","spawn","tls_get_addr","try_from","try_into","type_id","unmap_object","with_panic_output","with_stderr","with_stdin","with_stdout","yield_now","ElfObject","InvalidExecutable","MapFailed","ObjectCreateFailed","SpawnExecutableError","ThreadSpawnFailed","borrow","borrow","borrow_mut","borrow_mut","fmt","from","from","into","into","spawn_new_executable","try_from","try_from","try_into","try_into","type_id","type_id","RESERVED_DATA","RESERVED_KERNEL_INIT","RESERVED_STACK","RESERVED_TEXT","ALL_CLOCKS","AlreadyHandle","BackingType","BestMonotonic","BestRealTime","Buffer","ChangeState","Clock","ClockFlags","ClockID","ClockInfo","ClockKind","ClockSource","Console","ConversionOverflow","CreateCommit","CreateTieFlags","CreateTieSpec","DISCARD_ON_FULL","Delete","DeleteFlags","Equal","Err","Exit","FEMTOS_PER_NANO","FEMTOS_PER_SEC","FIRST_KIND","FORCE","FemtoSeconds","GetAffinity","GetPriority","GetTls","GetTrapState","GetUpcall","HandleSaturated","HandleType","ID","INVERT","IOError","InvalidArgument","InvalidArgument","InvalidArgument","InvalidArgument","InvalidArgument","InvalidArgument","InvalidArgument","InvalidArgument","InvalidArgument","InvalidArgument","InvalidArgument","InvalidID","InvalidID","InvalidProtections","InvalidReference","InvalidSlot","InvalidSlot","InvalidSlot","Kaction","KernelConsoleRead","KernelConsoleReadBufferError","KernelConsoleReadBufferFlags","KernelConsoleReadError","KernelConsoleReadFlags","KernelConsoleReadSource","KernelConsoleWrite","KernelConsoleWriteFlags","LifetimeType","MONOTONIC","MapFlags","MapInfo","MicroSeconds","MilliSeconds","Monotonic","NANOS_PER_SEC","NONBLOCKING","NONBLOCKING","NanoSeconds","NewHandle","NewHandleError","NewHandleFlags","NoSuchDevice","Normal","NotFound","NotFound","Null","NumSyscalls","ONLY_KIND","ObjectControlCmd","ObjectControlError","ObjectCreate","ObjectCreate","ObjectCreateError","ObjectCreateFlags","ObjectCtrl","ObjectInfo","ObjectMap","ObjectMapError","ObjectNotFound","ObjectNotFound","ObjectReadMap","ObjectReadMapError","ObjectRef","ObjectSource","ObjectStat","ObjectStatError","ObjectUnmap","ObjectUnmapError","Ok","PagerQueue","Persistent","PicoSeconds","PinnedPage","ReadClockFlags","ReadClockInfo","ReadClockInfoError","ReadClockList","ReadClockListError","ReadClockListFlags","ReadRegister","RealTime","Seconds","SendMessage","SetAffinity","SetPriority","SetTls","SetTrapState","SetUpcall","Sleep","SourceMisalignment","Spawn","SysInfo","SysInfo","Syscall","ThreadControl","ThreadCtrl","ThreadSpawnArgs","ThreadSpawnError","ThreadSpawnFlags","ThreadSync","ThreadSync","ThreadSyncError","ThreadSyncFlags","ThreadSyncOp","ThreadSyncReference","ThreadSyncResult","ThreadSyncSleep","ThreadSyncWake","TimeSpan","TimeUnitError","Timeout","UnbindHandle","UnbindHandleFlags","Unknown","Unknown","Unknown","Unknown","Unknown","Unknown","Unknown","Unknown","Unknown","Unknown","Unknown","Unknown","Unknown","Unknown","UnmapFlags","Virtual","Virtual32","VmContext","Volatile","Wake","WouldBlock","WouldBlock","WriteRegister","Yield","ZERO","ZERO","ZERO","all","all","all","all","all","all","all","all","all","all","all","all","all","all","all","arg","as_femtos","as_nanos","backing","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check","checked_sub","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","complement","complement","complement","complement","complement","complement","complement","complement","complement","complement","complement","complement","complement","complement","complement","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","count","cpu_count","cpu_count","current_value","default","dest_start","difference","difference","difference","difference","difference","difference","difference","difference","difference","difference","difference","difference","difference","difference","difference","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","entry","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","flags","flags","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_femtos","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_nanos","from_secs","get","get_result","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","id","id","id","info","info","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_monotonic","len","life","load","maps","mul","mul","mul","new","new","new","new","new","new","new","new","new","new","new_sleep","new_wake","not","not","not","not","not","not","not","not","not","not","not","not","not","not","not","num","op","page_size","page_size","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","physical_address","precision","prot","read","ready","ready","reference","reference","remove","remove","remove","remove","remove","remove","remove","remove","remove","remove","remove","remove","remove","remove","remove","resolution","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","slot","src_start","stack_base","stack_size","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","sys_debug_shutdown","sys_info","sys_kaction","sys_kernel_console_read","sys_kernel_console_read_buffer","sys_kernel_console_write","sys_new_handle","sys_object_create","sys_object_ctrl","sys_object_map","sys_object_read_map","sys_object_stat","sys_object_unmap","sys_read_clock_info","sys_read_clock_list","sys_spawn","sys_thread_ctrl","sys_thread_exit","sys_thread_set_upcall","sys_thread_settls","sys_thread_sync","sys_thread_yield","sys_unbind_handle","ties_from","ties_to","tls","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","union","union","union","union","union","union","union","union","union","union","union","union","union","value","version","vm_context_handle","ExecutionState","Exited","Running","Sleeping","Suspended","ThreadRepr","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","cmp","default","eq","event","fmt","from","from","get_code","get_state","hash","init","into","into","partial_cmp","set_state","tags","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","wait","AsyncEvent","AsyncEventCompletion","AsyncEventCompletionFlags","AsyncEventFlags","MAX_AUX_DATA","NON_BLOCKING","all","all","aux","aux","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","complement","complement","contains","contains","difference","difference","empty","empty","eq","eq","eq","eq","extend","extend","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","hash","hash","hash","hash","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","is_all","is_all","is_empty","is_empty","message","new","new","not","not","partial_cmp","partial_cmp","partial_cmp","partial_cmp","remove","remove","sender","set","set","status","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","union","union","Exception","ExceptionInfo","InstructionFetch","MemoryAccessKind","MemoryContextViolation","MemoryContextViolationInfo","NullPageAccess","ObjectMemoryError","ObjectMemoryFault","ObjectMemoryFaultInfo","OutOfBounds","Read","UpcallFrame","UpcallInfo","Write","access","address","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bp","cmp","code","eq","error","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","info","into","into","into","into","into","into","into","ip","kind","new","new","new","object_id","partial_cmp","r10","r11","r12","r13","r14","r15","r8","r9","rax","rbp","rbx","rcx","rdi","rdx","rflags","rip","rsi","rsp","sp","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id"],"q":[[0,"twizzler_abi"],[13,"twizzler_abi::arch"],[15,"twizzler_abi::arch::syscall"],[16,"twizzler_abi::aux"],[42,"twizzler_abi::device"],[269,"twizzler_abi::device::bus"],[270,"twizzler_abi::device::bus::pcie"],[412,"twizzler_abi::kso"],[624,"twizzler_abi::marker"],[652,"twizzler_abi::meta"],[713,"twizzler_abi::object"],[795,"twizzler_abi::pager"],[927,"twizzler_abi::runtime"],[967,"twizzler_abi::runtime::load_elf"],[989,"twizzler_abi::slot"],[993,"twizzler_abi::syscall"],[2639,"twizzler_abi::thread"],[2675,"twizzler_abi::thread::event"],[2818,"twizzler_abi::upcall"],[2922,"core::result"],[2923,"core::any"],[2924,"core::option"],[2925,"core::cmp"],[2926,"core::iter::traits::collect"],[2927,"core::fmt"],[2928,"core::fmt"],[2929,"alloc::string"],[2930,"core::time"],[2931,"volatile::volatile_ptr"],[2932,"twizzler_runtime_api"],[2933,"twizzler_runtime_api"],[2934,"core::alloc::global"],[2935,"core::sync::atomic"],[2936,"twizzler_runtime_api"],[2937,"twizzler_runtime_api"]],"d":["Architecture-dependent code, will include submodules for …","When running a new program (and thus, initializing a new …","APIs for accessing the device tree and device …","Functions to deal with Kernel State Objects (KSOs). These …","Marker traits used to indicate safety for storing data in …","Types that make up object metadata.","Low-level object APIs, mostly around IDs and basic things …","","This mod implements the twizzler_runtime_api::Runtime …","Manage slots in the address space. Currently not finished.","Wrapper functions around for raw_syscall, providing a …","Functions for manipulating threads.","Functions for handling upcalls from the kernel.","","","Call into the kernel to perform a synchronous system call. …","Kernel init info, including initrd names.","Information about initrd object names.","Add a name to the name list.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Get an ID.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Get a name.","Get the name list.","Constructor.","New mapping from name to ID.","Constructor for a null name.","","","","","","","","A bus. This device has numerous children and should be …","All supported kernel-discovered bus types.","For MMIO registers, we may need to specify the caching …","A traditional “device”. It may still have children, …","A per-bus device ID.","","Possible flags for device interrupts.","The base struct for a device object.","Possible high-level device types.","","","An info sub-object, which is comprised of a …","A vector number (used by the kernel).","","An mmio object has, at its base, a MmioInfo struct. At …","","","A mapping of the MMIO registers for this device into an …","Info struct at the base of an mmio sub-object.","","","PCIe.","A device will have a number of sub-objects to present …","The “system” bus. Typically comprised of devices …","","An unknown device type. Should be ignored.","An unknown bus. Should be ignored.","","","","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","The cache type.","Poll an interrupt vector to see if it has fired.","Poll an interrupt vector to see if it has fired.","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","Device-specific info.","","","Inserts the specified flags in-place.","","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","The length of this mapping.","","Construct a new device repr.","","Returns the complement of this set of flags.","","","","","","","","Register an interrupt vector with this device.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","","","","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","Block until an interrupt fires.","","Allocate an interrupt for a device.","The standard PCIe bridge header. See the PCI spec for more …","","The standard PCIe device header. See the PCI spec for more …","The base struct for an info sub-object for a PCIe device.","The standard PCIe function header. See the PCI spec for …","The base struct for an info sub-object for a PCIe bus.","PCIe-specific crate::kso::KactionGenericCmd values.","Register a device ID.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a child object.","Get the root of the KSO tree.","Get a sub-object.","","","","An argument was invalid.","Maximum name length for a KSO.","A KAction command, either generic or KSO-specific.","Possible error values for KAction.","Possible flags for kaction.","A generic kaction command, applies to all KSOs.","A value to pass for a KAction.","The base struct for any kernel state object.","","","The object was not found.","","The request required a memory allocation that could not be …","Pin pages of object memory.","Release Pin","Failed to allocate a resource due to exhaustion.","","","","An unknown error.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Construct a new kernel state object header.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","If the value is an object ID, return it, otherwise return …","","","","","","","","","","Removes the specified flags in-place.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","If the value is a u64, return it, otherwise return None.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","If the value is an object ID, return it, otherwise panic.","If the value is a u64, return it, otherwise panic.","Tag for a base type. Each base type must have a unique tag.","Trait that all base types must implement.","Version for a base type.","This auto trait specifies that some type is “safe” to …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Construct a new base type.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns a list of valid tags and versions for this type.","","","","","","","","","A meta extension entry.","A tag for a meta extension entry.","Flags for objects.","The core metadata that all objects share.","A nonce for avoiding object ID collision.","","","","","","","","","","","","","","","","","The number of meta extensions.","The object flags.","","","","The number of FOT entries.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The object’s public key ID.","The ID nonce.","The tag of the base struct type.","The tag.","","","","","","","","","","","","","","","","","","","A tag-specific value.","The version of the base struct type.","Exec allowed.","The maximum size of an object, including null page and …","The size of the null page.","An object ID, represented as a transparent wrapper type. …","Mapping protections for mapping objects into the address …","Read allowed.","Write allowed.","Returns the set containing all flags.","","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Create a new ObjID out of a 128 bit value.","Build a new ObjID out of a high part and a low part.","Returns the complement of this set of flags.","","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Split an object ID into upper and lower values, useful for …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","Toggles the specified flags in-place.","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Get the initial kernel info for init. Only works for init.","","","","","Calls <code>U::from(self)</code>.","","Functions to start new executable programs.","","","Called from _start to initialize the runtime and pass …","","","","","","","","","","","","","","An object that contains an ELF file.","","","","Possible errors for spawn_new_executable.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Start a new executable in a new address space.","","","","","","","","","","","Fill the buffer with all clocks from the clock list, for …","The specified object is already a handle.","The backing memory type for this object. Currently doesn’…","","","Read from the kernel write buffer.","Change the thread’s state. Allowed transitions are: …","","Flags about a given clock or clock read.","ID used internally to read the appropriate clock source.","Information about a given clock source, including …","Different kinds of clocks exposed by the kernel.","Possible clock sources.","Read from the console itself.","","Commit an object creation.","Flags controlling how a particular object tie operates.","A specification of ties to create. (see the book for more …","If the buffer is full, discard this write instead of …","Delete an object.","Flags to control operation of the object delete operation.","Compare for equality","Contains the error value","Exit the thread. arg1 and arg2 should be code and location …","","","Fill the buffer with the first clock in the <code>ClockKind</code> list.","","","Get a thread’s affinity.","Get a thread’s priority.","Get the thread’s TLS pointer.","Get the Trap State for the thread.","Get the upcall pointer.","The specified handle type is already saturated.","Possible kernel handle types.","","Invert the decision test for sleeping the thread.","The input mechanism had an internal error.","One of the arguments was invalid.","One of the arguments was invalid.   ","An argument was invalid.","An argument was invalid.","An argument was invalid.","An argument was invalid.","An argument was invalid.","One of the arguments was invalid.   ","An argument was invalid.","One of the arguments was invalid.   ","One of the arguments was invalid.   ","The ID was invalid.","The specified ID was invalid.","The specified protections were invalid.","The reference was invalid.","The specified slot was invalid.","The specified slot was invalid.","The specified slot was invalid.","Apply a kernel action to an object (used for device …","Read data from the kernel console, either buffer or input.","Possible errors returned by reading from the kernel console…","Flags to pass to sys_kernel_console_read_buffer.","Possible errors returned by reading from the kernel console…","Flags to pass to sys_kernel_console_read.","Possible sources for a kernel console read syscall.","Write data to the kernel console.","Flags to pass to sys_kernel_console_write.","The base lifetime type of the object. Note that this does …","","Flags to pass to sys_object_map.","Information about an object mapping.","","","","","If the read would block, return instead.","If the operation would block, return instead.","","New Handle.","Possible error values for sys_new_handle.","Flags to pass to sys_new_handle.","Failed to read because there was no input mechanism made …","The default, let the kernel decide based on the …","The specified object was not found.","A specified object (handle) was not found.","","","Fill the buffer with only clocks from a given <code>ClockKind</code> …","Possible object control commands for sys_object_ctrl.","Possible error values for sys_object_ctrl.","Full object creation specification, minus ties.","Create new object.","Possible error returns for sys_object_create.","Flags to pass to the object create system call.","Manage in-kernel object properties.","Information about an object, according to the local kernel.","Map an object into address space.","Possible error values for sys_object_map.","A source or tie object was not found.","The specified object was not found.","Read mapping information.","Possible error values for sys_object_unmap.","","Specifications for an object-copy from a source object. …","Get kernel information about an object.","Possible error values for sys_object_stat.","Unmap an object.","Possible error values for sys_object_unmap.","Contains the success value","","This object is persistent, and should be deleted only …","","","Flags to pass to <code>sys_read_clock_info</code>.","Read clock information.","Possible error values for sys_read_clock_info.","List clock sources.","Possible error values for sys_read_clock_list.","Flags to pass to <code>sys_read_clock_list</code>.","Read a register from the thread’s CPU state. The thread …","","","Send a user-defined async or sync event to the thread.","Set a thread’s affinity.","Set a thread’s priority. Threads require special …","Set thread’s TLS pointer","Set the Trap State for the thread.","Set the thread’s upcall pointer (child threads in the …","","The kernel could not handle one of the source ranges.","Spawn a new thread.","Information about the system.","Returns system info.","All possible Synchronous syscalls into the Twizzler kernel.","Possible Thread Control operations","General thread control functions.","Arguments to pass to sys_spawn.","Possible error values for sys_spawn.","Flags to pass to sys_spawn.","Either a sleep or wake request. The syscall comprises of a …","Sync a thread with other threads using some number of …","Possible error returns for sys_thread_sync.","Flags to pass to sys_thread_sync.","Possible operations the kernel can perform when looking at …","A reference to a piece of data. May either be a …","Result of sync operations.","Specification for a thread sleep request.","Specification for a thread wake request.","","","The operation timed out.","Remove an object as a handle.","Flags to pass to sys_unbind_handle.","Unknown error.","Unknown error.","An unknown error occurred.","An unknown error occurred.","An unknown error occurred.","An unknown error occurred.","An unknown error occurred.","An unknown error occurred.","An unknown error occurred.","An unknown error occurred.","An unknown error.","","An unknown error occurred.","An unknown error occurred.","Flags to pass to sys_object_unmap.","","","","This object is volatile, and is expected to be deleted …","","Operation would block, but non-blocking was requested.","Operation would block, but non-blocking was requested.","Write a value to a register in the thread’s CPU state. …","Yield the thread’s CPU time now. The actual effect of …","","","","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","","","","The backing type of this object.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Apply the operation to two values, returning the result.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Number of threads to wake up.","Get the number of CPUs on the system.","The number of CPUs on this system. Hyperthreads are …","Get the current value of a clock source.","","The offset into the dest object to start the copy to.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Flags. Currently unused.","The mapping flags.","","Flags to apply to this sleep request.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","","","","","","","","","","","","","","","Returns a new instance of a Clock from the specified …","Get the result of the thread sync operation.","","","","","","","","","","","","","","","","","The ID of the source object.","The mapped object ID.","The ID of this object.","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Is the clock source monotonic?","The length of the copy.","The lifetime type of this object.","","The number of mappings in which this object participates.","","","","Construct a new ObjectSource.","Build a new object create specification.","Create a new CreateTieSpec.","","Construct a new ThreadSpawnArgs. If vm_context_handle is …","Construct a new thread sync sleep request. The kernel will …","Construct a new thread wake request. The reference works …","Construct a new ClockInfo. You probably want to be getting …","","","Build a sleep request.","Build a wake request.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Return the number associated with this syscall.","The operation to compare *reference and value to.","Get the page size of the system.","The size of a virtual address page on this system.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the precision of a clock source.","The protections of the mapping.","","","","Reference to an atomic u64 that we will compare to.","Reference to the word for which we will wake up threads …","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Get the resolution of a clock source.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","The slot.","The offset into the source object to start the copy.","","","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Shutdown the computer.","Get a SysInfo struct from the kernel.","Execute a kaction on an object.","Read from the kernel console input, placing data into …","Read from the kernel console buffer, placing data into …","Write to the kernel console.","Make a new handle object.","Create an object, returning either its ID or an error.","Perform a kernel operation on this object.","Map an object into the address space with the specified …","Reads the map information about a given slot in the …","Read information about a given object.","Unmaps an object from the address space specified by <code>handle</code>…","Read information about a give clock, as specified by clock …","Discover a list of clock sources exposed by the kernel.","Spawn a new thread, returning the ObjID of the thread’s …","","Exit the thread. The code will be written to the …","Set the upcall location for this thread.","Set the current kernel thread’s TLS pointer. On x86_64, …","Perform a number of ThreadSync operations, either waking …","Yield the thread’s CPU time now. The actual effect of …","Unbind an object from handle status.","The number of ties from this object.","The number of ties to this object.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-placeeturns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","The value used for the comparison.","The version of this data structure, to allow expansion.","","Possible execution states for a thread. The transitions …","The thread has terminated, and will never run again.","The thread is running or waiting to be scheduled on a CPU.","The thread is sleeping, waiting for a condition in-kernel.","The thread is suspended, and will not resume until …","Base type for a thread object.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Wait for a thread’s status to change, optionally timing …","Basic structure of an async event sent to a thread queue.","The basic structure of an async event completion message.","Async event completion flags. Reserved for future use.","Async event flags.","Maximum number of aux data slots.","The sender did not (or does not) want to wait for the …","Returns the set containing all flags.","Returns the set containing all flags.","API-specific data.","API-specific data.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","Flags for this event.","Flags about this completion. Reserved for future use.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","API-specific message.","Construct a new AsyncEvent.","Construct a new AsyncEventCompletion.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","","Removes the specified flags in-place.","Removes the specified flags in-place.","The sender thread’s control ID, or 0 for kernel.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","API-specific status code.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","Information about an exception.","","Kinds of memory access.","","Information about a non-object-related memory access …","","Kinds of object memory errors.","","Information about a memory access error to an object.","","","Arch-specific frame info for upcall.","Possible upcall reasons and info.","","The kind of memory access that caused the error.","","","","","","","","","","","","","","","","Get the base pointer of the frame.","","CPU-reported exception code.","","The kind of error.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Arch-specific additional info.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Get the instruction pointer of the frame.","","Construct new exception info.","","","Object ID of attempted access.","","","","","","","","","","","","","","","","","","","","Get the stack pointer of the frame.","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,6,5,6,6,6,5,6,6,5,6,6,5,5,6,6,6,5,6,5,6,5,6,16,0,0,16,0,0,0,0,0,22,22,18,0,22,0,0,19,18,0,0,22,17,0,17,19,16,17,19,19,19,11,11,11,11,11,11,11,11,171,13,16,17,18,19,28,11,20,21,22,171,13,16,17,18,19,28,11,20,21,22,0,13,28,13,13,16,17,18,19,11,20,21,22,16,17,18,19,11,20,21,22,16,17,18,19,11,20,21,11,11,13,13,11,11,16,17,18,19,11,20,21,11,171,13,16,17,18,19,28,11,11,11,11,11,20,21,22,171,13,16,17,18,19,28,11,20,21,22,11,11,11,11,19,11,28,13,28,11,13,11,11,171,13,16,17,18,19,28,11,20,21,22,11,11,28,13,13,21,11,16,17,18,19,11,20,21,13,11,11,13,11,11,13,11,171,13,28,171,16,17,18,19,11,20,21,22,13,11,171,13,16,17,18,18,19,28,11,20,20,21,22,22,171,13,16,17,18,19,28,11,20,21,22,171,13,16,17,18,19,28,11,20,21,22,11,171,13,0,45,0,0,0,0,0,0,0,45,39,40,39,40,39,39,39,39,38,45,42,43,38,39,40,41,45,42,43,38,39,40,41,40,42,43,42,38,39,40,39,43,38,38,39,40,41,38,39,40,41,38,43,43,38,39,40,42,43,38,40,39,40,45,42,43,38,39,40,41,43,0,38,41,39,40,39,40,45,42,43,38,39,40,41,40,40,40,40,38,39,40,40,39,41,40,40,40,40,40,43,38,43,38,40,40,40,42,43,38,43,38,40,39,39,38,39,40,41,45,45,42,43,38,39,40,41,45,42,43,38,39,40,41,45,42,43,38,39,40,41,43,38,51,50,50,50,52,0,0,49,0,0,0,0,0,0,0,52,52,49,48,49,50,50,49,51,48,47,49,46,47,46,47,46,47,46,47,46,47,46,47,46,47,46,47,30,52,48,49,46,50,51,47,30,52,48,49,46,50,51,47,48,49,46,50,51,47,48,49,46,50,51,47,48,49,46,50,51,47,46,47,46,47,46,47,46,47,48,49,46,50,51,47,46,47,30,48,49,46,46,46,46,46,50,51,47,47,47,47,47,30,52,48,48,49,49,46,50,51,47,46,47,46,47,46,47,46,47,46,47,46,47,46,47,46,47,30,52,48,49,46,50,51,47,46,47,46,47,30,46,47,48,0,0,0,48,49,46,50,51,47,46,47,46,47,46,47,46,47,46,47,48,49,46,50,51,47,30,46,47,30,52,48,49,46,50,50,51,51,47,30,52,48,49,46,50,51,47,30,52,48,49,46,50,51,47,48,46,47,0,0,0,48,48,0,0,0,0,33,34,33,34,33,34,33,34,33,34,33,34,172,33,34,172,33,34,33,34,33,34,33,34,0,0,0,0,0,173,174,53,54,55,173,174,53,54,55,53,54,55,53,54,55,173,173,53,54,55,173,173,174,53,54,55,173,174,53,54,55,173,173,173,174,53,54,55,173,174,53,54,55,173,174,53,54,55,173,174,53,54,55,174,173,56,0,0,0,0,56,56,56,7,7,56,56,56,56,56,56,56,7,56,7,56,7,56,7,56,7,56,56,56,56,56,7,56,56,7,7,7,7,56,56,56,56,56,7,7,56,56,56,56,56,56,7,56,56,56,56,7,56,56,56,7,7,56,7,56,56,56,7,56,56,56,7,56,7,56,7,56,7,56,7,56,56,0,0,60,64,62,66,0,0,0,0,0,0,59,60,61,62,63,64,65,66,59,60,61,62,63,64,65,66,59,60,61,62,63,64,65,66,59,60,61,62,63,64,65,66,59,63,59,60,61,62,63,64,65,66,61,65,59,60,61,62,63,64,65,66,59,60,61,62,63,64,65,66,59,60,61,62,63,64,65,66,59,60,61,62,63,64,65,66,59,61,63,65,59,60,61,62,63,64,65,66,59,60,61,62,63,64,65,66,59,60,61,62,63,64,65,66,59,60,61,62,63,64,65,66,59,60,61,62,63,64,65,66,0,0,68,68,68,68,68,68,68,68,68,68,68,68,68,68,0,68,68,68,68,68,68,0,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,0,92,92,92,0,92,92,91,92,91,91,92,91,92,91,0,92,91,92,91,92,91,0,0,0,0,107,122,0,152,152,155,153,0,0,0,0,0,0,155,154,131,0,0,95,131,0,109,156,153,0,0,107,102,0,153,153,153,153,153,122,0,152,104,114,121,122,126,127,128,130,132,135,138,150,151,130,132,126,138,126,127,128,1,1,0,0,0,0,0,1,0,0,105,0,0,0,0,141,0,93,94,0,1,0,0,114,117,122,135,1,1,107,0,0,0,1,0,0,1,0,1,0,121,126,1,0,136,0,1,0,1,0,156,123,118,0,0,0,1,0,1,0,0,153,141,0,153,153,153,153,153,153,139,121,1,0,1,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,138,1,0,114,115,121,122,126,127,128,130,132,135,138,141,150,151,0,136,136,123,118,139,114,115,153,153,140,143,108,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,134,108,108,133,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,155,114,93,115,94,95,116,117,118,96,97,119,120,121,122,123,98,99,124,125,126,100,127,101,128,129,130,102,131,132,133,103,134,135,153,109,104,136,32,137,138,139,105,140,141,142,143,108,154,144,145,146,147,148,149,150,151,106,107,152,1,155,114,93,115,94,95,116,117,118,96,97,119,120,121,122,123,98,99,124,125,126,100,127,101,128,129,130,102,131,132,133,103,134,135,153,109,104,136,32,137,138,139,105,140,141,142,143,108,154,144,145,146,147,148,149,150,151,106,107,152,1,109,108,114,93,115,94,95,116,117,118,96,97,119,120,121,122,123,98,99,124,125,126,100,127,101,128,129,130,102,131,132,133,103,134,135,109,104,136,32,137,138,139,105,140,141,142,143,108,144,145,146,147,148,149,150,151,106,107,152,1,114,93,115,94,95,116,117,118,96,97,119,120,121,122,123,98,99,124,125,126,100,127,101,128,129,130,102,131,132,133,103,134,135,109,104,136,32,137,138,139,105,140,141,142,143,108,144,145,146,147,148,149,150,151,106,107,152,1,93,94,95,116,117,118,96,97,119,120,121,122,123,98,99,124,125,126,100,127,101,128,129,130,102,132,133,103,134,135,153,109,104,136,32,137,138,139,105,150,106,107,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,137,124,124,140,117,116,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,134,93,94,95,116,117,118,96,97,119,120,121,122,123,98,99,124,125,126,100,127,101,128,129,130,102,132,133,103,134,135,153,109,104,136,32,137,138,139,105,108,144,145,146,147,148,149,150,106,107,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,124,129,134,32,114,114,93,93,93,93,93,115,115,94,94,94,94,94,95,95,95,95,95,116,117,118,96,96,96,96,96,97,97,97,97,97,119,120,121,121,122,122,123,98,98,98,98,98,99,99,99,99,99,124,125,126,126,100,100,100,100,100,127,127,101,101,101,101,101,128,128,129,130,130,102,102,102,102,102,131,132,132,133,103,103,103,103,103,134,135,135,153,109,104,104,104,104,104,136,32,137,138,138,139,105,105,105,105,105,140,141,142,143,108,154,144,145,146,147,148,149,150,150,151,151,106,106,106,106,106,107,107,107,107,107,152,1,155,155,114,114,93,115,115,94,95,116,117,118,96,97,119,120,121,121,122,122,123,98,99,124,125,126,126,100,100,127,127,101,128,128,129,130,130,102,131,132,132,133,103,134,135,135,153,153,109,104,136,32,137,138,138,139,105,140,141,141,142,143,108,154,144,144,145,146,147,147,148,149,150,150,151,151,106,107,152,152,1,1,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,108,143,139,93,94,95,96,97,98,99,125,100,101,102,103,104,105,106,107,116,129,133,143,143,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,155,114,93,115,94,95,116,117,118,96,97,119,120,121,122,123,98,99,124,125,126,126,100,127,101,128,129,130,102,131,132,133,103,134,135,153,109,104,136,32,137,138,139,105,140,141,142,143,108,154,144,145,146,147,148,149,150,151,106,107,152,1,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,140,116,133,136,133,144,147,149,116,119,120,125,134,32,137,140,143,108,139,139,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,1,32,124,124,93,94,95,116,117,118,96,97,119,120,121,122,123,98,99,124,125,126,100,127,101,128,129,130,102,132,133,103,134,135,153,109,104,136,32,137,138,139,105,150,106,107,125,140,129,143,32,139,32,137,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,140,93,94,95,96,97,98,99,100,101,102,103,104,105,143,106,107,129,116,134,134,93,94,95,96,97,98,99,100,101,102,103,104,105,108,106,107,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,133,133,134,114,93,115,94,95,116,117,118,96,97,119,120,121,122,123,98,99,124,125,126,100,127,101,128,129,130,102,131,132,133,103,134,135,109,104,136,32,137,138,139,105,140,141,142,143,108,144,145,146,147,148,149,150,151,106,107,152,1,114,115,121,122,126,127,128,130,132,135,138,150,151,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,155,114,93,115,94,95,116,117,118,96,97,119,120,121,122,123,123,98,99,124,125,126,100,127,101,128,129,130,102,131,131,132,133,103,134,135,153,109,104,136,32,137,138,139,105,140,141,142,143,108,154,144,145,146,147,148,149,149,149,150,151,106,107,152,1,155,114,93,115,94,95,116,117,118,96,97,119,120,121,122,123,98,99,124,125,126,100,127,101,128,129,130,102,131,132,133,103,134,135,153,109,104,136,32,137,138,139,105,140,141,142,143,108,154,144,145,146,147,148,149,150,151,106,107,152,1,155,114,93,115,94,95,116,117,118,96,97,119,120,121,122,123,98,99,124,125,126,100,127,101,128,129,130,102,131,132,133,103,134,135,153,109,104,136,32,137,138,139,105,140,141,142,143,108,154,144,145,146,147,148,149,150,151,106,107,152,1,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,32,124,134,0,157,157,157,157,0,158,157,158,157,157,157,157,158,157,0,157,158,157,158,158,157,158,158,157,157,158,158,157,158,157,158,157,158,157,158,0,0,0,0,0,159,159,160,161,162,159,160,159,160,159,160,159,160,159,160,159,160,159,160,161,159,162,160,161,159,162,160,161,159,162,160,161,159,162,160,161,159,162,160,159,160,159,160,159,160,159,160,161,159,162,160,159,160,161,162,161,159,159,159,159,159,162,160,160,160,160,160,161,159,162,160,159,160,159,160,159,160,159,160,161,159,162,160,159,160,159,160,159,160,161,159,162,160,159,160,159,160,161,161,162,159,160,161,159,162,160,159,160,161,159,160,162,159,160,159,160,159,160,161,159,162,160,159,160,161,159,162,160,161,159,162,160,161,159,162,160,159,160,170,0,165,0,170,0,168,0,170,0,168,165,0,0,165,167,169,164,166,167,168,169,165,170,164,166,167,168,169,165,170,164,165,166,165,167,166,167,168,169,165,170,164,166,167,168,169,165,170,166,164,166,167,168,169,165,170,164,169,166,167,169,167,165,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,166,167,168,169,165,170,164,166,167,168,169,165,170,164,166,167,168,169,165,170],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,[3,[2]]],[[4,[2,2]]]],0,0,[[5,6],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[6,6],[[-1,-2],4,[],[]],[-1,-1,[]],[-1,-1,[]],[6,7],[-1,-2,[],[]],[-1,-2,[],[]],[6,8],[5,[[3,[6]]]],[[],5],[[8,7],6],[[],6],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],11],[[11,11],11],[[11,11],4],[[11,11],11],[[11,11],4],[11,12],[[11,11],11],[[11,11],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[13,14],[[15,[2]]]],[[13,14],[[15,[2]]]],[16,16],[17,17],[18,18],[19,19],[11,11],[20,20],[21,21],[22,22],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[16,16],23],[[17,17],23],[[18,18],23],[[19,19],23],[[11,11],23],[[20,20],23],[[21,21],23],[11,11],[[11,11],24],0,0,[[11,11],11],[[],11],[[16,16],24],[[17,17],24],[[18,18],24],[[19,19],24],[[11,11],24],[[20,20],24],[[21,21],24],[[11,-1],4,25],0,[[13,26],27],[[16,26],27],[[17,26],27],[[18,26],27],[[19,26],27],[[28,26],27],[[11,26],27],[[11,26],27],[[11,26],27],[[11,26],27],[[11,26],27],[[20,26],27],[[21,26],27],[[22,26],27],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[12,[[15,[11]]]],[12,11],[12,11],[-1,11,25],[[19,-1],4,29],[[11,-1],4,29],0,[-1,13,[]],[-1,28,[]],[[11,11],4],0,[[11,11],11],[[11,11],24],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[11,24],[11,24],0,0,[[30,16,17,21],13],[31,21],[11,11],[[16,16],[[15,[23]]]],[[17,17],[[15,[23]]]],[[18,18],[[15,[23]]]],[[19,19],[[15,[23]]]],[[11,11],[[15,[23]]]],[[20,20],[[15,[23]]]],[[21,21],[[15,[23]]]],[[13,14,20,11],4],[[11,11],4],[[11,11,24],4],[[13,14],32],[[11,11],11],[[11,11],4],[[13,22,2],4],[[11,11],11],0,[[],[[3,[[4,[33,34]]]]]],[[],[[3,[[4,[33,34]]]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,35,[]],[[11,11],4],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[36,[[9,[18,4]]]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[2,[[9,[20]]]],[-1,[[9,[-2]]],[],[]],[14,[[9,[22]]]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[[11,11],11],0,[[13,14,[15,[37]]],2],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,[38,38],[39,39],[40,40],[41,41],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],0,0,0,0,0,0,[[42,26],27],[[43,26],27],[[38,26],27],[[40,26],27],0,0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[[[44,[39]],14],[[44,[31]]]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[31,[[9,[45]]]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],46],[[],47],[[46,46],46],[[47,47],47],[[46,46],4],[[47,47],4],[[46,46],46],[[47,47],47],[[46,46],4],[[47,47],4],[46,2],[47,31],[[46,46],46],[[47,47],47],[[46,46],4],[[47,47],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[48,48],[49,49],[46,46],[50,50],[51,51],[47,47],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[48,48],23],[[49,49],23],[[46,46],23],[[50,50],23],[[51,51],23],[[47,47],23],[46,46],[47,47],[[46,46],24],[[47,47],24],[[46,46],46],[[47,47],47],[[],46],[[],47],[[48,48],24],[[49,49],24],[[46,46],24],[[50,50],24],[[51,51],24],[[47,47],24],[[46,-1],4,25],[[47,-1],4,25],[[30,26],27],[[48,26],27],[[49,26],27],[[46,26],27],[[46,26],27],[[46,26],27],[[46,26],27],[[46,26],27],[[50,26],27],[[51,26],27],[[47,26],27],[[47,26],27],[[47,26],27],[[47,26],27],[[47,26],27],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[4,[2,2]]],48],[-1,-1,[]],[2,49],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[2,[[15,[46]]]],[31,[[15,[47]]]],[2,46],[31,47],[2,46],[31,47],[-1,46,25],[-1,47,25],[[46,-1],4,29],[[47,-1],4,29],[[46,46],4],[[47,47],4],[[46,46],46],[[47,47],47],[[46,46],24],[[47,47],24],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[46,24],[47,24],[46,24],[47,24],[8,30],[46,46],[47,47],[48,[[15,[7]]]],[[52,47],2],[[2,14],[[15,[2]]]],[[31,14],[[15,[2]]]],[[48,48],[[15,[23]]]],[[49,49],[[15,[23]]]],[[46,46],[[15,[23]]]],[[50,50],[[15,[23]]]],[[51,51],[[15,[23]]]],[[47,47],[[15,[23]]]],[[46,46],4],[[47,47],4],[[46,46,24],4],[[47,47,24],4],[[46,46],46],[[47,47],47],[[46,46],4],[[47,47],4],[[46,46],46],[[47,47],47],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,35,[]],[[46,46],4],[[47,47],4],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[31,[[9,[50,49]]]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[2,[[9,[51,49]]]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[48,[[15,[2]]]],[[46,46],46],[[47,47],47],[2,[[15,[[4,[52,47]]]]]],[2,[[15,[[4,[2,14]]]]]],[2,[[15,[[4,[31,14]]]]]],[48,7],[48,2],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[33,33],[34,34],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[33,26],27],[[34,26],27],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[3,[[4,[33,34]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[53,53],[54,54],[55,55],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],0,0,[[53,26],27],[[54,26],27],[[55,26],27],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],0,0,0,0,0,0,0,0,0,[[],56],[7,7],[7,57],[[56,56],56],[[56,56],4],[[56,56],56],[[56,56],4],[56,31],[[56,56],56],[[56,56],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[7,7],[56,56],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[7,7],23],[[56,56],23],[56,56],[[56,56],24],[[56,56],56],[[],56],[[7,7],24],[[56,56],24],[[56,-1],4,25],[[7,26],27],[[7,26],27],[[7,26],27],[[7,26],27],[[56,26],27],[[56,26],27],[[56,26],27],[[56,26],27],[[56,26],27],[-1,-1,[]],[57,7],[-1,-1,[]],[58,56],[31,[[15,[56]]]],[31,56],[31,56],[-1,56,25],[[7,-1],4,29],[[56,-1],4,29],[[56,56],4],[[56,56],56],[[56,56],24],[-1,-2,[],[]],[-1,-2,[],[]],[56,24],[56,24],[57,7],[[2,2],7],[56,56],[[7,7],[[15,[23]]]],[[56,56],[[15,[23]]]],[[56,56],4],[[56,56,24],4],[7,[[4,[2,2]]]],[[56,56],56],[[56,56],4],[[56,56],56],[-1,-2,[],[]],[-1,-2,[],[]],[-1,35,[]],[[56,56],4],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[[56,56],56],0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[59,59],[60,60],[61,61],[62,62],[63,63],[64,64],[65,65],[66,66],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[59,60],[63,64],[[59,59],23],[[60,60],23],[[61,61],23],[[62,62],23],[[63,63],23],[[64,64],23],[[65,65],23],[[66,66],23],[61,62],[65,66],[[59,59],24],[[60,60],24],[[61,61],24],[[62,62],24],[[63,63],24],[[64,64],24],[[65,65],24],[[66,66],24],[[59,26],27],[[60,26],27],[[61,26],27],[[62,26],27],[[63,26],27],[[64,26],27],[[65,26],27],[[66,26],27],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[60,59],[62,61],[64,63],[66,65],[[59,59],[[15,[23]]]],[[60,60],[[15,[23]]]],[[61,61],[[15,[23]]]],[[62,62],[[15,[23]]]],[[63,63],[[15,[23]]]],[[64,64],[[15,[23]]]],[[65,65],[[15,[23]]]],[[66,66],[[15,[23]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],0,[[],67],[68,69],[68,70],[68,71],[-1,-2,[],[]],[-1,-2,[],[]],[[],68],[68,72],[[68,73],69],[-1,-1,[]],[[68,74,31,[15,[37]]],24],[[68,74],24],[[68,74],4],[68,[[15,[75]]]],[[68,76],[[15,[77]]]],[[],5],[[68,75],[[15,[76]]]],[[68,76,14],[[15,[78]]]],[68,37],[68,37],[-1,-2,[],[]],[[68,31,[15,[37]]],[[9,[4,79]]]],0,[[68,80,58],[[9,[77,81]]]],[[68,77],4],[[68,82],69],[[68,83],4],[[68,37],4],[[68,84],[[9,[31,85]]]],[[68,86],36],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[[68,77],4],[[68,[87,[4]]],4],[[68,[87,[[9,[14,88]]]]],[[9,[14,88]]]],[[68,[90,[[9,[14,89]]]]],[[9,[14,89]]]],[[68,[87,[[9,[14,88]]]]],[[9,[14,88]]]],[68,4],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[91,26],27],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[7,[3,[[3,[36]]]],[3,[[3,[36]]]]],[[9,[7,92]]]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],93],[[],94],[[],95],[[],96],[[],97],[[],98],[[],99],[[],100],[[],101],[[],102],[[],103],[[],104],[[],105],[[],106],[[],107],0,[108,57],[108,57],0,[[93,93],93],[[94,94],94],[[95,95],95],[[96,96],96],[[97,97],97],[[98,98],98],[[99,99],99],[[100,100],100],[[101,101],101],[[102,102],102],[[103,103],103],[[104,104],104],[[105,105],105],[[106,106],106],[[107,107],107],[[93,93],4],[[94,94],4],[[95,95],4],[[96,96],4],[[97,97],4],[[98,98],4],[[99,99],4],[[100,100],4],[[101,101],4],[[102,102],4],[[103,103],4],[[104,104],4],[[105,105],4],[[106,106],4],[[107,107],4],[[93,93],93],[[94,94],94],[[95,95],95],[[96,96],96],[[97,97],97],[[98,98],98],[[99,99],99],[[100,100],100],[[101,101],101],[[102,102],102],[[103,103],103],[[104,104],104],[[105,105],105],[[106,106],106],[[107,107],107],[[93,93],4],[[94,94],4],[[95,95],4],[[96,96],4],[[97,97],4],[[98,98],4],[[99,99],4],[[100,100],4],[[101,101],4],[[102,102],4],[[103,103],4],[[104,104],4],[[105,105],4],[[106,106],4],[[107,107],4],[93,2],[94,2],[95,2],[96,31],[97,31],[98,2],[99,2],[100,31],[101,31],[102,2],[103,31],[104,31],[105,31],[106,31],[107,31],[[93,93],93],[[94,94],94],[[95,95],95],[[96,96],96],[[97,97],97],[[98,98],98],[[99,99],99],[[100,100],100],[[101,101],101],[[102,102],102],[[103,103],103],[[104,104],104],[[105,105],105],[[106,106],106],[[107,107],107],[[93,93],4],[[94,94],4],[[95,95],4],[[96,96],4],[[97,97],4],[[98,98],4],[[99,99],4],[[100,100],4],[[101,101],4],[[102,102],4],[[103,103],4],[[104,104],4],[[105,105],4],[[106,106],4],[[107,107],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[109,-1,-1],24,[110,111,112,113]],[[108,108],[[15,[108]]]],[114,114],[93,93],[115,115],[94,94],[95,95],[116,116],[117,117],[118,118],[96,96],[97,97],[119,119],[120,120],[121,121],[122,122],[123,123],[98,98],[99,99],[124,124],[125,125],[126,126],[100,100],[127,127],[101,101],[128,128],[129,129],[130,130],[102,102],[131,131],[132,132],[133,133],[103,103],[134,134],[135,135],[109,109],[104,104],[136,136],[32,32],[137,137],[138,138],[139,139],[105,105],[140,140],[141,141],[142,142],[143,143],[108,108],[144,144],[145,145],[146,146],[147,147],[148,148],[149,149],[150,150],[151,151],[106,106],[107,107],[152,152],[1,1],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[93,93],23],[[94,94],23],[[95,95],23],[[116,116],23],[[117,117],23],[[118,118],23],[[96,96],23],[[97,97],23],[[119,119],23],[[120,120],23],[[121,121],23],[[122,122],23],[[123,123],23],[[98,98],23],[[99,99],23],[[124,124],23],[[125,125],23],[[126,126],23],[[100,100],23],[[127,127],23],[[101,101],23],[[128,128],23],[[129,129],23],[[130,130],23],[[102,102],23],[[132,132],23],[[133,133],23],[[103,103],23],[[134,134],23],[[135,135],23],[[153,153],23],[[109,109],23],[[104,104],23],[[136,136],23],[[32,32],23],[[137,137],23],[[138,138],23],[[139,139],23],[[105,105],23],[[150,150],23],[[106,106],23],[[107,107],23],[93,93],[94,94],[95,95],[96,96],[97,97],[98,98],[99,99],[100,100],[101,101],[102,102],[103,103],[104,104],[105,105],[106,106],[107,107],[[93,93],24],[[94,94],24],[[95,95],24],[[96,96],24],[[97,97],24],[[98,98],24],[[99,99],24],[[100,100],24],[[101,101],24],[[102,102],24],[[103,103],24],[[104,104],24],[[105,105],24],[[106,106],24],[[107,107],24],0,[124,71],0,[140,108],[[],117],0,[[93,93],93],[[94,94],94],[[95,95],95],[[96,96],96],[[97,97],97],[[98,98],98],[[99,99],99],[[100,100],100],[[101,101],101],[[102,102],102],[[103,103],103],[[104,104],104],[[105,105],105],[[106,106],106],[[107,107],107],[[],93],[[],94],[[],95],[[],96],[[],97],[[],98],[[],99],[[],100],[[],101],[[],102],[[],103],[[],104],[[],105],[[],106],[[],107],0,[[93,93],24],[[94,94],24],[[95,95],24],[[116,116],24],[[117,117],24],[[118,118],24],[[96,96],24],[[97,97],24],[[119,119],24],[[120,120],24],[[121,121],24],[[122,122],24],[[123,123],24],[[98,98],24],[[99,99],24],[[124,124],24],[[125,125],24],[[126,126],24],[[100,100],24],[[127,127],24],[[101,101],24],[[128,128],24],[[129,129],24],[[130,130],24],[[102,102],24],[[132,132],24],[[133,133],24],[[103,103],24],[[134,134],24],[[135,135],24],[[153,153],24],[[109,109],24],[[104,104],24],[[136,136],24],[[32,32],24],[[137,137],24],[[138,138],24],[[139,139],24],[[105,105],24],[[108,108],24],[[144,144],24],[[145,145],24],[[146,146],24],[[147,147],24],[[148,148],24],[[149,149],24],[[150,150],24],[[106,106],24],[[107,107],24],[[93,-1],4,25],[[94,-1],4,25],[[95,-1],4,25],[[96,-1],4,25],[[97,-1],4,25],[[98,-1],4,25],[[99,-1],4,25],[[100,-1],4,25],[[101,-1],4,25],[[102,-1],4,25],[[103,-1],4,25],[[104,-1],4,25],[[105,-1],4,25],[[106,-1],4,25],[[107,-1],4,25],0,0,0,0,[[114,26],27],[[114,26],27],[[93,26],27],[[93,26],27],[[93,26],27],[[93,26],27],[[93,26],27],[[115,26],27],[[115,26],27],[[94,26],27],[[94,26],27],[[94,26],27],[[94,26],27],[[94,26],27],[[95,26],27],[[95,26],27],[[95,26],27],[[95,26],27],[[95,26],27],[[116,26],27],[[117,26],27],[[118,26],27],[[96,26],27],[[96,26],27],[[96,26],27],[[96,26],27],[[96,26],27],[[97,26],27],[[97,26],27],[[97,26],27],[[97,26],27],[[97,26],27],[[119,26],27],[[120,26],27],[[121,26],27],[[121,26],27],[[122,26],27],[[122,26],27],[[123,26],27],[[98,26],27],[[98,26],27],[[98,26],27],[[98,26],27],[[98,26],27],[[99,26],27],[[99,26],27],[[99,26],27],[[99,26],27],[[99,26],27],[[124,26],27],[[125,26],27],[[126,26],27],[[126,26],27],[[100,26],27],[[100,26],27],[[100,26],27],[[100,26],27],[[100,26],27],[[127,26],27],[[127,26],27],[[101,26],27],[[101,26],27],[[101,26],27],[[101,26],27],[[101,26],27],[[128,26],27],[[128,26],27],[[129,26],27],[[130,26],27],[[130,26],27],[[102,26],27],[[102,26],27],[[102,26],27],[[102,26],27],[[102,26],27],[[131,26],27],[[132,26],27],[[132,26],27],[[133,26],27],[[103,26],27],[[103,26],27],[[103,26],27],[[103,26],27],[[103,26],27],[[134,26],27],[[135,26],27],[[135,26],27],[[153,26],27],[[109,26],27],[[104,26],27],[[104,26],27],[[104,26],27],[[104,26],27],[[104,26],27],[[136,26],27],[[32,26],27],[[137,26],27],[[138,26],27],[[138,26],27],[[139,26],27],[[105,26],27],[[105,26],27],[[105,26],27],[[105,26],27],[[105,26],27],[[140,26],27],[[141,26],27],[[142,26],27],[[143,26],27],[[108,26],27],[[154,26],27],[[144,26],27],[[145,26],27],[[146,26],27],[[147,26],27],[[148,26],27],[[149,26],27],[[150,26],27],[[150,26],27],[[151,26],27],[[151,26],27],[[106,26],27],[[106,26],27],[[106,26],27],[[106,26],27],[[106,26],27],[[107,26],27],[[107,26],27],[[107,26],27],[[107,26],27],[[107,26],27],[[152,26],27],[[1,26],27],[-1,-1,[]],[2,155],[2,114],[-1,-1,[]],[-1,-1,[]],[2,115],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[2,121],[-1,-1,[]],[-1,-1,[]],[2,122],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[2,126],[-1,-1,[]],[58,100],[-1,-1,[]],[-1,-1,[]],[2,127],[-1,-1,[]],[2,128],[-1,-1,[]],[-1,-1,[]],[2,130],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[2,132],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[2,135],[-1,-1,[]],[-1,-1,[]],[2,153],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[2,138],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[2,141],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[149,144],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[149,147],[-1,-1,[]],[-1,-1,[]],[2,150],[-1,-1,[]],[-1,-1,[]],[2,151],[-1,-1,[]],[-1,-1,[]],[2,152],[-1,-1,[]],[-1,-1,[]],[14,1],[2,[[15,[93]]]],[2,[[15,[94]]]],[2,[[15,[95]]]],[31,[[15,[96]]]],[31,[[15,[97]]]],[2,[[15,[98]]]],[2,[[15,[99]]]],[31,[[15,[100]]]],[31,[[15,[101]]]],[2,[[15,[102]]]],[31,[[15,[103]]]],[31,[[15,[104]]]],[31,[[15,[105]]]],[31,[[15,[106]]]],[31,[[15,[107]]]],[2,93],[2,94],[2,95],[31,96],[31,97],[2,98],[2,99],[31,100],[31,101],[2,102],[31,103],[31,104],[31,105],[31,106],[31,107],[2,93],[2,94],[2,95],[31,96],[31,97],[2,98],[2,99],[31,100],[31,101],[2,102],[31,103],[31,104],[31,105],[31,106],[31,107],[2,108],[-1,93,25],[-1,94,25],[-1,95,25],[-1,96,25],[-1,97,25],[-1,98,25],[-1,99,25],[-1,100,25],[-1,101,25],[-1,102,25],[-1,103,25],[-1,104,25],[-1,105,25],[-1,106,25],[-1,107,25],[2,108],[2,108],[141,143],[139,156],[[93,-1],4,29],[[94,-1],4,29],[[95,-1],4,29],[[96,-1],4,29],[[97,-1],4,29],[[98,-1],4,29],[[99,-1],4,29],[[125,-1],4,29],[[100,-1],4,29],[[101,-1],4,29],[[102,-1],4,29],[[103,-1],4,29],[[104,-1],4,29],[[105,-1],4,29],[[106,-1],4,29],[[107,-1],4,29],0,0,0,[143,140],0,[[93,93],4],[[94,94],4],[[95,95],4],[[96,96],4],[[97,97],4],[[98,98],4],[[99,99],4],[[100,100],4],[[101,101],4],[[102,102],4],[[103,103],4],[[104,104],4],[[105,105],4],[[106,106],4],[[107,107],4],[[93,93],93],[[94,94],94],[[95,95],95],[[96,96],96],[[97,97],97],[[98,98],98],[[99,99],99],[[100,100],100],[[101,101],101],[[102,102],102],[[103,103],103],[[104,104],104],[[105,105],105],[[106,106],106],[[107,107],107],[[93,93],24],[[94,94],24],[[95,95],24],[[96,96],24],[[97,97],24],[[98,98],24],[[99,99],24],[[100,100],24],[[101,101],24],[[102,102],24],[[103,103],24],[[104,104],24],[[105,105],24],[[106,106],24],[[107,107],24],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[126,81],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[93,24],[94,24],[95,24],[96,24],[97,24],[98,24],[99,24],[100,24],[101,24],[102,24],[103,24],[104,24],[105,24],[106,24],[107,24],[93,24],[94,24],[95,24],[96,24],[97,24],[98,24],[99,24],[100,24],[101,24],[102,24],[103,24],[104,24],[105,24],[106,24],[107,24],[140,24],0,0,[136,2],0,[[144,2]],[[147,2]],[[149,2]],[[7,2,2,14],116],[[117,118,[15,[7]],96],119],[[7,97],120],[2,125],[[14,14,14,14,14,103,[15,[7]]],134],[[136,2,109,104],32],[[136,14],137],[[108,149,149,105],140],[[140,142,141],143],[[2,2],108],[32,139],[137,139],[93,93],[94,94],[95,95],[96,96],[97,97],[98,98],[99,99],[100,100],[101,101],[102,102],[103,103],[104,104],[105,105],[106,106],[107,107],[1,2],0,[124,14],0,[[93,93],[[15,[23]]]],[[94,94],[[15,[23]]]],[[95,95],[[15,[23]]]],[[116,116],[[15,[23]]]],[[117,117],[[15,[23]]]],[[118,118],[[15,[23]]]],[[96,96],[[15,[23]]]],[[97,97],[[15,[23]]]],[[119,119],[[15,[23]]]],[[120,120],[[15,[23]]]],[[121,121],[[15,[23]]]],[[122,122],[[15,[23]]]],[[123,123],[[15,[23]]]],[[98,98],[[15,[23]]]],[[99,99],[[15,[23]]]],[[124,124],[[15,[23]]]],[[125,125],[[15,[23]]]],[[126,126],[[15,[23]]]],[[100,100],[[15,[23]]]],[[127,127],[[15,[23]]]],[[101,101],[[15,[23]]]],[[128,128],[[15,[23]]]],[[129,129],[[15,[23]]]],[[130,130],[[15,[23]]]],[[102,102],[[15,[23]]]],[[132,132],[[15,[23]]]],[[133,133],[[15,[23]]]],[[103,103],[[15,[23]]]],[[134,134],[[15,[23]]]],[[135,135],[[15,[23]]]],[[153,153],[[15,[23]]]],[[109,109],[[15,[23]]]],[[104,104],[[15,[23]]]],[[136,136],[[15,[23]]]],[[32,32],[[15,[23]]]],[[137,137],[[15,[23]]]],[[138,138],[[15,[23]]]],[[139,139],[[15,[23]]]],[[105,105],[[15,[23]]]],[[150,150],[[15,[23]]]],[[106,106],[[15,[23]]]],[[107,107],[[15,[23]]]],[125,2],[140,149],0,[143,108],[32,24],[139,24],0,0,[[93,93],4],[[94,94],4],[[95,95],4],[[96,96],4],[[97,97],4],[[98,98],4],[[99,99],4],[[100,100],4],[[101,101],4],[[102,102],4],[[103,103],4],[[104,104],4],[[105,105],4],[[106,106],4],[[107,107],4],[140,149],[[93,93,24],4],[[94,94,24],4],[[95,95,24],4],[[96,96,24],4],[[97,97,24],4],[[98,98,24],4],[[99,99,24],4],[[100,100,24],4],[[101,101,24],4],[[102,102,24],4],[[103,103,24],4],[[104,104,24],4],[[105,105,24],4],[[143,140,142,141],4],[[106,106,24],4],[[107,107,24],4],0,0,0,0,[[93,93],93],[[94,94],94],[[95,95],95],[[96,96],96],[[97,97],97],[[98,98],98],[[99,99],99],[[100,100],100],[[101,101],101],[[102,102],102],[[103,103],103],[[104,104],104],[[105,105],105],[[108,108]],[[106,106],106],[[107,107],107],[[93,93],4],[[94,94],4],[[95,95],4],[[96,96],4],[[97,97],4],[[98,98],4],[[99,99],4],[[100,100],4],[[101,101],4],[[102,102],4],[[103,103],4],[[104,104],4],[[105,105],4],[[106,106],4],[[107,107],4],[[93,93],93],[[94,94],94],[[95,95],95],[[96,96],96],[[97,97],97],[[98,98],98],[[99,99],99],[[100,100],100],[[101,101],101],[[102,102],102],[[103,103],103],[[104,104],104],[[105,105],105],[[106,106],106],[[107,107],107],[31,4],[[],124],[[51,[15,[7]],2,2,46],[[9,[48,49]]]],[[[3,[36]],93],[[9,[14,114]]]],[[[3,[36]],94],[[9,[14,115]]]],[[[3,[36]],95],4],[[7,123,98],[[9,[2,122]]]],[[119,[3,[116]],[3,[120]]],[[9,[7,121]]]],[[7,131],[[9,[4,130]]]],[[[15,[7]],7,14,56,100],[[9,[14,126]]]],[[[15,[7]],14],[[9,[129,128]]]],[7,[[9,[133,132]]]],[[[15,[7]],14,101],[[9,[4,127]]]],[[152,106],[[9,[140,150]]]],[[141,[3,[143]],2,107],[[9,[14,151]]]],[134,[[9,[7,135]]]],[[[15,[7]],153,14,14,14],[[4,[2,2]]]],[2,69],[[],4],[2,4],[[[3,[139]],[15,[37]]],[[9,[14,138]]]],[[],4],[[7,99],4],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[[93,93],4],[[94,94],4],[[95,95],4],[[96,96],4],[[97,97],4],[[98,98],4],[[99,99],4],[[100,100],4],[[101,101],4],[[102,102],4],[[103,103],4],[[104,104],4],[[105,105],4],[[106,106],4],[[107,107],4],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[2,[[9,[123]]]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[[[4,[2,2]]],[[9,[131]]]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[147,[[9,[149]]]],[144,[[9,[149]]]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[[93,93],93],[[94,94],94],[[95,95],95],[[96,96],96],[[97,97],97],[[98,98],98],[[99,99],99],[[100,100],100],[[101,101],101],[[102,102],102],[[103,103],103],[[104,104],104],[[105,105],105],[[106,106],106],[[107,107],107],0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[157,157],[[-1,-2],4,[],[]],[[157,157],23],[[],158],[[157,157],24],0,[[157,26],27],[-1,-1,[]],[-1,-1,[]],[158,2],[158,157],[[157,-1],4,29],[-1,158,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[157,157],[[15,[23]]]],[[158,157,2],157],[[],[[3,[[4,[33,34]]]]]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[[158,[15,[37]]],[[15,[[4,[157,2]]]]]],0,0,0,0,0,0,[[],159],[[],160],0,0,[[159,159],159],[[160,160],160],[[159,159],4],[[160,160],4],[[159,159],159],[[160,160],160],[[159,159],4],[[160,160],4],[159,31],[160,31],[[159,159],159],[[160,160],160],[[159,159],4],[[160,160],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[161,161],[159,159],[162,162],[160,160],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[161,161],23],[[159,159],23],[[162,162],23],[[160,160],23],[159,159],[160,160],[[159,159],24],[[160,160],24],[[159,159],159],[[160,160],160],[[],159],[[],160],[[161,161],24],[[159,159],24],[[162,162],24],[[160,160],24],[[159,-1],4,25],[[160,-1],4,25],0,0,[[161,26],27],[[159,26],27],[[159,26],27],[[159,26],27],[[159,26],27],[[159,26],27],[[162,26],27],[[160,26],27],[[160,26],27],[[160,26],27],[[160,26],27],[[160,26],27],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[31,[[15,[159]]]],[31,[[15,[160]]]],[31,159],[31,160],[31,159],[31,160],[-1,159,25],[-1,160,25],[[161,-1],4,29],[[159,-1],4,29],[[162,-1],4,29],[[160,-1],4,29],[[159,159],4],[[160,160],4],[[159,159],159],[[160,160],160],[[159,159],24],[[160,160],24],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[159,24],[160,24],[159,24],[160,24],0,[[7,159,31,[163,[2]]],161],[[160,31,[163,[2]]],162],[159,159],[160,160],[[161,161],[[15,[23]]]],[[159,159],[[15,[23]]]],[[162,162],[[15,[23]]]],[[160,160],[[15,[23]]]],[[159,159],4],[[160,160],4],0,[[159,159,24],4],[[160,160,24],4],0,[[159,159],159],[[160,160],160],[[159,159],4],[[160,160],4],[[159,159],159],[[160,160],160],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[159,159],4],[[160,160],4],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[[159,159],159],[[160,160],160],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[164,14],[[165,165],23],0,[[165,165],24],0,[[166,26],27],[[167,26],27],[[168,26],27],[[169,26],27],[[165,26],27],[[170,26],27],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[164,14],0,[[2,2],166],[[7,168,165],167],[[2,165],169],0,[[165,165],[[15,[23]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[164,14],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]]],"c":[2322],"p":[[4,"Syscall",993],[15,"u64"],[15,"slice"],[15,"tuple"],[3,"KernelInitInfo",16],[3,"KernelInitName",16],[3,"ObjID",713],[15,"str"],[4,"Result",2922],[3,"TypeId",2923],[3,"DeviceInterruptFlags",42],[15,"u16"],[3,"DeviceRepr",42],[15,"usize"],[4,"Option",2924],[4,"DeviceType",42],[4,"BusType",42],[4,"SubObjectType",42],[4,"CacheType",42],[3,"InterruptVector",42],[3,"DeviceId",42],[4,"MailboxPriority",42],[4,"Ordering",2925],[15,"bool"],[8,"IntoIterator",2926],[3,"Formatter",2927],[6,"Result",2927],[3,"MmioInfo",42],[8,"Hasher",2928],[3,"KsoHdr",412],[15,"u32"],[3,"ThreadSyncSleep",993],[3,"BaseVersion",624],[3,"BaseTag",624],[3,"String",2929],[15,"u8"],[3,"Duration",2930],[3,"PcieFunctionHeader",270],[3,"PcieDeviceHeader",270],[3,"PcieBridgeHeader",270],[3,"PcieCapabilityHeader",270],[3,"PcieInfo",270],[3,"PcieDeviceInfo",270],[3,"VolatilePtr",2931],[4,"PcieKactionSpecific",270],[3,"KactionFlags",412],[3,"InterruptAllocateOptions",412],[4,"KactionValue",412],[4,"KactionError",412],[4,"KactionGenericCmd",412],[4,"KactionCmd",412],[4,"InterruptPriority",412],[3,"MetaFlags",652],[3,"Nonce",652],[3,"MetaExtTag",652],[3,"Protections",713],[15,"u128"],[3,"MapFlags",2932],[3,"RequestFromKernel",795],[4,"KernelCommand",795],[3,"CompletionToKernel",795],[4,"KernelCompletionData",795],[3,"RequestFromPager",795],[4,"PagerRequest",795],[3,"CompletionToPager",795],[4,"PagerCompletionData",795],[8,"Runtime",2932],[3,"MinimalRuntime",927],[15,"never"],[4,"Monotonicity",2932],[3,"NonZeroUsize",2933],[8,"GlobalAlloc",2934],[15,"i32"],[3,"AtomicU32",2935],[3,"LibraryId",2932],[3,"Library",2932],[3,"ObjectHandle",2932],[3,"AddrRange",2932],[4,"JoinError",2932],[6,"ObjID",2932],[4,"MapError",2932],[4,"AuxEntry",2932],[3,"CStr",2936],[3,"ThreadSpawnArgs",2932],[4,"SpawnError",2932],[3,"TlsIndex",2932],[6,"IoWriteDynCallback",2932],[4,"WriteError",2932],[4,"ReadError",2932],[6,"IoReadDynCallback",2932],[3,"ElfObject",967],[4,"SpawnExecutableError",967],[3,"KernelConsoleReadFlags",993],[3,"KernelConsoleReadBufferFlags",993],[3,"KernelConsoleWriteFlags",993],[3,"ObjectCreateFlags",993],[3,"CreateTieFlags",993],[3,"NewHandleFlags",993],[3,"UnbindHandleFlags",993],[3,"MapFlags",993],[3,"UnmapFlags",993],[3,"DeleteFlags",993],[3,"ThreadSpawnFlags",993],[3,"ThreadSyncFlags",993],[3,"ClockFlags",993],[3,"ReadClockFlags",993],[3,"ReadClockListFlags",993],[3,"TimeSpan",993],[4,"ThreadSyncOp",993],[8,"Eq",2925],[8,"PartialEq",2925],[8,"Ord",2925],[8,"PartialOrd",2925],[4,"KernelConsoleReadError",993],[4,"KernelConsoleReadBufferError",993],[3,"ObjectSource",993],[4,"BackingType",993],[4,"LifetimeType",993],[3,"ObjectCreate",993],[3,"CreateTieSpec",993],[4,"ObjectCreateError",993],[4,"NewHandleError",993],[4,"HandleType",993],[3,"SysInfo",993],[3,"PinnedPage",993],[4,"ObjectMapError",993],[4,"ObjectUnmapError",993],[4,"ObjectReadMapError",993],[3,"MapInfo",993],[4,"ObjectControlError",993],[4,"ObjectControlCmd",993],[4,"ObjectStatError",993],[3,"ObjectInfo",993],[3,"ThreadSpawnArgs",993],[4,"ThreadSpawnError",993],[4,"ThreadSyncReference",993],[3,"ThreadSyncWake",993],[4,"ThreadSyncError",993],[4,"ThreadSync",993],[3,"ClockInfo",993],[4,"ClockKind",993],[3,"ClockID",993],[3,"Clock",993],[3,"Seconds",993],[3,"MilliSeconds",993],[3,"MicroSeconds",993],[3,"NanoSeconds",993],[3,"PicoSeconds",993],[3,"FemtoSeconds",993],[4,"ReadClockInfoError",993],[4,"ReadClockListError",993],[4,"ClockSource",993],[4,"ThreadControl",993],[4,"TimeUnitError",993],[4,"KernelConsoleReadSource",993],[6,"ThreadSyncResult",993],[4,"ExecutionState",2639],[3,"ThreadRepr",2639],[3,"AsyncEventFlags",2675],[3,"AsyncEventCompletionFlags",2675],[3,"AsyncEvent",2675],[3,"AsyncEventCompletion",2675],[15,"array"],[3,"UpcallFrame",2818],[4,"MemoryAccessKind",2818],[3,"ExceptionInfo",2818],[3,"ObjectMemoryFaultInfo",2818],[4,"ObjectMemoryError",2818],[3,"MemoryContextViolationInfo",2818],[4,"UpcallInfo",2818],[3,"DeviceInterrupt",42],[8,"BaseType",624],[3,"MetaInfo",652],[3,"MetaExt",652]]},\
"twizzler_async":{"doc":"Support for asynchronous programming on Twizzler. This …","t":"DDIIQDSQDDSSQLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLKKKLLFFLLLLLLLLLLLLLLLLLLFL","n":["Async","AsyncDuplex","AsyncDuplexSetup","AsyncSetup","Error","FlagBlock","READ_WOULD_BLOCK","ReadError","Task","Timer","WOULD_BLOCK","WRITE_WOULD_BLOCK","WriteError","after","at","block_on","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cancel","default","detach","drop","drop","drop","drop","expect","fmt","from","from","from","from","from","get_ref","get_ref","into","into","into","into","into","into_future","into_future","into_inner","into_inner","local","new","new","new","poll","poll","read_with","run","run_with","setup_read_sleep","setup_sleep","setup_write_sleep","signal_all","spawn","timeout_after","timeout_at","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_poll","type_id","type_id","type_id","type_id","type_id","unwrap","wait","wait_for_first","write_with"],"q":[[0,"twizzler_async"],[87,"core::time"],[88,"std::time"],[89,"core::future::future"],[90,"core::option"],[91,"core::result"],[92,"core::marker"],[93,"core::fmt"],[94,"core::fmt"],[95,"core::task::wake"],[96,"core::task::poll"],[97,"core::ops::function"],[98,"twizzler_abi::syscall::thread_sync"],[99,"core::any"]],"d":["A wrapper type around some “handle” that we want to …","A wrapper type around some “handle” that we want to …","Implement setting up externally signaled asynchronous …","Implement setting up externally signaled asynchronous …","The error type returned by any closures run.","A basic condition variable for async tasks. If you call …","The specific variant of the error type that indicates that …","The error type returned by read operations.","A spawned future. Tasks are futures themselves and yield …","A timer future that returns after a specified period of …","The specific variant of the error type that indicates that …","The specific variant of the error type that indicates that …","The error type returned by write operations.","Make a new timer future that returns Ready after a …","Make a new timer future that returns Ready at or after a …","Run a future to completion, sleeping the thread if there …","","","","","","","","","","","Cancels the task and waits for it to stop running. If the …","","Detach the task and let it run in the background.","","","","","Spawns a new task and awaits and unwraps the result, …","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Return a reference to the underlying handle.","Return a reference to the underlying handle.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Consume the wrapper and return the underlying handle.","Consume this Async and return the handle.","Spawns a future onto the thread-local executor.","Construct a new <code>Async&lt;T&gt;</code>.","Construct a new Async.","Construct a new FlagBlock.","","","Asynchronously run a read-like operation that will sleep …","Runs executors.","Asynchronously run an operation that will sleep if not …","Return a thread sync sleep operation specification for …","Return a thread sync sleep operation specification for …","Return a thread sync sleep operation specification for …","Signal anyone waiting.","Spawns a future onto the global executor.","Await a future until a timeout occurs (or that future …","Await a future until a timeout occurs (or that future …","","","","","","","","","","","","","","","","","Spawns a new task and awaits and unwraps the result.","Return an awaitable future for the “readiness” of this …","A future that waits on two sub-futures until the first one …","Asynchronously run a write-like operation that will sleep …"],"i":[0,0,0,0,18,0,17,17,0,0,18,17,17,2,2,0,9,5,2,10,7,9,5,2,10,7,5,7,5,9,5,2,10,5,10,9,5,2,10,7,9,10,9,5,2,10,7,5,2,9,10,5,9,10,7,5,2,9,0,10,17,18,17,7,5,0,0,9,5,2,10,7,9,5,2,10,7,5,9,5,2,10,7,5,7,0,9],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[3,2],[-1,-2,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[5,[-1]]],[[6,[-1]]],[]],[[],7],[[[5,[8]]],8],[[[9,[-1]]],8,[]],[[[5,[-1]]],8,[]],[2,8],[[[10,[-1]]],8,[]],[[[5,[[11,[-1,-2]]]],12],[[5,[-1]]],13,[14,13]],[[[10,[-1]],15],16,14],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[9,[-1]]],-1,17],[[[10,[-1]]],-1,18],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[],[]],[-1,[],[]],[[[9,[-1]]],-1,17],[[[10,[-1]]],-1,18],[-1,[[5,[-2]]],4,[]],[-1,[[9,[-1]]],17],[-1,[[10,[-1]]],18],[[],7],[[[19,[[5,[-1]]]],20],21,[]],[[[19,[2]],20],21],[[[9,[-1]],-2],[[11,[-3]]],17,22,[]],[-1,-2,4,[]],[[[10,[-1]],-2],[[11,[-3]]],18,22,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[7,8],[-1,[[5,[-2]]],[4,13],13],[[-1,1],6,4],[[-1,3],6,4],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[[[19,[-1]],20],21,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[[[5,[[11,[-1,-2]]]]],[[5,[-1]]],13,[14,13]],0,[[-1,-2],[[0,[-1,-2]]],4,4],[[[9,[-1]],-2],[[11,[-3]]],17,22,[]]],"c":[],"p":[[3,"Duration",87],[3,"Timer",0],[3,"Instant",88],[8,"Future",89],[3,"Task",0],[4,"Option",90],[3,"FlagBlock",0],[15,"tuple"],[3,"AsyncDuplex",0],[3,"Async",0],[4,"Result",91],[15,"str"],[8,"Send",92],[8,"Debug",93],[3,"Formatter",93],[6,"Result",93],[8,"AsyncDuplexSetup",0],[8,"AsyncSetup",0],[3,"Pin",94],[3,"Context",95],[4,"Poll",96],[8,"FnMut",97],[3,"ThreadSyncSleep",98],[3,"TypeId",99]]},\
"twizzler_driver":{"doc":"","t":"DDLLLLLALLALALLLFLLLLALLLLLLANNDNDDDEDDDDDDENNMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMLLLLLLLLLLLLLLMMMMMMLLLLLLLLLMMLLLLLLLLLLLLMFMMMMMMMMLLLLLLLLLLLLLMMMMMMMMMMMMMMMLMMMMMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMNEDNDDEDDNNNNLLLLLLLLLLLLLLLMLLLLLLLLLMMLLLLALLLLLLLLLLLLLLLLLLMLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDEDNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLENRINDDDDDDNNNNENNNNESLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNDDSQIDQDNNNQDEELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["BusTreeRoot","DeviceController","allocate_interrupt","borrow","borrow","borrow_mut","borrow_mut","bus","check_mailbox","children","device","device","dma","events","from","from","get_bustree_root","into","into","new_from_device","next_msg","request","try_from","try_from","try_into","try_into","type_id","type_id","pcie","AllocateInterrupt","Msi","MsiCapability","MsiX","MsixCapability","MsixTableEntry","PcieBridgeHeader","PcieCapability","PcieCapabilityHeader","PcieCapabilityIterator","PcieDeviceHeader","PcieDeviceInfo","PcieFunctionHeader","PcieInfo","PcieKactionSpecific","RegisterDevice","Unknown","bar0","bar0","bar1","bar1","bar2","bar3","bar4","bar5","bist","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bridge_control","bus_end","bus_nr","bus_start","cache_line_size","cap_ptr","cap_ptr","cardbus_cis_ptr","class","class","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","command","dev_nr","device_id","device_id","exprom_base","exprom_base","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fnheader","fnheader","from","from","from","from","from","from","from","from","from","from","from","from","func_nr","get_bar","header","header","header_type","id","int_line","int_line","int_pin","int_pin","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","io_base","io_base_upper","io_limit","io_limit_upper","latency_timer","mask","max_latency","memory_base","memory_limit","min_grant","msg_addr_hi","msg_addr_low","msg_ctrl","msg_ctrl","msg_data","next","next","pending","pending_offset_and_bir","pref_base_upper","pref_limit_upper","pref_memory_base","pref_memory_limit","primary_bus_nr","progif","progif","resv","revision","revision","secondary_bus_nr","secondary_latency_timer","secondary_status","seg_nr","seg_nr","status","subclass","subclass","subordinate_bus_nr","subsystem_id","subsystem_vendor_id","table_offset_and_bir","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vendor_id","vendor_id","Bus","BusType","Device","Device","DeviceChildrenIterator","DeviceRepr","DeviceType","InfoObject","MmioObject","Pcie","System","Unknown","Unknown","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bus_type","bus_type","check_for_interrupt","check_for_mailbox","children","clone","clone","clone_into","clone_into","cmp","cmp","device_id","device_type","eq","eq","equivalent","equivalent","events","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get_data","get_info","get_info","get_mmio","get_mmio_offset","get_mmio_offset_mut","init","interrupts","into","into","into","into","into","into","into","into_iter","is_bus","kaction","mailboxes","new","next","partial_cmp","partial_cmp","register_interrupt","repr","repr_mut","setup_interrupt_sleep","submit_mailbox_msg","tags","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","wait_for_interrupt","DeviceEventStream","InterruptAllocationError","InterruptInfo","KernelError","NoMoreInterrupts","Unsupported","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cmp","devint","drop","eq","equivalent","fmt","from","from","from","into","into","into","next","partial_cmp","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Access","BiDirectional","DMA_PAGE_SIZE","DeviceSync","DeviceToHost","DmaObject","DmaOptions","DmaPin","DmaPool","DmaRegion","DmaSliceRegion","Exhausted","FullCoherence","HostToDevice","InternalError","PinError","PostCpuToDevice","PostDeviceToCpu","PreCpuToDevice","PreDeviceToCpu","SyncMode","UNSAFE_MANUAL_COHERENCE","access","access","all","allocate","allocate_array","allocate_array_with","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","complement","contains","default","default_spec","difference","drop","drop","empty","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","get","get","get_mut","get_mut","hash","hash","hash","hash","index","insert","intersection","intersects","into","into","into","into","into","into","into","into","into","into_iter","is_all","is_empty","len","len","new","new","not","nr_pages","num_bytes","num_bytes","object","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pin","pin","release_pin","release_pin","remove","set","sub","sub_assign","symmetric_difference","sync","sync","to_owned","to_owned","to_owned","to_owned","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","with","with","with_mut","with_mut","Done","Errors","Errors","InFlightFuture","InFlightFutureWithResponses","NUM_IDS","Request","RequestDriver","Requester","Response","ResponseInfo","Responses","Shutdown","Shutdown","SubmitError","SubmitRequest","SubmitSummary","SubmitSummaryWithResponses","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","data","data","data_mut","driver","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","finish","flush","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","hash","hash","hash","hash","id","id","into","into","into","into","into","into","into","into_future","into_future","into_inner","is_err","is_shutdown","new","new","new","partial_cmp","partial_cmp","partial_cmp","partial_cmp","poll","poll","shutdown","submit","submit","submit_for_response","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id"],"q":[[0,"twizzler_driver"],[28,"twizzler_driver::bus"],[29,"twizzler_driver::bus::pcie"],[242,"twizzler_driver::device"],[353,"twizzler_driver::device::events"],[391,"twizzler_driver::dma"],[580,"twizzler_driver::request"],[707,"core::result"],[708,"twizzler_abi::device"],[709,"core::option"],[710,"core::any"],[711,"core::fmt"],[712,"core::fmt"],[713,"volatile::volatile_ptr"],[714,"core::cmp"],[715,"twizzler_abi::device"],[716,"twizzler_abi::kso"],[717,"twizzler_abi::kso"],[718,"twizzler_abi::marker"],[719,"twizzler_abi::marker"],[720,"core::time"],[721,"core::clone"],[722,"core::ops::function"],[723,"twizzler_object::create"],[724,"core::iter::traits::collect"],[725,"twizzler_object::object"],[726,"core::hash"],[727,"core::ops::range"],[728,"core::ops::function"],[729,"core::cmp"],[730,"core::task::wake"],[731,"core::task::poll"],[732,"core::future::future"],[733,"alloc::boxed"]],"d":["A handle for the root of the bus tree.","A single manager for both a device and an associated …","Allocate a new interrupt on this device.","","","","","A mod for managing bus-specific functionality.","Poll a single mailbox. If there are no messages, returns …","Get the children of the bus tree.","Functions and types for managing a device.","Get a reference to the device.","Module for managing DMA memory, using objects for DMA, and …","Get a reference to the event stream.","Returns the argument unchanged.","Returns the argument unchanged.","Get a handle to the root of the bus tree.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new device controller from a device.","Get the next message with a priority equal to or higher …","A system for handling requests and organizing inflight …","","","","","","","PCIe-specific functionality.","Allocate an interrupt for a device.","","","","","","The standard PCIe bridge header. See the PCI spec for more …","","","","The standard PCIe device header. See the PCI spec for more …","The base struct for an info sub-object for a PCIe device.","The standard PCIe function header. See the PCI spec for …","The base struct for an info sub-object for a PCIe bus.","PCIe-specific crate::kso::KactionGenericCmd values.","Register a device ID.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A bus. This device has numerous children and should be …","All supported kernel-discovered bus types.","A handle for a device.","A traditional “device”. It may still have children, …","An iterator over the children of a device.","The base struct for a device object.","Possible high-level device types.","A handle to an info subobject.","A handle to an MMIO subobject.","PCIe.","The “system” bus. Typically comprised of devices …","An unknown device type. Should be ignored.","An unknown bus. Should be ignored.","","","","","","","","","","","","","","","Get the bus type of this device.","","Poll an interrupt vector to see if it has fired.","Poll an interrupt vector to see if it has fired.","Get an iterator over the children of this device.","","","","","","","","","","","","","Manage events for a device, including mailbox messages and …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a reference to the data contained within an info type …","Get a reference to an MMIO subobject’s info data.","Get an indexed info object for a device.","Get a handle to a MMIO type subobject.","Get the base of the memory mapped IO region.","Get the base of the memory mapped IO region.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Is this device a bus?","Execute a kaction operation on a device.","","Construct a new device repr.","","","","Register an interrupt vector with this device.","Get a reference to a device’s representation data.","Get a mutable reference to a device’s representation …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Block until an interrupt fires.","A manager for device events, including interrupt handling.","Possible errors for interrupt allocation.","A handle for an allocated interrupt on a device.","The kernel encountered an error.","The device has run out of interrupt vectors that can be …","Some option was unsupported.","","","","","","","","","","Get the interrupt number for programming the device.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Wait until the next interrupt occurs.","","","","","","","","","","","","Intended access direction for DMA memory.","The memory is accessed read/write by both device and host.","Size of a page for this DMA system.","DMA types must implement this trait, which indicates that …","The memory is used for the host to read and the device to …","A handle for an object that can be used to perform DMA, …","Options for DMA regions.","A representation of some pinned memory for a region.","A pool for allocating DMA regions that all share a common …","A region of DMA memory, represented in virtual memory as …","A region of DMA memory, represented in virtual memory as …","Kernel resources are exhausted.","Ensures that memory is fully coherent.","The memory is used for the host to write and the device to …","An internal error occurred.","Possible failure modes for pinning memory.","Ensures coherence for the host to write to the device, …","Ensures coherence for the device to write to the host, …","Ensures coherence for the host to write to the device, …","Ensures coherence for the device to write to the host, …","Mode of syncing to apply when calling <code>sync()</code>. These sync …","Region functions will not perform automatic coherence.","Return the access direction of this region.","Return the access direction of this region.","Returns the set containing all flags.","Allocate a new DmaRegion from the pool. The region will be …","Allocate a new DmaSliceRegion from the pool. Each entry in …","Allocate a new DmaSliceRegion from the pool. Each entry in …","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","Generate a default CreateSpec for use in creating Twizzler …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","","","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","Get a reference to the DMA memory.","Get a reference to the DMA memory.","Get a mutable reference to the DMA memory.","Get a mutable reference to the DMA memory.","","","","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","Return the number of elements in the slice that this …","Create a new DmaObject from an existing object handle.","Create a new DmaPool with access and DMA options, where …","Returns the complement of this set of flags.","Calculate the number of pages this region covers.","Return the number of bytes this region covers.","Return the number of bytes this region covers.","Get a reference to the object handle.","","","","","","","Release any pin created for this region.","Release any pin created for this region.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","All requests completed successfully.","At least one error occurred. The usize value is the index …","At least one error occurred. The usize value is the index …","A future for a set of in-flight requests for which we are …","A future for a set of in-flight requests for which we are …","The number of IDs to have in-flight at a time.","The type of a request that will be used by the …","A trait implemented by a particular driver that can the be …","A wrapper for managing requests and responses for a given …","The type of a response to a request that we will use to …","Information about a response from the driver. Sent by the …","A vector of responses in the same order as the submitted …","The request engine was shutdown while the requests were …","The request engine was shutdown while the requests were …","The type of a submit error in case submission fails.","A wrapper around a request that adds an ID alongside a …","A summary of the result of submitting a collection of …","A summary of the result of submitting a collection of …","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a reference to the response data.","Get a reference to the data.","Get a mutable reference to the data.","Get a reference to the driver.","","","","","","","","","Send back, from the driver, to the request manager, a set …","Manually flush any internal driver submission queue.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Get the ID of the response (and thus the request with …","Get the ID of the request. Note that this number is only …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Convert this ResponseInfo into the inner response data.","Is this response an error?","Check if the requester is shutdown.","Construct a new request manager for a given driver.","Construct a new ResponseInfo.","Construct a new SubmitRequest.","","","","","","","Shutdown the request manager.","The actual submit function. The driver should perform …","Submit a set of requests, for which we are <strong>not</strong> interested …","Submit a set of requests, for which we <strong>are</strong> interested in …","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,1,1,8,1,8,0,1,8,0,1,0,1,1,8,0,1,8,1,1,0,1,8,1,8,1,8,0,32,23,0,23,0,0,0,0,0,0,0,0,0,0,0,32,23,19,20,19,20,19,19,19,19,18,31,32,14,15,16,17,23,24,26,18,19,20,31,32,14,15,16,17,23,24,26,18,19,20,20,24,26,24,18,19,20,19,26,18,14,15,16,17,18,19,20,14,15,16,17,18,19,20,18,26,26,18,19,20,14,15,16,17,23,24,26,18,20,19,20,31,32,14,15,16,17,23,24,26,18,19,20,26,0,15,16,18,14,19,20,19,20,31,32,14,15,16,17,23,24,26,18,19,20,31,20,20,20,20,18,15,19,20,20,19,15,15,15,16,15,31,14,15,16,20,20,20,20,20,26,18,15,26,18,20,20,20,24,26,18,26,18,20,19,19,16,14,15,16,17,18,19,20,31,32,32,14,15,16,17,23,24,26,18,19,20,31,32,14,15,16,17,23,24,26,18,19,20,31,32,14,15,16,17,23,24,26,18,19,20,26,18,35,0,0,35,0,0,0,0,0,33,33,35,33,9,34,38,39,10,35,33,9,34,38,39,10,35,33,10,34,34,34,10,35,33,35,33,35,33,34,34,35,33,35,33,0,34,10,35,33,9,34,38,39,10,35,33,38,39,10,10,39,39,34,34,9,34,38,39,10,35,33,9,10,10,34,34,9,35,33,34,10,10,34,34,34,35,33,34,10,9,34,38,39,10,35,33,9,34,38,39,10,35,33,9,34,38,39,10,35,33,34,0,0,0,3,3,3,11,2,3,11,2,3,3,3,3,2,2,3,3,3,11,2,3,11,2,3,2,3,3,11,2,3,11,2,3,11,2,3,0,59,0,0,59,0,0,0,0,0,0,66,67,59,66,0,67,67,67,67,0,62,58,61,62,63,63,63,62,62,62,62,62,62,62,69,73,63,58,61,66,59,67,62,69,73,63,58,61,66,59,67,62,66,59,67,62,66,59,67,62,66,59,67,62,62,62,62,63,62,69,58,62,66,59,67,62,66,59,67,62,62,66,59,67,62,62,62,62,62,69,69,73,63,58,61,66,59,67,62,62,62,62,62,58,61,58,61,66,59,67,62,73,62,62,62,69,73,63,58,61,66,59,67,62,73,62,62,73,61,69,63,62,58,58,61,69,66,59,67,62,58,61,58,61,62,62,62,62,62,58,61,66,59,67,62,62,69,73,63,58,61,66,59,67,62,69,73,63,58,61,66,59,67,62,69,73,63,58,61,66,59,67,62,62,58,61,58,61,79,78,79,0,0,83,83,0,0,83,0,78,78,79,83,0,0,0,82,85,87,76,77,78,79,82,85,87,76,77,78,79,76,77,78,79,76,77,78,79,76,77,78,79,76,77,77,82,76,77,78,79,76,77,78,79,82,83,85,87,76,77,78,79,82,85,87,76,77,78,79,76,77,78,79,76,77,82,85,87,76,77,78,79,85,87,76,76,82,82,76,77,76,77,78,79,85,87,82,83,82,82,76,77,78,79,82,85,87,76,77,78,79,82,85,87,76,77,78,79,82,85,87,76,77,78,79],"f":[0,0,[1,[[4,[2,3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[1,5],[[7,[6]]]],[8,9],0,[1,10],0,[1,11],[-1,-1,[]],[-1,-1,[]],[[],8],[-1,-2,[],[]],[-1,-2,[],[]],[10,1],[[1,5],[[12,[5,6]]]],0,[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,[14,14],[15,15],[16,16],[17,17],[18,18],[19,19],[20,20],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],0,0,0,0,0,0,[[14,21],22],[[15,21],22],[[16,21],22],[[17,21],22],[[23,21],22],[[24,21],[[4,[12,25]]]],[[26,21],[[4,[12,25]]]],[[18,21],[[4,[12,25]]]],[[20,21],[[4,[12,25]]]],0,0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[[[28,[19,27]],29],[[28,[30,27]]]],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[31,7],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[30,[[4,[32]]]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[10,33],0,[[34,29],[[7,[6]]]],[[34,29],[[7,[6]]]],[10,9],[35,35],[33,33],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[35,35],36],[[33,33],36],0,0,[[35,35],37],[[33,33],37],[[-1,-2],37,[],[]],[[-1,-2],37,[],[]],0,[[34,21],[[4,[12,25]]]],[[10,21],22],[[35,21],[[4,[12,25]]]],[[33,21],[[4,[12,25]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[38,[-1]]],-1,[]],[39,40],[[10,41],[[7,[[38,[-1]]]]],[]],[[10,41],[[7,[39]]]],[[39,29],[[43,[-1,42]]],[]],[[39,29],[[43,[-1,27]]],[]],[-1,34,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[10,37],[[10,44,6,45,6],[[4,[46,47]]]],0,[[48,35,33,49],34],[9,7],[[35,35],[[7,[36]]]],[[33,33],[[7,[36]]]],[[34,29,50,51],12],[10,34],[10,34],[[34,29],52],[[34,5,6],12],[[],[[55,[[12,[53,54]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,56,[]],[-1,56,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[[34,29,[7,[57]]],6],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[3,3],[[-1,-2],12,[],[]],[[3,3],36],[2,30],[2,12],[[3,3],37],[[-1,-2],37,[],[]],[[3,21],22],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[2,[[7,[6]]]],[[3,3],[[7,[36]]]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[58,[-1]]],59,60],[[[61,[-1]]],59,60],[[],62],[[63,-1],[[4,[[58,[-1]],0]]],60],[[63,29,-1],[[4,[[61,[-1]],0]]],[60,64]],[[63,29,-1],[[4,[[61,[-2]],0]]],65,60],[[62,62],62],[[62,62],12],[[62,62],62],[[62,62],12],[62,6],[[62,62],62],[[62,62],12],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[66,66],[59,59],[67,67],[62,62],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[66,66],36],[[59,59],36],[[67,67],36],[[62,62],36],[62,62],[[62,62],37],[[],62],[[],68],[[62,62],62],[69,12],[[[58,[-1]]],12,60],[[],62],[[66,66],37],[[59,59],37],[[67,67],37],[[62,62],37],[[-1,-2],37,[],[]],[[-1,-2],37,[],[]],[[-1,-2],37,[],[]],[[-1,-2],37,[],[]],[[62,-1],12,70],[[66,21],22],[[59,21],22],[[67,21],22],[[62,21],22],[[62,21],22],[[62,21],22],[[62,21],22],[[62,21],22],[[[71,[-1]]],69,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[6,[[7,[62]]]],[6,62],[6,62],[-1,62,70],[[[58,[-1]]],-1,60],[[[61,[-1]]],[[55,[-1]]],60],[[[58,[-1]]],-1,60],[[[61,[-1]]],[[55,[-1]]],60],[[66,-1],12,72],[[59,-1],12,72],[[67,-1],12,72],[[62,-1],12,72],[[73,29]],[[62,62],12],[[62,62],62],[[62,62],37],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[73],[62,37],[62,37],[73,29],[[[61,[-1]]],29,60],[[[71,[-1]]],69,[]],[[68,59,62],63],[62,62],[[[58,[-1]]],29,60],[[[58,[-1]]],29,60],[[[61,[-1]]],29,60],[69,[[71,[12]]]],[[66,66],[[7,[36]]]],[[59,59],[[7,[36]]]],[[67,67],[[7,[36]]]],[[62,62],[[7,[36]]]],[[[58,[-1]]],[[4,[73,66]]],60],[[[61,[-1]]],[[4,[73,66]]],60],[[[58,[-1]]],12,60],[[[61,[-1]]],12,60],[[62,62],12],[[62,62,37],12],[[62,62],62],[[62,62],12],[[62,62],62],[[[58,[-1]],67],12,60],[[[61,[-1]],[74,[29]],67],12,60],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[62,62],12],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[[62,62],62],[[[58,[-1]],-2],-3,60,75,[]],[[[61,[-1]],[74,[29]],-2],-3,60,75,[]],[[[58,[-1]],-2],-3,60,75,[]],[[[61,[-1]],[74,[29]],-2],-3,60,75,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[76,[-1]]],[[76,[-1]]],64],[[[77,[-1]]],[[77,[-1]]],64],[[[78,[-1]]],[[78,[-1]]],64],[79,79],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[[76,[-1]],[76,[-1]]],36,80],[[[77,[-1]],[77,[-1]]],36,80],[[[78,[-1]],[78,[-1]]],36,80],[[79,79],36],[[[76,[-1]]],-1,81],[[[77,[-1]]],-1,[]],[[[77,[-1]]],-1,[]],[[[82,[-1]]],-1,83],[[[76,[-1]],[76,[-1]]],37,84],[[[77,[-1]],[77,[-1]]],37,84],[[[78,[-1]],[78,[-1]]],37,84],[[79,79],37],[[-1,-2],37,[],[]],[[-1,-2],37,[],[]],[[-1,-2],37,[],[]],[[-1,-2],37,[],[]],[[[82,[-1]],[55,[76]]],12,83],[-1,12,[]],[[[85,[-1]],21],22,86],[[[87,[-1]],21],22,86],[[[76,[-1]],21],22,86],[[[77,[-1]],21],22,86],[[[78,[-1]],21],22,86],[[79,21],22],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[76,[-1]],-2],12,88,72],[[[77,[-1]],-2],12,88,72],[[[78,[-1]],-2],12,88,72],[[79,-1],12,72],[[[76,[-1]]],6,81],[[[77,[-1]]],6,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[],[]],[-1,[],[]],[[[76,[-1]]],-1,81],[[[76,[-1]]],37,81],[[[82,[-1]]],37,83],[-1,[[82,[-1]]],83],[[-1,6,37],[[76,[-1]]],81],[-1,[[77,[-1]]],[]],[[[76,[-1]],[76,[-1]]],[[7,[36]]],89],[[[77,[-1]],[77,[-1]]],[[7,[36]]],89],[[[78,[-1]],[78,[-1]]],[[7,[36]]],89],[[79,79],[[7,[36]]]],[[[90,[[85,[-1]]]],91],92,[]],[[[90,[[87,[-1]]]],91],92,[]],[[[82,[-1]]],12,83],[[-1,[55,[77]]],[[90,[[94,[93]]]]],[]],[[[82,[-1]],[55,[77]]],[[4,[85,0]]],83],[[[82,[-1]],[55,[77]]],[[4,[87,0]]],83],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]]],"c":[],"p":[[3,"DeviceController",0],[3,"InterruptInfo",353],[4,"InterruptAllocationError",353],[4,"Result",707],[4,"MailboxPriority",708],[15,"u64"],[4,"Option",709],[3,"BusTreeRoot",0],[3,"DeviceChildrenIterator",242],[3,"Device",242],[3,"DeviceEventStream",353],[15,"tuple"],[3,"TypeId",710],[3,"PcieCapabilityHeader",29],[3,"MsiCapability",29],[3,"MsixCapability",29],[3,"MsixTableEntry",29],[3,"PcieFunctionHeader",29],[3,"PcieDeviceHeader",29],[3,"PcieBridgeHeader",29],[3,"Formatter",711],[6,"Result",711],[4,"PcieCapability",29],[3,"PcieInfo",29],[3,"Error",711],[3,"PcieDeviceInfo",29],[3,"ReadWrite",712],[3,"VolatilePtr",713],[15,"usize"],[15,"u32"],[3,"PcieCapabilityIterator",29],[4,"PcieKactionSpecific",29],[4,"BusType",242],[3,"DeviceRepr",242],[4,"DeviceType",242],[4,"Ordering",714],[15,"bool"],[3,"InfoObject",242],[3,"MmioObject",242],[3,"MmioInfo",708],[15,"u8"],[3,"ReadOnly",712],[3,"VolatileRef",715],[4,"KactionCmd",716],[3,"KactionFlags",716],[4,"KactionValue",716],[4,"KactionError",716],[3,"KsoHdr",716],[3,"DeviceId",708],[3,"InterruptVector",708],[3,"DeviceInterruptFlags",708],[3,"ThreadSyncSleep",717],[3,"BaseVersion",718],[3,"BaseTag",718],[15,"slice"],[3,"String",719],[3,"Duration",720],[3,"DmaRegion",391],[4,"Access",391],[8,"DeviceSync",391],[3,"DmaSliceRegion",391],[3,"DmaOptions",391],[3,"DmaPool",391],[8,"Clone",721],[8,"Fn",722],[4,"PinError",391],[4,"SyncMode",391],[3,"CreateSpec",723],[3,"DmaObject",391],[8,"IntoIterator",724],[3,"Object",725],[8,"Hasher",726],[3,"DmaPin",391],[3,"Range",727],[8,"FnOnce",722],[3,"ResponseInfo",580],[3,"SubmitRequest",580],[4,"SubmitSummaryWithResponses",580],[4,"SubmitSummary",580],[8,"Ord",714],[8,"Send",728],[3,"Requester",580],[8,"RequestDriver",580],[8,"PartialEq",714],[3,"InFlightFuture",580],[8,"Debug",711],[3,"InFlightFutureWithResponses",580],[8,"Hash",726],[8,"PartialOrd",714],[3,"Pin",729],[3,"Context",730],[4,"Poll",731],[8,"Future",732],[3,"Box",733]]},\
"twizzler_net":{"doc":"","t":"NNNNNENDDNNNNNNDDNNNDDNNNDSNNNNEENNNNEEENALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFNNDENENNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Both","Close","Close","CloseConnection","CloseConnection","CloseInfo","Connect","Connection","ConnectionId","ConnectionReady","Echo","EchoReply","Error","InvalidArgument","Listen","ListenFlags","ListenInfo","ListenIpv4","ListenReady","NewConnection","NmHandle","NmOpenObjects","NoSuchConnection","Nothing","Nothing","PacketData","RAW","Recv","RecvFromIpv4","Reset","Rx","RxCompletion","RxRequest","Send","SendToIpv4","StopListen","Tx","TxCompletion","TxCompletionError","TxRequest","Unknown","addr","address","all","allocatable_buffer_controller","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","client_name","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","complement","contains","difference","drop","empty","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","extend","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","get_incoming_buffer","handle","hash","id","insert","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","is_all","is_closed","is_dead","is_empty","is_network_manager_ready","is_terminated","new","not","open_nm_handle","partial_cmp","partial_cmp","partial_cmp","partial_cmp","remove","set","set_closed","set_dead","sub","sub_assign","submit","submit_no_wait","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","wait_until_network_manager_ready","Icmp","Ipv4","Ipv4Addr","NodeAddr","Null","ServiceAddr","Tcp","Udp","any","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","cmp","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","is_localhost","localhost","partial_cmp","partial_cmp","partial_cmp","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","BufferBase","BufferController","ManagedBuffer","allocate","as_bytes","as_bytes_mut","as_packet_data","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","buffer_len","copy_in","drop","from","from","from","get_data_mut","get_slice","get_slice_mut","init","into","into","into","new_unowned","release","set_len","tags","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":[[0,"twizzler_net"],[251,"twizzler_net::addr"],[310,"twizzler_net::buffer"],[349,"core::cmp"],[350,"core::iter::traits::collect"],[351,"core::fmt"],[352,"core::fmt"],[353,"alloc::sync"],[354,"twizzler_queue_raw"],[355,"core::result"],[356,"core::ops::function"],[357,"core::hash"],[358,"twizzler_abi::object"],[359,"core::any"],[360,"alloc::string"],[361,"core::mem::maybe_uninit"],[362,"twizzler_abi::marker"],[363,"twizzler_abi::marker"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the set containing all flags.","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","","","Returns <code>true</code> if no flags are currently stored.","","","","Returns the complement of this set of flags.","","","","","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","","","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","",""],"i":[12,14,16,14,16,0,16,0,0,18,16,14,18,17,16,0,0,16,18,14,0,0,17,15,18,0,5,14,14,12,12,0,0,16,16,16,12,0,0,0,17,0,1,5,6,5,5,5,5,5,5,5,6,10,11,12,13,14,15,5,1,16,17,18,24,6,10,11,12,13,14,15,5,1,16,17,18,24,0,6,10,11,12,13,14,15,5,1,16,17,18,10,11,12,13,14,15,5,1,16,17,18,11,12,5,1,5,5,5,6,5,11,12,5,1,11,12,5,1,5,1,6,10,11,12,13,14,15,5,5,5,5,5,1,16,17,18,24,6,10,11,11,12,13,14,15,5,1,16,17,18,24,5,5,5,5,6,6,5,6,5,5,5,6,10,11,12,13,14,15,5,1,16,17,18,24,5,6,6,5,0,6,1,5,0,11,12,5,1,5,5,6,6,5,5,6,6,5,10,11,12,13,14,15,5,1,16,17,18,5,6,10,11,12,13,14,15,5,1,16,17,18,24,6,10,11,12,13,14,15,5,1,16,17,18,24,6,10,11,12,13,14,15,5,1,16,17,18,24,5,0,3,2,0,0,3,0,3,3,3,35,2,3,35,2,3,35,2,3,35,2,3,35,2,3,35,2,3,35,2,3,35,35,2,3,35,35,2,3,35,2,3,35,35,35,2,3,35,2,3,35,35,2,3,35,2,3,35,2,3,0,0,0,7,27,27,27,41,7,27,41,7,27,27,27,27,41,7,27,27,7,7,41,41,7,27,27,7,27,41,41,7,27,41,7,27,41,7,27],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,[[4,[2,3]]]],[[],5],[6,7],[[5,5],5],[[5,5],4],[[5,5],5],[[5,5],4],[5,8],[[5,5],5],[[5,5],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[6,9],[10,10],[11,11],[12,12],[13,13],[14,14],[15,15],[5,5],[1,1],[16,16],[17,17],[18,18],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[11,11],19],[[12,12],19],[[5,5],19],[[1,1],19],[5,5],[[5,5],20],[[5,5],5],[6,4],[[],5],[[11,11],20],[[12,12],20],[[5,5],20],[[1,1],20],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[5,-1],4,21],[1,5],[[6,22],23],[[10,22],23],[[11,22],23],[[12,22],23],[[13,22],23],[[14,22],23],[[15,22],23],[[5,22],23],[[5,22],23],[[5,22],23],[[5,22],23],[[5,22],23],[[1,22],23],[[16,22],23],[[17,22],23],[[18,22],23],[[24,22],23],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[25,11],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[8,[[26,[5]]]],[8,5],[8,5],[-1,5,21],[[6,10],27],[[[28,[6]],-1],[[30,[4,29]]],31],[[5,-1],4,32],[6,25],[[5,5],4],[[5,5],5],[[5,5],20],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[5,20],[6,20],[6,20],[5,20],[33,20],[6,20],[[2,3,5],1],[5,5],[9,[[26,[6]]]],[[11,11],[[26,[19]]]],[[12,12],[[26,[19]]]],[[5,5],[[26,[19]]]],[[1,1],[[26,[19]]]],[[5,5],4],[[5,5,20],4],[6,4],[6,4],[[5,5],5],[[5,5],4],[[6,16],[[30,[18,29]]]],[[6,16],4],[[5,5],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[5,5],4],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[[5,5],5],[33,4],0,0,0,0,0,0,0,0,[3,3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[35,35],[2,2],[3,3],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[35,35],19],[[2,2],19],[[3,3],19],[[35,35],20],[[2,2],20],[[3,3],20],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[35,22],23],[[35,22],23],[[2,22],23],[[3,22],23],[-1,-1,[]],[8,35],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[35,20],[[],35],[[35,35],[[26,[19]]]],[[2,2],[[26,[19]]]],[[3,3],[[26,[19]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,36,[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],0,0,0,[7,27],[27,[[38,[37]]]],[27,[[38,[37]]]],[27,10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[27,39],[[27,[38,[37]]],4],[27,4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[27,39],[[40,[-1]]],[]],[[7,8,39],[[38,[37]]]],[[7,8,39],[[38,[37]]]],[-1,41,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[7,8,39],27],[[7,8],4],[[27,39],4],[[],[[38,[[4,[42,43]]]]]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,34,[]],[-1,34,[]],[-1,34,[]]],"c":[],"p":[[3,"ListenInfo",0],[4,"NodeAddr",251],[4,"ServiceAddr",251],[15,"tuple"],[3,"ListenFlags",0],[3,"NmHandle",0],[3,"BufferController",310],[15,"u32"],[15,"str"],[3,"PacketData",0],[3,"ConnectionId",0],[4,"CloseInfo",0],[3,"Connection",0],[4,"RxRequest",0],[4,"RxCompletion",0],[4,"TxRequest",0],[4,"TxCompletionError",0],[4,"TxCompletion",0],[4,"Ordering",349],[15,"bool"],[8,"IntoIterator",350],[3,"Formatter",351],[6,"Result",351],[3,"NmOpenObjects",0],[15,"u64"],[4,"Option",352],[3,"ManagedBuffer",310],[3,"Arc",353],[4,"QueueError",354],[4,"Result",355],[8,"Fn",356],[8,"Hasher",357],[3,"ObjID",358],[3,"TypeId",359],[3,"Ipv4Addr",251],[3,"String",360],[15,"u8"],[15,"slice"],[15,"usize"],[19,"MaybeUninit",361],[3,"BufferBase",310],[3,"BaseVersion",362],[3,"BaseTag",362]]},\
"twizzler_object":{"doc":"The twizzler-object crate.","t":"NEDSNNNNDDEDNNDSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAALLLLLLLLLLLLLLLALLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDIDILLLLLLLLLLLLKLLKLLLLLLLLDLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLFLLLLLLLLLLLL","n":["Create","CreateError","CreateSpec","EXEC","Init","InvalidId","InvalidProtections","MappingFailed","ObjID","Object","ObjectInitError","ObjectInitFlags","ObjectNotFound","OutOfSlots","Protections","READ","WRITE","all","all","as_ref","as_u128","base","base_mut_unchecked","base_unchecked","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","complement","complement","contains","contains","create","create_with","difference","difference","empty","empty","eq","eq","eq","equivalent","equivalent","equivalent","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","get_fote_unguarded","hash","hash","hash","id","init_id","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","is_all","is_all","is_empty","is_empty","key","marker","meta","meta","meta_flags","meta_kuid","meta_nonce","meta_tag","meta_version","metaext","new","new","new_from_parts","not","not","partial_cmp","partial_cmp","partial_cmp","ptr","raw_lea","raw_lea_mut","remove","remove","set","set","slot","slot","split","src","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","tie","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","toggle","toggle","transmute","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","BaseTag","BaseType","BaseVersion","ObjSafe","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","fmt","fmt","from","from","init","into","into","tags","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","FotEntry","borrow","borrow_mut","from","into","try_from","try_into","type_id","AtomicInvPtr","InvPtr","borrow","borrow","borrow_mut","borrow_mut","from","from","from_parts","from_parts","inner","into","into","is_null","is_null","is_null_unguarded","null","null","parts","parts","parts_unguarded","raw_inner","try_from","try_from","try_into","try_into","type_id","type_id","Slot","borrow","borrow_mut","drop","from","get","get_fote_unguarded","id","into","prot","raw_lea","raw_lea_mut","try_from","try_into","type_id","vaddr_base","vaddr_meta","vaddr_null"],"q":[[0,"twizzler_object"],[213,"twizzler_object::marker"],[241,"twizzler_object::meta"],[249,"twizzler_object::ptr"],[277,"twizzler_object::slot"],[295,"core::result"],[296,"core::cmp"],[297,"core::ops::function"],[298,"core::iter::traits::collect"],[299,"core::fmt"],[300,"core::fmt"],[301,"twizzler_runtime_api"],[302,"twizzler_abi::syscall::map"],[303,"twizzler_runtime_api"],[304,"core::hash"],[305,"twizzler_abi::meta"],[306,"core::ptr::non_null"],[307,"twizzler_abi::meta"],[308,"twizzler_abi::syscall::create"],[309,"core::any"],[310,"core::sync::atomic"]],"d":["","Possible object creation errors.","A builder-pattern type for making a new object.","Exec allowed.","","The ID isn’t valid.","The requested protections are invalid.","The mapping failed.","An object ID, represented as a transparent wrapper type. …","A handle for an object with base type T.","Possible errors from initializing an object handle.","Flags to pass to object initialization routines.","The object doesn’t exist.","There are not enough memory slots.","Mapping protections for mapping objects into the address …","Read allowed.","Write allowed.","Returns the set containing all flags.","Returns the set containing all flags.","","","Get a reference to the base of an object. Checks to see if …","Get a mutable reference to the base of an object, …","Get a reference to the base of an object, bypassing …","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Create an object, setting up the initial value for base …","Create an object, setting up the initial value for the …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","Get a mutable pointer to one of the object’s FOT entries.","","","","Get the ID of this object.","Initialize an object handle from an object ID.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Set the public key ID for this new object.","","","Get a mutable reference to the object’s meta info struct.","Get the meta flags of the object.","Get the public key ID of the object.","Get the nonce of the object.","Get the base tag of the object.","Get the base version of the object.","Get a mutable reference to the object’s first meta …","Construct a basic CreateSpec.","Create a new ObjID out of a 128 bit value.","Build a new ObjID out of a high part and a low part.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","","Get a raw pointer into an object given an offset.","Get a raw mutable pointer into an object given an offset.","Removes the specified flags in-place.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","","Get the slot of this object.","Split an object ID into upper and lower values, useful for …","Add a source for object creation.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Add a tie to another object.","","","","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Tag for a base type. Each base type must have a unique tag.","Trait that all base types must implement.","Version for a base type.","This auto trait specifies that some type is “safe” to …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Construct a new base type.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns a list of valid tags and versions for this type.","","","","","","","","","An entry in the FOT.","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","An atomic invariant pointer. Allows reading through an …","The raw invariant pointer, containing just a 64-bit packed …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Construct an InvPtr from an FOT entry and an offset.","Construct an InvPtr from an FOT entry and an offset.","Get a reference to the inner raw 64 bits of the invariant …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Check if an invariant pointer is null.","Check if an invariant pointer is null.","Check if an invariant pointer is null.","Construct a null raw pointer.","Construct a null raw pointer.","Read the invariant pointer into its raw parts.","Read the invariant pointer into its raw parts.","Read the invariant pointer into its raw parts.","Get a reference to the inner raw 64 bits of the invariant …","","","","","","","A slot for an object in active memory. All unique …","","","","Returns the argument unchanged.","Get a slot for an object and protections combo.","Get a mutable pointer to one of the slot’s object’s …","Get the ID of the object in this slot.","Calls <code>U::from(self)</code>.","Get the protections of this slot.","Perform a raw load-effective-address for an offset into a …","Perform a raw load-effective-address for an offset into a …","","","","Get the vaddr of this slot’s object base.","Get the vaddr of this slot’s object’s meta page.","Get the vaddr of this slot’s object’s null page."],"i":[11,0,0,2,11,12,12,12,0,0,0,0,12,12,0,2,2,1,2,3,3,5,5,5,1,2,1,2,1,2,1,2,1,2,1,2,1,2,15,5,11,1,12,3,2,15,5,11,1,12,3,2,5,11,1,12,3,2,5,11,1,12,3,2,1,3,2,1,2,1,2,5,5,1,2,1,2,1,3,2,1,3,2,1,2,11,1,1,1,1,1,12,3,3,3,3,2,2,2,2,2,15,5,5,11,1,12,12,12,3,3,2,2,1,2,1,2,1,2,1,2,5,1,3,2,5,5,1,2,1,2,1,2,15,5,11,1,12,3,2,1,2,1,2,15,0,0,5,5,5,5,5,5,5,15,3,3,1,2,1,3,2,0,5,5,1,2,1,2,0,5,3,15,1,2,1,2,1,2,15,5,11,1,12,3,2,3,1,2,5,15,5,11,1,12,3,2,15,5,11,1,12,3,2,15,5,11,1,12,3,2,1,2,0,0,0,0,35,34,35,34,35,34,35,34,35,34,35,34,7,35,34,7,35,34,35,34,35,34,35,34,0,28,28,28,28,28,28,28,0,0,45,46,45,46,45,46,45,46,46,45,46,45,46,45,45,46,45,46,45,45,45,46,45,46,45,46,0,21,21,21,21,0,21,21,21,21,21,21,21,21,21,21,21,21],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],2],[3,3],[3,4],[[[5,[-1]]],[[6,[-1,0]]],[7,8]],[[[5,[-1]]],-1,[]],[[[5,[-1]]],-1,[]],[[1,1],1],[[2,2],2],[[1,1],9],[[2,2],9],[[1,1],1],[[2,2],2],[[1,1],9],[[2,2],9],[1,10],[2,10],[[1,1],1],[[2,2],2],[[1,1],9],[[2,2],9],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[5,[-1]]],[[5,[-1]]],[]],[11,11],[1,1],[12,12],[3,3],[2,2],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[1,1],13],[[3,3],13],[[2,2],13],[1,1],[2,2],[[1,1],14],[[2,2],14],[[15,-1],[[6,[[5,[-2]],11]]],[],7],[[15,-1],[[6,[[5,[-2]],11]]],16,[]],[[1,1],1],[[2,2],2],[[],1],[[],2],[[1,1],14],[[3,3],14],[[2,2],14],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[1,-1],9,17],[[2,-1],9,17],[[11,18],19],[[1,18],19],[[1,18],19],[[1,18],19],[[1,18],19],[[1,18],19],[[12,18],19],[[3,18],[[6,[9,20]]]],[[3,18],[[6,[9,20]]]],[[3,18],[[6,[9,20]]]],[[3,18],[[6,[9,20]]]],[[2,18],[[6,[9,20]]]],[[2,18],[[6,[9,20]]]],[[2,18],[[6,[9,20]]]],[[2,18],[[6,[9,20]]]],[[2,18],[[6,[9,20]]]],[-1,-1,[]],[[[22,[21]]],[[5,[-1]]],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[23,12],[-1,-1,[]],[24,12],[4,3],[-1,-1,[]],[25,2],[-1,-1,[]],[10,[[26,[1]]]],[10,[[26,[2]]]],[10,1],[10,2],[10,1],[10,2],[-1,1,17],[-1,2,17],[[[5,[-1]],27],28,[]],[[1,-1],9,29],[[3,-1],9,29],[[2,-1],9,29],[[[5,[-1]]],3,[]],[[3,2,1],[[6,[[5,[-1]],12]]],[]],[[1,1],9],[[2,2],9],[[1,1],1],[[2,2],2],[[1,1],14],[[2,2],14],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,14],[2,14],[1,14],[2,14],[[15,3],15],0,0,[[[5,[-1]]],[[31,[30]]],[]],[[[5,[-1]]],32,[]],[[[5,[-1]]],3,[]],[[[5,[-1]]],33,[]],[[[5,[-1]]],34,[]],[[[5,[-1]]],35,[]],[[[5,[-1]]],[[31,[36]]],[]],[[37,38],15],[4,3],[[39,39],3],[1,1],[2,2],[[1,1],[[26,[13]]]],[[3,3],[[26,[13]]]],[[2,2],[[26,[13]]]],0,[[[5,[-1]],27],[],[]],[[[5,[-1]],27],[],[]],[[1,1],9],[[2,2],9],[[1,1,14],9],[[2,2,14],9],0,[[[5,[-1]]],[[22,[21]]],[]],[3,[[9,[39,39]]]],[[15,40],15],[[1,1],1],[[2,2],2],[[1,1],9],[[2,2],9],[[1,1],1],[[2,2],2],[[15,[5,[-1]],41],15,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,42,[]],[[1,1],9],[[2,2],9],[[[5,[-1]]],[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,43,[]],[-1,43,[]],[-1,43,[]],[-1,43,[]],[-1,43,[]],[-1,43,[]],[-1,43,[]],[[1,1],1],[[2,2],2],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[35,35],[34,34],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[35,18],[[6,[9,20]]]],[[34,18],[[6,[9,20]]]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[44,[[9,[35,34]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,43,[]],[-1,43,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,43,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[[27,39],[[45,[-1]]],[]],[[27,39],[[46,[-1]]],[]],[[[46,[-1]]],47,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[45,[-1]]],14,[]],[[[46,[-1]]],14,[]],[[[45,[-1]]],14,[]],[[],[[45,[-1]]],[]],[[],[[46,[-1]]],[]],[[[45,[-1]]],[[9,[27,39]]],[]],[[[46,[-1]]],[[9,[27,39]]],[]],[[[45,[-1]]],[[9,[27,39]]],[]],[[[45,[-1]]],39,[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,43,[]],[-1,43,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[21,9],[-1,-1,[]],[[3,2],[[6,[[22,[21]],12]]]],[[21,27],28],[21,3],[-1,-2,[],[]],[21,2],[[21,27]],[[21,27]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,43,[]],[21,27],[21,27],[21,27]],"c":[],"p":[[3,"ObjectInitFlags",0],[3,"Protections",0],[3,"ObjID",0],[15,"u128"],[3,"Object",0],[4,"Result",295],[8,"BaseType",213],[8,"ObjSafe",213],[15,"tuple"],[15,"u32"],[4,"CreateError",0],[4,"ObjectInitError",0],[4,"Ordering",296],[15,"bool"],[3,"CreateSpec",0],[8,"FnOnce",297],[8,"IntoIterator",298],[3,"Formatter",299],[6,"Result",299],[3,"Error",299],[3,"Slot",277],[3,"Arc",300],[4,"MapError",301],[4,"ObjectMapError",302],[3,"MapFlags",301],[4,"Option",303],[15,"usize"],[3,"FotEntry",241],[8,"Hasher",304],[3,"MetaInfo",305],[3,"NonNull",306],[3,"MetaFlags",305],[3,"Nonce",305],[3,"BaseTag",213],[3,"BaseVersion",213],[3,"MetaExt",305],[4,"LifetimeType",307],[4,"BackingType",307],[15,"u64"],[3,"ObjectSource",307],[3,"CreateTieFlags",307],[3,"String",308],[3,"TypeId",309],[15,"slice"],[3,"InvPtr",249],[3,"AtomicInvPtr",249],[3,"AtomicU64",310]]},\
"twizzler_queue":{"doc":"Provides a duplex send/completion queue, where each …","t":"DSSDDEDDDNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["CallbackQueueReceiver","NON_BLOCK","NON_BLOCK","Queue","QueueBase","QueueError","QueueSender","ReceiveFlags","SubmissionFlags","Unknown","WouldBlock","all","all","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","cmp","com_buf","com_hdr","complement","complement","complete","complete","contains","contains","create","difference","difference","empty","empty","eq","eq","eq","equivalent","equivalent","equivalent","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","get_completion","handle","hash","hash","init","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","is_all","is_all","is_empty","is_empty","new","new","not","not","object","partial_cmp","partial_cmp","partial_cmp","receive","receive","remove","remove","set","set","setup_read_com_sleep","setup_read_sub_sleep","setup_write_com_sleep","setup_write_sub_sleep","sub","sub","sub_assign","sub_assign","sub_buf","sub_hdr","submit","submit_and_wait","submit_no_wait","symmetric_difference","symmetric_difference","tags","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union"],"q":[[0,"twizzler_queue"],[178,"core::cmp"],[179,"core::result"],[180,"core::marker"],[181,"twizzler_object::create"],[182,"twizzler_object::create"],[183,"core::fmt"],[184,"core::fmt"],[185,"core::option"],[186,"core::ops::function"],[187,"core::hash"],[188,"twizzler_abi::syscall::thread_sync"],[189,"twizzler_abi::marker"],[190,"twizzler_abi::marker"]],"d":["A receiver-side async-enabled queue abstraction.","If the request would block, return Err([…","If the request would block, return Err([…","A single queue, holding two subqueues (sending and …","The base info structure stored in a Twizzler queue object. …","Possible errors for submitting to a queue.","An async-supported sending-half of a Queue. This is to …","Flags to control how queue receive works.","Flags to control how queue submission works.","An unknown error.","The operation would have blocked, and non-blocking …","Returns the set containing all flags.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Send a completion back to the sender.","Submit a completion item of type C across the completion …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Create a new Twizzler queue object.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","Receive a completion item and id from the completion …","Handle a request in a closure that returns a completion.","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Create a new CallbackQueueReceiver from a Queue.","Build a new QueueSender from a Queue.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Get a handle to the internal object that holds the queue …","","","","Receive a request without immediately returning a …","Receive an item and request id from the sending subqueue.","Removes the specified flags in-place.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Setup a sleep operation for reading the completion …","Setup a sleep operation for reading the sending subqueue.","Setup a sleep operation for writing the completion …","Setup a sleep operation for writing the sending subqueue.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","","","Submit an item of type S across the sending subqueue, with …","Submit an item and await a completion.","Submit a request and don’t wait for a response. WARNING: …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>."],"i":[0,1,2,0,0,0,0,0,0,5,5,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,7,18,10,1,23,2,5,7,18,10,1,23,2,5,1,2,5,1,2,5,1,2,5,18,18,1,2,7,10,1,2,10,1,2,1,2,1,2,5,1,2,5,1,2,1,1,1,1,1,2,2,2,2,2,5,7,18,10,10,1,23,2,5,1,2,1,2,1,2,1,2,10,7,1,2,18,1,2,1,2,1,2,7,18,10,1,23,2,5,1,2,1,2,7,23,1,2,10,1,2,5,7,10,1,2,1,2,10,10,10,10,1,2,1,2,18,18,10,23,23,1,2,18,1,2,5,1,2,7,18,10,1,23,2,5,7,18,10,1,23,2,5,7,18,10,1,23,2,5,1,2],"f":[0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],2],[[1,1],1],[[2,2],2],[[1,1],3],[[2,2],3],[[1,1],1],[[2,2],2],[[1,1],3],[[2,2],3],[1,4],[2,4],[[1,1],1],[[2,2],2],[[1,1],3],[[2,2],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[2,2],[5,5],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[1,1],6],[[2,2],6],[[5,5],6],0,0,[1,1],[2,2],[[[7,[-1,-2]],4,-2],[[8,[3,5]]],9,9],[[[10,[-1,-2]],4,-2,1],[[8,[3,5]]],9,9],[[1,1],11],[[2,2],11],[[12,13,13],[[8,[[10,[-1,-2]],14]]],9,9],[[1,1],1],[[2,2],2],[[],1],[[],2],[[1,1],11],[[2,2],11],[[5,5],11],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[1,-1],3,15],[[2,-1],3,15],[[1,16],[[8,[3,17]]]],[[1,16],[[8,[3,17]]]],[[1,16],[[8,[3,17]]]],[[1,16],[[8,[3,17]]]],[[1,16],[[8,[3,17]]]],[[2,16],[[8,[3,17]]]],[[2,16],[[8,[3,17]]]],[[2,16],[[8,[3,17]]]],[[2,16],[[8,[3,17]]]],[[2,16],[[8,[3,17]]]],[[5,16],[[8,[3,17]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[19,[[18,[-1,-2]]]]],[[10,[-1,-2]]],9,9],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[4,[[20,[1]]]],[4,[[20,[2]]]],[4,1],[4,2],[4,1],[4,2],[-1,1,15],[-1,2,15],[[[10,[-1,-2]],2],[[8,[[3,[4,-2]],5]]],9,9],[[[7,[-1,-2]],-3],[[8,[3,5]]],9,9,21],[[1,-1],3,22],[[2,-1],3,22],[-1,[[18,[-2,-3]]],[],[],[]],[[1,1],3],[[2,2],3],[[1,1],1],[[2,2],2],[[1,1],11],[[2,2],11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,11],[2,11],[1,11],[2,11],[[[10,[-1,-2]]],[[7,[-1,-2]]],9,9],[[[10,[-1,-2]]],[[23,[-1,-2]]],9,9],[1,1],[2,2],[[[10,[-1,-2]]],[[19,[[18,[-1,-2]]]]],9,9],[[1,1],[[20,[6]]]],[[2,2],[[20,[6]]]],[[5,5],[[20,[6]]]],[[[7,[-1,-2]]],[[8,[[3,[4,-1]],5]]],9,9],[[[10,[-1,-2]],2],[[8,[[3,[4,-1]],5]]],9,9],[[1,1],3],[[2,2],3],[[1,1,11],3],[[2,2,11],3],[[[10,[-1,-2]]],24,9,9],[[[10,[-1,-2]]],24,9,9],[[[10,[-1,-2]]],24,9,9],[[[10,[-1,-2]]],24,9,9],[[1,1],1],[[2,2],2],[[1,1],3],[[2,2],3],0,0,[[[10,[-1,-2]],4,-1,1],[[8,[3,5]]],9,9],[[[23,[-1,-2]],-1],[[8,[-2,5]]],9,9],[[[23,[-1,-2]],-1,1],3,9,9],[[1,1],1],[[2,2],2],[[],[[27,[[3,[25,26]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[1,1],3],[[2,2],3],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[[1,1],1],[[2,2],2]],"c":[],"p":[[3,"SubmissionFlags",0],[3,"ReceiveFlags",0],[15,"tuple"],[15,"u32"],[4,"QueueError",0],[4,"Ordering",178],[3,"CallbackQueueReceiver",0],[4,"Result",179],[8,"Copy",180],[3,"Queue",0],[15,"bool"],[3,"CreateSpec",181],[15,"usize"],[4,"CreateError",181],[8,"IntoIterator",182],[3,"Formatter",183],[3,"Error",183],[3,"QueueBase",0],[3,"Object",184],[4,"Option",185],[8,"FnOnce",186],[8,"Hasher",187],[3,"QueueSender",0],[3,"ThreadSyncSleep",188],[3,"BaseVersion",189],[3,"BaseTag",189],[15,"slice"],[3,"TypeId",190]]},\
"twizzler_queue_raw":{"doc":"A raw queue interface for Twizzler, making no assumptions …","t":"SSDDEDDDDNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["NON_BLOCK","NON_BLOCK","QueueBase","QueueEntry","QueueError","RawQueue","RawQueueHdr","ReceiveFlags","SubmissionFlags","Unknown","WouldBlock","all","all","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","com_buf","com_hdr","complement","complement","contains","contains","default","difference","difference","empty","empty","eq","eq","eq","equivalent","equivalent","equivalent","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","hash","hash","info","init","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","is_all","is_all","is_empty","is_empty","item","multi_receive","new","new","new","not","not","partial_cmp","partial_cmp","partial_cmp","receive","remove","remove","set","set","setup_send_sleep_simple","setup_sleep","setup_sleep_simple","sub","sub","sub_assign","sub_assign","sub_buf","sub_hdr","submit","symmetric_difference","symmetric_difference","tags","to_owned","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union"],"q":[[0,"twizzler_queue_raw"],[176,"core::clone"],[177,"core::cmp"],[178,"core::default"],[179,"core::iter::traits::collect"],[180,"core::fmt"],[181,"core::fmt"],[182,"core::hash"],[183,"core::result"],[184,"core::marker"],[185,"core::ops::function"],[186,"core::sync::atomic"],[187,"twizzler_abi::marker"],[188,"twizzler_abi::marker"]],"d":["If the request would block, return Err([…","If the request would block, return Err([…","The base info structure stored in a Twizzler queue object. …","A queue entry. All queues must be formed of these, as the …","Possible errors for submitting to a queue.","A raw queue, comprising of a header to track the algorithm …","A raw queue header. This contains all the necessary …","Flags to control how queue receive works.","Flags to control how queue submission works.","An unknown error.","The operation would have blocked, and non-blocking …","Returns the set containing all flags.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","Get the info tag of a QueueEntry.","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Get the data item of a QueueEntry.","Wait for receiving on multiple raw queues. If any of the …","Construct a new raw queue header.","Construct a new raw queue out of a header reference and a …","Construct a new QueueEntry. The <code>info</code> tag should be used to …","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","Receive data from the queue, returning either that data or …","Removes the specified flags in-place.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","","","","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","","","Submit a data item of type T, wrapped in a QueueEntry, to …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>."],"i":[1,2,0,0,0,0,0,0,0,7,7,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,17,24,18,5,1,2,7,17,24,18,5,1,2,7,5,1,2,7,5,1,2,7,1,2,7,17,17,1,2,1,2,5,1,2,1,2,1,2,7,1,2,7,1,2,5,1,1,1,1,1,2,2,2,2,2,7,17,24,18,5,1,2,7,1,2,1,2,1,2,1,2,1,2,5,17,1,2,1,2,1,2,17,24,18,5,1,2,7,1,2,1,2,5,0,24,18,5,1,2,1,2,7,18,1,2,1,2,18,18,18,1,2,1,2,17,17,18,1,2,17,5,1,2,7,1,2,17,24,18,5,1,2,7,17,24,18,5,1,2,7,17,24,18,5,1,2,7,1,2],"f":[0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],2],[[1,1],1],[[2,2],2],[[1,1],3],[[2,2],3],[[1,1],1],[[2,2],2],[[1,1],3],[[2,2],3],[1,4],[2,4],[[1,1],1],[[2,2],2],[[1,1],3],[[2,2],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[5,[-1]]],[[5,[-1]]],6],[1,1],[2,2],[7,7],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[1,1],8],[[2,2],8],[[7,7],8],0,0,[1,1],[2,2],[[1,1],9],[[2,2],9],[[],[[5,[-1]]],10],[[1,1],1],[[2,2],2],[[],1],[[],2],[[1,1],9],[[2,2],9],[[7,7],9],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[1,-1],3,11],[[2,-1],3,11],[[[5,[-1]],12],13,14],[[1,12],13],[[1,12],13],[[1,12],13],[[1,12],13],[[1,12],13],[[2,12],13],[[2,12],13],[[2,12],13],[[2,12],13],[[2,12],13],[[7,12],13],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[4,[[15,[1]]]],[4,[[15,[2]]]],[4,1],[4,2],[4,1],[4,2],[-1,1,11],[-1,2,11],[[1,-1],3,16],[[2,-1],3,16],[[[5,[-1]]],4,[]],[-1,[[17,[-2,-3]]],[],[],[]],[[1,1],3],[[2,2],3],[[1,1],1],[[2,2],2],[[1,1],9],[[2,2],9],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,9],[2,9],[1,9],[2,9],[[[5,[-1]]],-1,[]],[[[19,[[18,[-1]]]],[19,[[15,[[5,[-1]]]]]],-2,-3,2],[[21,[20,7]]],22,23,23],[[20,20],24],[[24,5],[[18,[-1]]],22],[[4,-1],[[5,[-1]]],[]],[1,1],[2,2],[[1,1],[[15,[8]]]],[[2,2],[[15,[8]]]],[[7,7],[[15,[8]]]],[[[18,[-1]],-2,-3,2],[[21,[[5,[-1]],7]]],22,23,23],[[1,1],3],[[2,2],3],[[1,1,9],3],[[2,2,9],3],[[[18,[-1]]],[[3,[25,26]]],22],[[[18,[-1]],9,[15,[[5,[-1]]]],[3,[[15,[25]],26]],[15,[25]]],[[21,[3,7]]],22],[[[18,[-1]]],[[3,[25,26]]],22],[[1,1],1],[[2,2],2],[[1,1],3],[[2,2],3],0,0,[[[18,[-1]],[5,[-1]],-2,-3,1],[[21,[3,7]]],22,23,23],[[1,1],1],[[2,2],2],[[],[[19,[[3,[27,28]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[1,1],3],[[2,2],3],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[[1,1],1],[[2,2],2]],"c":[],"p":[[3,"SubmissionFlags",0],[3,"ReceiveFlags",0],[15,"tuple"],[15,"u32"],[3,"QueueEntry",0],[8,"Clone",176],[4,"QueueError",0],[4,"Ordering",177],[15,"bool"],[8,"Default",178],[8,"IntoIterator",179],[3,"Formatter",180],[6,"Result",180],[8,"Debug",180],[4,"Option",181],[8,"Hasher",182],[3,"QueueBase",0],[3,"RawQueue",0],[15,"slice"],[15,"usize"],[4,"Result",183],[8,"Copy",184],[8,"Fn",185],[3,"RawQueueHdr",0],[3,"AtomicU64",186],[15,"u64"],[3,"BaseVersion",187],[3,"BaseTag",187],[3,"TypeId",188]]},\
"twizzler_runtime_api":{"doc":"The Twizzler Runtime API is the core interface definition …","t":"DNEDDIISNNNNNNNIGIGEDDNEDENNNNNGDNINNNNNNNNNNSEIIIIIENIDNDSNEKKLMMMLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLKLLLMLLLLLLLLLLLLLKLMKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKKKKKKKFKLLMLLLLLLLLLLLLLLLLLLLLLKMKMMMLMLLLLLLLLLLLLLLMKKLKLKKKMMMMLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKKKKKK","n":["AddrRange","Arguments","AuxEntry","BasicAux","BasicReturn","CoreRuntime","DebugRuntime","EXEC","Environment","ExecId","InternalError","InvalidArgument","InvalidArgument","IoError","IoError","IoRead","IoReadDynCallback","IoWrite","IoWriteDynCallback","JoinError","Library","LibraryId","LookupError","MapError","MapFlags","Monotonicity","NoIo","NoIo","NoSuchObject","NonMonotonic","Null","ObjID","ObjectHandle","ObjectNotFound","ObjectRuntime","Other","Other","Other","Other","OutOfResources","PermissionDenied","PermissionDenied","PermissionDenied","PermissionDenied","ProgramHeaders","READ","ReadError","Runtime","RustFsRuntime","RustProcessRuntime","RustStdioRuntime","RustTimeRuntime","SpawnError","Strict","ThreadRuntime","ThreadSpawnArgs","Timeout","TlsIndex","WRITE","Weak","WriteError","abort","actual_monotonicity","all","arg","argc","args","as_ref","available_parallelism","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","code","complement","contains","default_allocator","difference","drop","empty","env","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","exit","extend","flags","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","futex_wait","futex_wake","futex_wake_all","get_exeid","get_full_mapping","get_library","get_library_segment","get_monotonic","get_runtime","get_system_time","hash","hash","id","insert","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_all","is_empty","join","len","map_object","mapping","meta","mod_id","not","offset","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","post_main_hook","pre_main_hook","range","read","release_handle","remove","runtime_entry","set","set_name","sleep","spawn","stack_size","start","start","start","sub","sub_assign","symmetric_difference","tls_get_addr","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","unmap_object","with_panic_output","with_stderr","with_stdin","with_stdout","write","yield_now"],"q":[[0,"twizzler_runtime_api"],[325,"core::num::nonzero"],[326,"core::cmp"],[327,"core::alloc::global"],[328,"core::iter::traits::collect"],[329,"core::result"],[330,"core::fmt"],[331,"core::fmt"],[332,"core::sync::atomic"],[333,"core::time"],[334,"core::hash"],[335,"core::ffi::c_str"],[336,"core::any"]],"d":["An address range.","A pointer to the arguments array.","Auxillary information provided to a new program on runtime …","Arguments passed by the runtime to libstd.","Return value returned by std from LibStdEntry","Definitions of core runtime features.","Functions for the debug support part of libstd (e.g. …","Exec allowed.","A pointer to the env var array.","The object ID of the executable.","An internal runtime error occurred.","One of the arguments in spawn args was invalid.","An argument to map is invalid.","IO Error","IO Error","Trait for stdin","The type of a callback to an IO Read call (see: …","Trait for stdout/stderr","The type of a callback to an IO Write call (see: …","Possible errors of join.","An abstract representation of a library, useful for …","Internal library ID type.","The internal-thread-ID does not exist.","Possible errors of mapping an object.","Mapping protections for mapping objects into the address …","Possible types of monotonicity.","No such IO mechanism.","No such IO mechanism.","The specified object does not exist.","Not monotonic at all.","Ends the aux array.","Core object ID type in Twizzler.","A handle to an internal object.","An object used as a handle was not found.","All the object related runtime functions.","An error that is not classified.","Error is unclassified.","Unclassified error","Unclassified error","Ran out of resources when trying to map the object.","An object used as a handle may not be accessed by the …","Access is disallowed.","Permission denied","Permission denied","A pointer to this program’s program headers, and the …","Read allowed.","Possible errors from read.","Full runtime trait, composed of smaller traits","Runtime that implements std’s FS support. Currently …","Runtime that implements std’s process and command …","Runtime that implements stdio.","Runtime trait for libstd’s time support","Possible errors on spawn.","Strictly monotonic (function always increases).","All the thread-related runtime functions.","Arguments that std expects to pass to spawn.","Join timed out.","An ABI-defined argument passed to __tls_get_addr.","Write allowed.","Weakly monotonic (function may increase or stay the same).","","Thread abort. This is allowed to cause a full exit of the …","Is the monotonic timestamp monotonic or not?","Returns the set containing all flags.","The argument to the entry point","The number of arguments.","A null-terminated list of null-terminated strings, forming …","","Essentially number of threads on this system","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Exit code. 0 is success, non-zero is application-defined.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns a reference to an allocator to use for default …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","","Returns an empty set of flags.","The environment pointer, also a null-terminated list of …","","","","","","","","","","","","","","Exit the calling thread. This is allowed to cause a full …","","The flags of this handle.","Flush any buffered internal data. This function is allowed …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","Wait for futex (see: Linux)","Wake one for futex (see: Linux)","Wake all for futex (see: Linux)","Returns the ID of the main executable, if there is one.","Get the full mapping of the underlying library.","Gets a handle to a library given the ID.","Get a segment of a library, if the segment index exists. …","Get a monotonic timestamp.","Wrapper around call to __twz_get_runtime.","Get a system time timestamp.","","","The ID of the object.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Wait for the specified thread to terminate, or optionally …","Length of the range.","Map an object to an ObjectHandle. The handle may reference …","How this library is mapped.","A pointer to the object’s metadata.","The ID of the module.","Returns the complement of this set of flags.","The offset into that module’s TLS region.","","","","","","","","","","","","","Called by libstd after returning from main.","Called by libstd before calling main.","Actual range of addresses that comprise the library binary …","Read data into buf, returning the number of bytes read.","Called on drop of an object handle.","Removes the specified flags in-place.","Called by rt0 code to start the runtime. Once the runtime …","Inserts or removes the specified flags depending on the …","Set the name of calling thread","Sleep calling thread","Spawn a thread, returning an internal ID that uniquely …","The initial stack size","Starting virtual address.","The entry point","A pointer to the object’s start (null-page, not base).","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Implements the __tls_get_addr functionality. If the …","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Unmap an object handle.","Execute a closure with an implementer of IoWrite that can …","Execute a closure with an implementer of IoWrite that can …","Execute a closure with an implementer of IoRead that can …","Execute a closure with an implementer of IoWrite that can …","Write data from buf, returning the number of bytes written.","Yield calling thread"],"i":[0,8,0,0,0,0,0,3,8,8,13,10,13,17,18,0,0,0,0,0,0,0,12,0,0,0,17,18,13,2,8,0,0,10,0,10,13,17,18,13,10,13,17,18,8,3,0,0,0,0,0,0,0,2,0,0,12,0,3,2,0,42,43,3,9,15,15,4,44,3,3,3,3,3,3,3,2,4,32,8,9,10,11,12,13,3,14,15,16,17,18,19,2,4,32,8,9,10,11,12,13,3,14,15,16,17,18,19,8,9,10,11,12,13,3,14,15,16,17,18,19,9,10,11,12,13,3,14,15,16,17,18,19,16,3,3,42,3,14,3,15,8,9,10,11,12,13,3,14,15,16,17,18,19,42,3,14,45,8,9,10,11,12,13,3,3,3,3,3,14,15,16,17,18,19,2,4,32,8,9,10,11,12,13,3,14,15,16,17,18,19,3,3,3,3,44,44,44,46,46,46,46,43,0,43,3,19,14,3,3,3,2,4,32,8,9,10,11,12,13,3,14,15,16,17,18,19,3,3,44,32,47,4,14,11,3,11,9,10,11,12,13,3,14,15,16,17,18,19,42,42,4,48,47,3,42,3,44,44,44,9,32,9,14,3,3,3,44,3,2,4,32,8,9,10,11,12,13,3,14,15,16,17,18,19,2,4,32,8,9,10,11,12,13,3,14,15,16,17,18,19,2,4,32,8,9,10,11,12,13,3,14,15,16,17,18,19,3,47,49,49,49,49,45,44],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,1,[]],[-1,2,[]],[[],3],0,0,0,[4,4],[-1,5,[]],[[3,3],3],[[3,3],6],[[3,3],3],[[3,3],6],[3,7],[[3,3],3],[[3,3],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[8,8],[9,9],[10,10],[11,11],[12,12],[13,13],[3,3],[14,14],[15,15],[16,16],[17,17],[18,18],[19,19],[[9,9],20],[[10,10],20],[[11,11],20],[[12,12],20],[[13,13],20],[[3,3],20],[[14,14],20],[[15,15],20],[[16,16],20],[[17,17],20],[[18,18],20],[[19,19],20],0,[3,3],[[3,3],21],[-1,22,[]],[[3,3],3],[14,6],[[],3],0,[[8,8],21],[[9,9],21],[[10,10],21],[[11,11],21],[[12,12],21],[[13,13],21],[[3,3],21],[[14,14],21],[[15,15],21],[[16,16],21],[[17,17],21],[[18,18],21],[[19,19],21],[[-1,23],1,[]],[[3,-1],6,24],0,[-1,[[25,[6,18]]],[]],[[8,26],27],[[9,26],27],[[10,26],27],[[11,26],27],[[12,26],27],[[13,26],27],[[3,26],27],[[3,26],27],[[3,26],27],[[3,26],27],[[3,26],27],[[14,26],27],[[15,26],27],[[16,26],27],[[17,26],27],[[18,26],27],[[19,26],27],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[7,[[28,[3]]]],[7,3],[7,3],[-1,3,24],[[-1,29,7,[28,[30]]],21,[]],[[-1,29],21,[]],[[-1,29],6,[]],[-1,[[28,[19]]],[]],[[-1,4],[[28,[14]]],[]],[[-1,19],[[28,[4]]],[]],[[-1,4,31],[[28,[32]]],[]],[-1,30,[]],[[],33],[-1,30,[]],[[3,-1],6,34],[[19,-1],6,34],0,[[3,3],6],[[3,3],3],[[3,3],21],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[3,21],[3,21],[[-1,7,[28,[30]]],[[25,[6,12]]],[]],0,[[-1,35,3],[[25,[14,13]]],[]],0,0,0,[3,3],0,[[9,9],[[28,[20]]]],[[10,10],[[28,[20]]]],[[11,11],[[28,[20]]]],[[12,12],[[28,[20]]]],[[13,13],[[28,[20]]]],[[3,3],[[28,[20]]]],[[14,14],[[28,[20]]]],[[15,15],[[28,[20]]]],[[16,16],[[28,[20]]]],[[17,17],[[28,[20]]]],[[18,18],[[28,[20]]]],[[19,19],[[28,[20]]]],[-1,6,[]],[-1,6,[]],0,[[-1,[37,[36]]],[[25,[31,17]]],[]],[[-1,14],6,[]],[[3,3],6],[[-1,8],1,[]],[[3,3,21],6],[[-1,38],6,[]],[[-1,30],6,[]],[[-1,9],[[25,[7,10]]],[]],0,0,0,0,[[3,3],3],[[3,3],6],[[3,3],3],[[-1,11],36,[]],[[3,3],6],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[[3,3],3],[[-1,14],6,[]],[[-1,[40,[6]]],6,[]],[[-1,[40,[[25,[31,18]]]]],[[25,[31,18]]],[]],[[-1,[41,[[25,[31,17]]]]],[[25,[31,17]]],[]],[[-1,[40,[[25,[31,18]]]]],[[25,[31,18]]],[]],[[-1,[37,[36]]],[[25,[31,18]]],[]],[-1,6,[]]],"c":[],"p":[[15,"never"],[4,"Monotonicity",0],[3,"MapFlags",0],[3,"Library",0],[3,"NonZeroUsize",325],[15,"tuple"],[15,"u32"],[4,"AuxEntry",0],[3,"ThreadSpawnArgs",0],[4,"SpawnError",0],[3,"TlsIndex",0],[4,"JoinError",0],[4,"MapError",0],[3,"ObjectHandle",0],[3,"BasicAux",0],[3,"BasicReturn",0],[4,"ReadError",0],[4,"WriteError",0],[3,"LibraryId",0],[4,"Ordering",326],[15,"bool"],[8,"GlobalAlloc",327],[15,"i32"],[8,"IntoIterator",328],[4,"Result",329],[3,"Formatter",330],[6,"Result",330],[4,"Option",331],[3,"AtomicU32",332],[3,"Duration",333],[15,"usize"],[3,"AddrRange",0],[8,"Runtime",0],[8,"Hasher",334],[6,"ObjID",0],[15,"u8"],[15,"slice"],[3,"CStr",335],[3,"TypeId",336],[6,"IoWriteDynCallback",0],[6,"IoReadDynCallback",0],[8,"CoreRuntime",0],[8,"RustTimeRuntime",0],[8,"ThreadRuntime",0],[8,"IoWrite",0],[8,"DebugRuntime",0],[8,"ObjectRuntime",0],[8,"IoRead",0],[8,"RustStdioRuntime",0]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
