searchState.loadedDescShard("monitor_api", 0, "This crate exists to break a circular dependency between …\nAn iterator over a compartmen’s dependencies.\nCompartment state flags.\nA compartment handle. On drop, the compartment may be …\nInformation about a compartment.\nA builder-type for loading compartments.\nCompartment destructors have run.\nCompartment thread has exited.\nCompartment is a binary, not a library.\nA handle to a loaded library. On drop, the library may …\nContains information about a library loaded into the …\nAn iterator over libraries in a compartment.\nA builder-type for loading libraries.\nReserved instance ID for the security monitor.\nContains raw mapping addresses, for use when translating …\nCompartment is ready (loaded, reloacated, runtime started …\nCompartment thread has been started once.\nShared data between the monitor and a compartment runtime. …\nCompartment runtime thread may exit.\nInformation about a monitor-generated TLS template.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nAppend args to this compartment.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe compartment of the library\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nGet a handle to the current compartment.\nGet an iterator over this compartment’s dependencies.\nGet the descriptor for this handle, or None if the handle …\nGet the descriptor for this handle.\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe DlPhdrInfo for this library\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nSet the environment for the compartment\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe compartment flags and status.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a reference to this compartment’s SharedCompConfig.\nGet a pointer to the thread control block for this TLS …\nGet the current TLS template for the compartment.\nThe instance ID.\nLoad the library in the given compartment.\nGet the compartment info.\nGet the library info.\nInitialize a newly allocated memory region with a TLS …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nLength of range library was loaded to\nGet an iterator over the libraries for this compartment.\nLoad the library.\nLoad the compartment.\nLookup a compartment by name.\nThe library’s name\nThe name of the compartment.\nMake a new LibraryLoader.\nMake a new compartment loader.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nNumber of libraries\nThe object ID that the library was loaded from\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nGet the root library for this compartment.\nThe root library ID for this compartment. May be None if …\nThe security context that this compartment derives from. …\nThe security context.\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nTries to set the comp config pointer. May fail, as this …\nSet the current TLS template for a compartment. Only the …\nThe slot of the library text.\nThe start address of range the library was loaded to\nGet stats from the monitor\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.")